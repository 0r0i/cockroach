// Copyright 2015 The Cockroach Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
// implied. See the License for the specific language governing
// permissions and limitations under the License. See the AUTHORS file
// for names of contributors.
//
// Author: Bram Gruneir (bram.gruneir@gmail.com)

syntax = "proto2";
package cockroach.proto;
option go_package = "proto";

import "gogoproto/gogo.proto";

option (gogoproto.sizer_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;

// StoreStatus contains the stats needed to calculate the current status of a
// store.
// TODO(bram): add significantly more statistics.
message StoreStatus {  
  // The storeID for this store.
  optional int32 store_id = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "StoreID", (gogoproto.customtype) = "StoreID"];
  // The node id associated with this store.
  optional int32 node_id = 2 [(gogoproto.nullable) = false, (gogoproto.customname) = "NodeID", (gogoproto.customtype) = "NodeID"];
  // A list of the raft_ids (ranges) available through this store.
  repeated int64 raft_ids = 3 [(gogoproto.nullable) = false, (gogoproto.customname) = "RaftIDs"];

  // Time based statistics.
  // The last time this was updated, note that this is not the time it was 
  // written to the DB, but when this measurement was taken.
  optional int64 updated_at = 4 [(gogoproto.nullable) = false];
  // The last time this node was started.
  optional int64 started_at = 5 [(gogoproto.nullable) = false];

  // Size based statistics.
  // The number of bytes currently being used by this store.
  optional int64 used_bytes = 6 [(gogoproto.nullable) = false];
  // The maximum number of bytes available.
  optional int64 max_bytes = 7 [(gogoproto.nullable) = false];
}
