// Copyright 2014 The Cockroach Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
// implied. See the License for the specific language governing
// permissions and limitations under the License. See the AUTHORS file
// for names of contributors.
//
// Author: Jiajia Han (hanjia18@gmail.com)
// Author: Spencer Kimball (spencer.kimball@gmail.com)

package proto;

import "code.google.com/p/gogoprotobuf/gogoproto/gogo.proto";

// Timestamp represents a state of the hybrid logical clock.
message Timestamp {
  // Holds a wall time, typically a unix epoch time
  // expressed in nanoseconds.
  optional int64 wall_time = 1 [(gogoproto.nullable) = false];
  // The logical component captures causality for events whose wall
  // times are equal. It is effectively bounded by (maximum clock
  // skew)/(minimal ns between events) and nearly impossible to
  // overflow.
  optional int64 logical = 2 [(gogoproto.nullable) = false];
}

// Value specifies the value at a key. Multiple values at the same key
// are supported based on timestamp.
message Value {
  // Bytes is the byte string value.
  optional bytes bytes = 1 [(gogoproto.nullable) = false];
  // Checksum is a CRC-32-IEEE checksum. A Value will only be used in
  // a write operation by the database if either its checksum is zero
  // or the CRC checksum of Bytes matches it.
  // Values returned by the database will contain a checksum of the
  // contained value.
  optional uint32 checksum = 2 [(gogoproto.nullable) = false];
  // Timestamp of value.
  optional Timestamp timestamp = 3 [(gogoproto.nullable) = false];
}

// KeyValue is a pair of Key and Value for returned Key/Value pairs
// from ScanRequest/ScanResponse. It embeds a Key and a Value.
message KeyValue {
  optional bytes key = 1 [(gogoproto.nullable) = false];
  optional Value value = 2 [(gogoproto.nullable) = false];
}

// IsolationType TODO(jiajia) Needs documentation.
enum IsolationType {
  option (gogoproto.goproto_enum_prefix) = false;
  // SERIALIZABLE TODO(jiajia) Needs documentation.
  SERIALIZABLE = 0;
  // SNAPSHOT TODO(jiajia) Needs documentation.
  SNAPSHOT = 1;
}

// TransactionStatus TODO(jiajia) Needs documentation.
enum TransactionStatus {
  option (gogoproto.goproto_enum_prefix) = false;
  // PENDING TODO(jiajia) Needs documentation.
  PENDING = 0;
  // COMMITTED TODO(jiajia) Needs documentation.
  COMMITTED = 1;
  // ABORTED TODO(jiajia) Needs documentation.
  ABORTED = 2;
}

// A Transaction is a unit of work performed on the database.
// Cockroach transactions support two isolation levels: snapshot
// isolation and serializable snapshot isolation. Each Cockroach
// transaction is assigned a random priority. This priority will be
// used to decide whether a transaction will be aborted during
// contention.
message Transaction {
  optional string txn_id = 1 [(gogoproto.nullable) = false];
  optional int32 priority = 2 [(gogoproto.nullable) = false];
  optional IsolationType isolation = 3 [(gogoproto.nullable) = false];
  optional TransactionStatus status = 4 [(gogoproto.nullable) = false];
  // Incremented on txn retry.
  optional int32 epoch = 5 [(gogoproto.nullable) = false];
  // 0 to use timestamp at destination.
  optional Timestamp timestamp = 6 [(gogoproto.nullable) = false];
  // Timestamp + clock skew; set to Timestamp for historical read.
  optional Timestamp max_timestamp = 7 [(gogoproto.nullable) = false];
  // The last hearbeat timestamp.
  optional Timestamp last_heartbeat = 8 [(gogoproto.nullable) = false];
}

// MVCCMetadata holds MVCC metadata for a key. Used by storage/engine/mvcc.go.
message MVCCMetadata {
  optional string txn_id = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "TxnID"];
  optional Timestamp timestamp = 2 [(gogoproto.nullable) = false];
}
