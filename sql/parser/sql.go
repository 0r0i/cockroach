// Code generated by go yacc.
//line sql.y:22
package parser

import __yyfmt__ "fmt"

//line sql.y:22
import "github.com/cockroachdb/cockroach/sql/privilege"

func unimplemented() {
	panic("TODO(pmattis): unimplemented")
}

//line sql.y:30
type sqlSymType struct {
	yys            int
	id             int
	pos            int
	empty          struct{}
	ival           int64
	boolVal        bool
	str            string
	strs           []string
	qname          *QualifiedName
	qnames         QualifiedNames
	indirectElem   IndirectionElem
	indirect       Indirection
	stmt           Statement
	stmts          []Statement
	selectStmt     SelectStatement
	colDef         *ColumnTableDef
	constraintDef  ConstraintTableDef
	tblDef         TableDef
	tblDefs        []TableDef
	colConstraint  ColumnConstraint
	colConstraints []ColumnConstraint
	colType        ColumnType
	colTypes       []ColumnType
	expr           Expr
	exprs          Exprs
	selExpr        SelectExpr
	selExprs       SelectExprs
	tblExpr        TableExpr
	tblExprs       TableExprs
	joinCond       JoinCond
	when           *When
	whens          []*When
	updateExpr     *UpdateExpr
	updateExprs    []*UpdateExpr
	limit          *Limit
	targetList     TargetList
	targetListPtr  *TargetList
	privilegeType  privilege.Kind
	privilegeList  privilege.List
	orderBy        OrderBy
	orders         []*Order
	order          *Order
	groupBy        GroupBy
	dir            Direction
	alterTableCmd  AlterTableCmd
	alterTableCmds AlterTableCmds
	isoLevel       IsolationLevel
}

const IDENT = 57346
const FCONST = 57347
const SCONST = 57348
const BCONST = 57349
const ICONST = 57350
const PARAM = 57351
const TYPECAST = 57352
const DOT_DOT = 57353
const LESS_EQUALS = 57354
const GREATER_EQUALS = 57355
const NOT_EQUALS = 57356
const ERROR = 57357
const ABSOLUTE = 57358
const ACCESS = 57359
const ACTION = 57360
const ADD = 57361
const ADMIN = 57362
const AFTER = 57363
const AGGREGATE = 57364
const ALL = 57365
const ALSO = 57366
const ALTER = 57367
const ALWAYS = 57368
const ANALYSE = 57369
const ANALYZE = 57370
const AND = 57371
const ANY = 57372
const ARRAY = 57373
const AS = 57374
const ASC = 57375
const ASSERTION = 57376
const ASSIGNMENT = 57377
const ASYMMETRIC = 57378
const AT = 57379
const ATTRIBUTE = 57380
const AUTHORIZATION = 57381
const BACKWARD = 57382
const BEFORE = 57383
const BEGIN = 57384
const BETWEEN = 57385
const BIGINT = 57386
const BINARY = 57387
const BIT = 57388
const BLOB = 57389
const BOOL = 57390
const BOOLEAN = 57391
const BOTH = 57392
const BY = 57393
const BYTES = 57394
const CACHE = 57395
const CALLED = 57396
const CASCADE = 57397
const CASCADED = 57398
const CASE = 57399
const CAST = 57400
const CHAIN = 57401
const CHAR = 57402
const CHARACTER = 57403
const CHARACTERISTICS = 57404
const CHECK = 57405
const CHECKPOINT = 57406
const CLASS = 57407
const CLOSE = 57408
const CLUSTER = 57409
const COALESCE = 57410
const COLLATE = 57411
const COLLATION = 57412
const COLUMN = 57413
const COLUMNS = 57414
const COMMENT = 57415
const COMMENTS = 57416
const COMMIT = 57417
const COMMITTED = 57418
const CONCAT = 57419
const CONCURRENTLY = 57420
const CONFIGURATION = 57421
const CONFLICT = 57422
const CONNECTION = 57423
const CONSTRAINT = 57424
const CONSTRAINTS = 57425
const CONTENT = 57426
const CONTINUE = 57427
const CONVERSION = 57428
const COPY = 57429
const COST = 57430
const COVERING = 57431
const CREATE = 57432
const CROSS = 57433
const CSV = 57434
const CUBE = 57435
const CURRENT = 57436
const CURRENT_CATALOG = 57437
const CURRENT_DATE = 57438
const CURRENT_ROLE = 57439
const CURRENT_TIME = 57440
const CURRENT_TIMESTAMP = 57441
const CURRENT_USER = 57442
const CURSOR = 57443
const CYCLE = 57444
const DATA = 57445
const DATABASE = 57446
const DATABASES = 57447
const DATE = 57448
const DAY = 57449
const DEALLOCATE = 57450
const DEC = 57451
const DECIMAL = 57452
const DECLARE = 57453
const DEFAULT = 57454
const DEFAULTS = 57455
const DEFERRABLE = 57456
const DEFERRED = 57457
const DEFINER = 57458
const DELETE = 57459
const DELIMITER = 57460
const DELIMITERS = 57461
const DESC = 57462
const DICTIONARY = 57463
const DISABLE = 57464
const DISCARD = 57465
const DISTINCT = 57466
const DO = 57467
const DOMAIN = 57468
const DOUBLE = 57469
const DROP = 57470
const EACH = 57471
const ELSE = 57472
const ENABLE = 57473
const ENCODING = 57474
const ENCRYPTED = 57475
const END = 57476
const ENUM = 57477
const ESCAPE = 57478
const EVENT = 57479
const EXCEPT = 57480
const EXCLUSIVE = 57481
const EXECUTE = 57482
const EXISTS = 57483
const EXPLAIN = 57484
const EXTENSION = 57485
const EXTERNAL = 57486
const EXTRACT = 57487
const FALSE = 57488
const FAMILY = 57489
const FETCH = 57490
const FILTER = 57491
const FIRST = 57492
const FLOAT = 57493
const FOLLOWING = 57494
const FOR = 57495
const FORCE = 57496
const FOREIGN = 57497
const FORWARD = 57498
const FREEZE = 57499
const FROM = 57500
const FULL = 57501
const FUNCTION = 57502
const FUNCTIONS = 57503
const GLOBAL = 57504
const GRANT = 57505
const GRANTED = 57506
const GRANTS = 57507
const GREATEST = 57508
const GROUP = 57509
const GROUPING = 57510
const HANDLER = 57511
const HAVING = 57512
const HEADER = 57513
const HOLD = 57514
const HOUR = 57515
const IDENTITY = 57516
const IF = 57517
const IMMEDIATE = 57518
const IMMUTABLE = 57519
const IMPLICIT = 57520
const IMPORT = 57521
const IN = 57522
const INCLUDING = 57523
const INCREMENT = 57524
const INDEX = 57525
const INDEXES = 57526
const INHERIT = 57527
const INHERITS = 57528
const INITIALLY = 57529
const INLINE = 57530
const INNER = 57531
const INOUT = 57532
const INPUT = 57533
const INSENSITIVE = 57534
const INSERT = 57535
const INSTEAD = 57536
const INT = 57537
const INT64 = 57538
const INTEGER = 57539
const INTERSECT = 57540
const INTERVAL = 57541
const INTO = 57542
const INVOKER = 57543
const IS = 57544
const ISOLATION = 57545
const JOIN = 57546
const KEY = 57547
const LABEL = 57548
const LANGUAGE = 57549
const LARGE = 57550
const LAST = 57551
const LATERAL = 57552
const LEADING = 57553
const LEAKPROOF = 57554
const LEAST = 57555
const LEFT = 57556
const LEVEL = 57557
const LIKE = 57558
const LIMIT = 57559
const LISTEN = 57560
const LOAD = 57561
const LOCAL = 57562
const LOCALTIME = 57563
const LOCALTIMESTAMP = 57564
const LOCATION = 57565
const LOCK = 57566
const LOCKED = 57567
const LOGGED = 57568
const LSHIFT = 57569
const MAPPING = 57570
const MATCH = 57571
const MATERIALIZED = 57572
const MAXVALUE = 57573
const MINUTE = 57574
const MINVALUE = 57575
const MODE = 57576
const MONTH = 57577
const MOVE = 57578
const NAME = 57579
const NAMES = 57580
const NATIONAL = 57581
const NATURAL = 57582
const NCHAR = 57583
const NEXT = 57584
const NO = 57585
const NONE = 57586
const NOT = 57587
const NOTHING = 57588
const NOTIFY = 57589
const NOWAIT = 57590
const NULL = 57591
const NULLIF = 57592
const NULLS = 57593
const NUMERIC = 57594
const OBJECT = 57595
const OF = 57596
const OFF = 57597
const OFFSET = 57598
const OIDS = 57599
const ON = 57600
const ONLY = 57601
const OPTION = 57602
const OPTIONS = 57603
const OR = 57604
const ORDER = 57605
const ORDINALITY = 57606
const OUT = 57607
const OUTER = 57608
const OVER = 57609
const OVERLAPS = 57610
const OVERLAY = 57611
const OWNED = 57612
const OWNER = 57613
const PARSER = 57614
const PARTIAL = 57615
const PARTITION = 57616
const PASSING = 57617
const PASSWORD = 57618
const PLACING = 57619
const PLANS = 57620
const POLICY = 57621
const POSITION = 57622
const PRECEDING = 57623
const PRECISION = 57624
const PRESERVE = 57625
const PREPARE = 57626
const PREPARED = 57627
const PRIMARY = 57628
const PRIOR = 57629
const PRIVILEGES = 57630
const PROCEDURAL = 57631
const PROCEDURE = 57632
const PROGRAM = 57633
const QUOTE = 57634
const RANGE = 57635
const READ = 57636
const REAL = 57637
const REASSIGN = 57638
const RECHECK = 57639
const RECURSIVE = 57640
const REF = 57641
const REFERENCES = 57642
const REFRESH = 57643
const REINDEX = 57644
const RELATIVE = 57645
const RELEASE = 57646
const RENAME = 57647
const REPEATABLE = 57648
const REPLACE = 57649
const REPLICA = 57650
const RESET = 57651
const RESTART = 57652
const RESTRICT = 57653
const RETURNING = 57654
const RETURNS = 57655
const REVOKE = 57656
const RIGHT = 57657
const ROLLBACK = 57658
const ROLLUP = 57659
const ROW = 57660
const ROWS = 57661
const RSHIFT = 57662
const RULE = 57663
const SCROLL = 57664
const SEARCH = 57665
const SECOND = 57666
const SECURITY = 57667
const SELECT = 57668
const SEQUENCE = 57669
const SEQUENCES = 57670
const SERIALIZABLE = 57671
const SERVER = 57672
const SESSION = 57673
const SESSION_USER = 57674
const SET = 57675
const SETS = 57676
const SHARE = 57677
const SHOW = 57678
const SIMILAR = 57679
const SIMPLE = 57680
const SKIP = 57681
const SMALLINT = 57682
const SNAPSHOT = 57683
const SOME = 57684
const SQL = 57685
const STABLE = 57686
const STANDALONE = 57687
const STATEMENT = 57688
const STATISTICS = 57689
const STDIN = 57690
const STDOUT = 57691
const STRICT = 57692
const STRING = 57693
const STRIP = 57694
const STORING = 57695
const SUBSTRING = 57696
const SYMMETRIC = 57697
const SYSID = 57698
const SYSTEM = 57699
const TABLE = 57700
const TABLES = 57701
const TEXT = 57702
const THEN = 57703
const TIME = 57704
const TIMESTAMP = 57705
const TO = 57706
const TRAILING = 57707
const TRANSACTION = 57708
const TRANSFORM = 57709
const TREAT = 57710
const TRIGGER = 57711
const TRIM = 57712
const TRUE = 57713
const TRUNCATE = 57714
const TRUSTED = 57715
const TYPE = 57716
const TYPES = 57717
const UNBOUNDED = 57718
const UNCOMMITTED = 57719
const UNENCRYPTED = 57720
const UNION = 57721
const UNIQUE = 57722
const UNKNOWN = 57723
const UNLISTEN = 57724
const UNLOGGED = 57725
const UNTIL = 57726
const UPDATE = 57727
const USER = 57728
const USING = 57729
const VACUUM = 57730
const VALID = 57731
const VALIDATE = 57732
const VALUE = 57733
const VALUES = 57734
const VARCHAR = 57735
const VARIADIC = 57736
const VARYING = 57737
const VERBOSE = 57738
const VERSION = 57739
const WHEN = 57740
const WHERE = 57741
const WINDOW = 57742
const WITH = 57743
const WITHIN = 57744
const WITHOUT = 57745
const WRAPPER = 57746
const WRITE = 57747
const YEAR = 57748
const YES = 57749
const ZONE = 57750
const NOT_LA = 57751
const NULLS_LA = 57752
const WITH_LA = 57753
const POSTFIXOP = 57754
const UMINUS = 57755

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"FCONST",
	"SCONST",
	"BCONST",
	"ICONST",
	"PARAM",
	"TYPECAST",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"ERROR",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALSO",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"ANY",
	"ARRAY",
	"AS",
	"ASC",
	"ASSERTION",
	"ASSIGNMENT",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BINARY",
	"BIT",
	"BLOB",
	"BOOL",
	"BOOLEAN",
	"BOTH",
	"BY",
	"BYTES",
	"CACHE",
	"CALLED",
	"CASCADE",
	"CASCADED",
	"CASE",
	"CAST",
	"CHAIN",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CHECKPOINT",
	"CLASS",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTENT",
	"CONTINUE",
	"CONVERSION",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEALLOCATE",
	"DEC",
	"DECIMAL",
	"DECLARE",
	"DEFAULT",
	"DEFAULTS",
	"DEFERRABLE",
	"DEFERRED",
	"DEFINER",
	"DELETE",
	"DELIMITER",
	"DELIMITERS",
	"DESC",
	"DICTIONARY",
	"DISABLE",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"EACH",
	"ELSE",
	"ENABLE",
	"ENCODING",
	"ENCRYPTED",
	"END",
	"ENUM",
	"ESCAPE",
	"EVENT",
	"EXCEPT",
	"EXCLUSIVE",
	"EXECUTE",
	"EXISTS",
	"EXPLAIN",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GLOBAL",
	"GRANT",
	"GRANTED",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"HANDLER",
	"HAVING",
	"HEADER",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPLICIT",
	"IMPORT",
	"IN",
	"INCLUDING",
	"INCREMENT",
	"INDEX",
	"INDEXES",
	"INHERIT",
	"INHERITS",
	"INITIALLY",
	"INLINE",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INSTEAD",
	"INT",
	"INT64",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVOKER",
	"IS",
	"ISOLATION",
	"JOIN",
	"KEY",
	"LABEL",
	"LANGUAGE",
	"LARGE",
	"LAST",
	"LATERAL",
	"LEADING",
	"LEAKPROOF",
	"LEAST",
	"LEFT",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LISTEN",
	"LOAD",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCATION",
	"LOCK",
	"LOCKED",
	"LOGGED",
	"LSHIFT",
	"MAPPING",
	"MATCH",
	"MATERIALIZED",
	"MAXVALUE",
	"MINUTE",
	"MINVALUE",
	"MODE",
	"MONTH",
	"MOVE",
	"NAME",
	"NAMES",
	"NATIONAL",
	"NATURAL",
	"NCHAR",
	"NEXT",
	"NO",
	"NONE",
	"NOT",
	"NOTHING",
	"NOTIFY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OBJECT",
	"OF",
	"OFF",
	"OFFSET",
	"OIDS",
	"ON",
	"ONLY",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"PARSER",
	"PARTIAL",
	"PARTITION",
	"PASSING",
	"PASSWORD",
	"PLACING",
	"PLANS",
	"POLICY",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PRESERVE",
	"PREPARE",
	"PREPARED",
	"PRIMARY",
	"PRIOR",
	"PRIVILEGES",
	"PROCEDURAL",
	"PROCEDURE",
	"PROGRAM",
	"QUOTE",
	"RANGE",
	"READ",
	"REAL",
	"REASSIGN",
	"RECHECK",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REINDEX",
	"RELATIVE",
	"RELEASE",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICA",
	"RESET",
	"RESTART",
	"RESTRICT",
	"RETURNING",
	"RETURNS",
	"REVOKE",
	"RIGHT",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"SCROLL",
	"SEARCH",
	"SECOND",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSION_USER",
	"SET",
	"SETS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SNAPSHOT",
	"SOME",
	"SQL",
	"STABLE",
	"STANDALONE",
	"STATEMENT",
	"STATISTICS",
	"STDIN",
	"STDOUT",
	"STRICT",
	"STRING",
	"STRIP",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYSID",
	"SYSTEM",
	"TABLE",
	"TABLES",
	"TEXT",
	"THEN",
	"TIME",
	"TIMESTAMP",
	"TO",
	"TRAILING",
	"TRANSACTION",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNENCRYPTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNTIL",
	"UPDATE",
	"USER",
	"USING",
	"VACUUM",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARCHAR",
	"VARIADIC",
	"VARYING",
	"VERBOSE",
	"VERSION",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WRAPPER",
	"WRITE",
	"YEAR",
	"YES",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"'<'",
	"'>'",
	"'='",
	"POSTFIXOP",
	"'|'",
	"'^'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"UMINUS",
	"'~'",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"';'",
	"','",
	"'@'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlMaxDepth = 200

//line sql.y:3778

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 19,
	432, 19,
	-2, 290,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 29,
	1, 261,
	258, 261,
	430, 261,
	432, 261,
	-2, 271,
	-1, 38,
	1, 264,
	258, 264,
	430, 264,
	432, 264,
	-2, 270,
	-1, 47,
	1, 19,
	432, 19,
	-2, 290,
	-1, 83,
	1, 128,
	432, 128,
	-2, 856,
	-1, 394,
	217, 301,
	256, 301,
	-2, 267,
	-1, 397,
	217, 300,
	256, 300,
	-2, 265,
	-1, 503,
	217, 300,
	256, 300,
	-2, 268,
	-1, 561,
	429, 711,
	-2, 706,
	-1, 562,
	429, 712,
	-2, 707,
	-1, 568,
	6, 419,
	429, 419,
	-2, 991,
	-1, 588,
	6, 389,
	-2, 971,
	-1, 589,
	6, 416,
	429, 416,
	-2, 972,
	-1, 590,
	6, 397,
	-2, 973,
	-1, 591,
	6, 396,
	-2, 974,
	-1, 592,
	6, 416,
	429, 416,
	-2, 976,
	-1, 593,
	6, 416,
	429, 416,
	-2, 977,
	-1, 594,
	6, 417,
	-2, 979,
	-1, 595,
	6, 384,
	-2, 980,
	-1, 596,
	6, 384,
	-2, 981,
	-1, 597,
	6, 399,
	-2, 984,
	-1, 598,
	6, 385,
	-2, 988,
	-1, 599,
	6, 386,
	-2, 989,
	-1, 600,
	6, 387,
	-2, 990,
	-1, 601,
	6, 384,
	-2, 997,
	-1, 602,
	6, 390,
	-2, 1002,
	-1, 603,
	6, 388,
	-2, 1004,
	-1, 604,
	6, 418,
	-2, 1008,
	-1, 605,
	6, 414,
	429, 414,
	-2, 1012,
	-1, 850,
	138, 271,
	198, 271,
	217, 271,
	256, 271,
	263, 271,
	379, 271,
	-2, 524,
	-1, 858,
	429, 691,
	-2, 685,
	-1, 1041,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 452,
	-1, 1042,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 453,
	-1, 1043,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 454,
	-1, 1047,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 458,
	-1, 1048,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 459,
	-1, 1049,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 460,
	-1, 1052,
	43, 0,
	180, 0,
	216, 0,
	337, 0,
	409, 0,
	-2, 465,
	-1, 1087,
	268, 590,
	-2, 593,
	-1, 1232,
	138, 271,
	198, 271,
	217, 271,
	256, 271,
	263, 271,
	379, 271,
	-2, 342,
	-1, 1240,
	43, 0,
	180, 0,
	216, 0,
	337, 0,
	409, 0,
	-2, 466,
	-1, 1245,
	43, 0,
	180, 0,
	216, 0,
	337, 0,
	409, 0,
	-2, 467,
	-1, 1266,
	268, 589,
	-2, 592,
	-1, 1403,
	43, 0,
	180, 0,
	216, 0,
	337, 0,
	409, 0,
	-2, 468,
	-1, 1408,
	202, 0,
	-2, 478,
	-1, 1418,
	268, 591,
	-2, 594,
	-1, 1458,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 505,
	-1, 1459,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 506,
	-1, 1460,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 507,
	-1, 1464,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 511,
	-1, 1465,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 512,
	-1, 1466,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 513,
	-1, 1557,
	202, 0,
	-2, 479,
	-1, 1561,
	43, 0,
	180, 0,
	216, 0,
	337, 0,
	409, 0,
	-2, 482,
	-1, 1562,
	43, 0,
	180, 0,
	216, 0,
	337, 0,
	409, 0,
	-2, 484,
	-1, 1640,
	43, 0,
	180, 0,
	216, 0,
	337, 0,
	409, 0,
	-2, 483,
	-1, 1641,
	43, 0,
	180, 0,
	216, 0,
	337, 0,
	409, 0,
	-2, 485,
	-1, 1649,
	202, 0,
	-2, 514,
	-1, 1685,
	202, 0,
	-2, 515,
	-1, 1729,
	43, 0,
	216, 0,
	337, 0,
	409, 0,
	-2, 970,
}

const sqlNprod = 1109
const sqlPrivate = 57344

var sqlTokenNames []string
var sqlStates []string

const sqlLast = 27725

var sqlAct = [...]int{

	1084, 1711, 1597, 1749, 926, 1689, 1728, 1712, 1727, 1713,
	1656, 560, 982, 1528, 933, 1630, 1543, 1409, 1438, 559,
	1529, 552, 1494, 425, 853, 969, 1622, 1537, 1228, 966,
	1269, 13, 619, 1383, 1324, 1323, 1100, 1220, 398, 84,
	855, 1410, 527, 990, 624, 1392, 645, 934, 903, 403,
	28, 968, 1104, 912, 1068, 1216, 785, 59, 1065, 18,
	1137, 880, 1094, 1231, 884, 993, 627, 405, 37, 663,
	397, 654, 807, 10, 801, 28, 6, 629, 533, 524,
	991, 963, 690, 971, 445, 61, 674, 408, 506, 57,
	507, 653, 1624, 37, 439, 438, 439, 28, 505, 60,
	562, 81, 62, 665, 661, 66, 38, 1140, 647, 622,
	622, 931, 517, 620, 620, 37, 621, 621, 805, 647,
	1725, 1097, 1719, 1621, 402, 986, 421, 927, 402, 428,
	1718, 87, 1710, 986, 436, 1560, 1705, 810, 1687, 986,
	808, 1560, 87, 87, 395, 446, 87, 88, 39, 87,
	87, 87, 442, 1262, 87, 87, 87, 87, 606, 448,
	1681, 1187, 1669, 986, 812, 986, 1666, 1642, 1637, 1621,
	1560, 986, 1620, 1617, 435, 1621, 986, 87, 87, 1602,
	1601, 1584, 986, 986, 1262, 1564, 394, 1098, 1262, 1559,
	808, 1504, 1560, 43, 986, 1413, 811, 1373, 1262, 1369,
	947, 1344, 947, 1678, 1262, 1339, 449, 1337, 1340, 1336,
	1262, 1335, 1262, 1266, 1262, 1264, 1262, 450, 1263, 987,
	1265, 900, 986, 1262, 899, 45, 651, 1471, 1417, 652,
	1200, 901, 1218, 1202, 986, 947, 646, 1080, 43, 981,
	956, 809, 518, 471, 420, 43, 1099, 47, 689, 1096,
	485, 1726, 1724, 1682, 1619, 1587, 1585, 1577, 1576, 46,
	1571, 1570, 1569, 535, 1568, 1296, 1554, 1521, 41, 1484,
	45, 1481, 1480, 554, 1479, 1421, 1398, 45, 42, 1382,
	1374, 1342, 1341, 1331, 1322, 1295, 1292, 1290, 1279, 1273,
	1204, 1077, 1201, 1151, 1268, 1657, 40, 960, 1262, 517,
	861, 516, 1440, 1677, 46, 1658, 1651, 1633, 1627, 422,
	1616, 46, 422, 41, 431, 1594, 1582, 422, 1548, 1526,
	1407, 1397, 1380, 42, 1379, 43, 1377, 1355, 1552, 1354,
	1321, 1287, 1286, 1278, 1259, 1258, 1253, 1070, 1101, 885,
	888, 58, 1165, 1164, 1145, 1109, 985, 892, 40, 890,
	810, 878, 877, 810, 826, 876, 875, 45, 874, 873,
	872, 871, 870, 869, 648, 868, 859, 857, 40, 783,
	426, 521, 810, 1639, 1638, 648, 856, 812, 1400, 1399,
	812, 615, 1523, 523, 1188, 1296, 1239, 1312, 1313, 1314,
	1538, 46, 810, 479, 1097, 1296, 492, 480, 866, 812,
	41, 927, 1078, 1441, 1105, 881, 1695, 1184, 1195, 811,
	42, 1738, 811, 1512, 1282, 1187, 1665, 525, 525, 812,
	1095, 385, 1610, 51, 1739, 503, 1609, 625, 930, 1296,
	498, 811, 1367, 504, 1347, 1346, 406, 1277, 1520, 1276,
	392, 1275, 1274, 1238, 614, 510, 1241, 827, 810, 618,
	622, 811, 1309, 1057, 620, 946, 924, 621, 923, 1031,
	1098, 389, 1067, 55, 475, 809, 1599, 630, 1715, 497,
	1697, 641, 1101, 631, 1430, 812, 952, 1055, 608, 415,
	1707, 905, 1310, 905, 979, 980, 646, 1746, 953, 87,
	1179, 87, 1366, 87, 904, 49, 636, 782, 635, 52,
	1659, 1357, 1427, 1196, 879, 1647, 1708, 811, 87, 793,
	795, 955, 395, 1745, 436, 825, 802, 647, 848, 1099,
	1285, 402, 1096, 954, 87, 1393, 1296, 1714, 1737, 843,
	844, 845, 846, 847, 87, 87, 1165, 87, 1735, 851,
	1223, 1536, 54, 781, 818, 819, 820, 813, 814, 815,
	816, 817, 796, 1182, 394, 1664, 975, 613, 488, 864,
	1296, 1428, 472, 1067, 659, 1604, 1101, 826, 470, 509,
	1226, 87, 858, 87, 50, 1311, 632, 658, 448, 448,
	777, 1426, 1716, 678, 685, 1391, 692, 87, 774, 87,
	87, 778, 87, 779, 607, 1224, 791, 790, 1074, 477,
	1603, 87, 1310, 789, 630, 1072, 803, 1592, 638, 826,
	631, 1101, 1349, 567, 1056, 610, 1159, 395, 508, 87,
	395, 395, 87, 898, 976, 449, 449, 1690, 788, 784,
	508, 780, 660, 693, 609, 1593, 450, 450, 1167, 564,
	1166, 913, 1744, 1546, 694, 1388, 852, 1717, 1387, 478,
	1053, 894, 422, 1101, 882, 883, 906, 509, 476, 797,
	827, 886, 798, 799, 493, 826, 889, 434, 400, 500,
	1384, 929, 1302, 1303, 1304, 1297, 1298, 1299, 1300, 1301,
	917, 919, 1105, 59, 439, 891, 941, 616, 1217, 28,
	439, 53, 1738, 1095, 390, 1311, 1225, 422, 640, 1108,
	1650, 28, 827, 895, 897, 1123, 1358, 1579, 1759, 1194,
	401, 61, 1325, 632, 909, 922, 393, 56, 87, 37,
	961, 692, 692, 862, 1406, 60, 1291, 948, 62, 1252,
	1600, 87, 1296, 916, 657, 87, 657, 945, 87, 446,
	940, 944, 87, 1310, 87, 87, 943, 87, 1551, 48,
	87, 87, 657, 448, 684, 1580, 87, 87, 827, 820,
	813, 814, 815, 816, 817, 815, 816, 817, 693, 693,
	400, 1054, 962, 648, 1364, 949, 902, 1310, 1467, 694,
	694, 1243, 813, 814, 815, 816, 817, 1306, 1307, 1308,
	692, 1305, 1302, 1303, 1304, 1297, 1298, 1299, 1300, 1301,
	449, 612, 813, 814, 815, 816, 817, 1299, 1300, 1301,
	525, 450, 988, 64, 1032, 1033, 1034, 1035, 1036, 1037,
	1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047,
	1048, 1049, 1050, 1051, 1052, 402, 1311, 693, 633, 1297,
	1298, 1299, 1300, 1301, 519, 1758, 513, 514, 694, 495,
	950, 1030, 996, 808, 821, 818, 819, 820, 813, 814,
	815, 816, 817, 965, 915, 1508, 810, 491, 489, 1110,
	1311, 1121, 630, 1131, 1133, 1138, 1141, 87, 631, 486,
	67, 893, 1066, 87, 87, 1581, 894, 433, 67, 995,
	1176, 894, 1113, 812, 1511, 1326, 1149, 1085, 422, 1468,
	625, 925, 867, 1510, 776, 937, 1107, 72, 1469, 87,
	1491, 1362, 87, 1360, 1124, 72, 1348, 1073, 68, 657,
	1207, 977, 974, 1075, 650, 811, 68, 1076, 1180, 1752,
	649, 1435, 1611, 644, 1160, 1304, 1297, 1298, 1299, 1300,
	1301, 692, 637, 634, 1154, 1739, 680, 983, 511, 1310,
	1613, 399, 1162, 69, 921, 683, 671, 682, 914, 676,
	482, 69, 1368, 418, 1081, 1086, 905, 1089, 810, 1624,
	1297, 1298, 1299, 1300, 1301, 633, 1661, 920, 1684, 1155,
	1132, 632, 802, 71, 1142, 1143, 1144, 1190, 693, 1175,
	905, 71, 1385, 515, 1679, 1116, 3, 932, 1507, 694,
	1150, 918, 1183, 87, 87, 87, 1186, 804, 75, 87,
	1189, 1236, 87, 1756, 1205, 63, 1757, 1211, 87, 87,
	87, 87, 87, 1198, 87, 87, 1197, 811, 1191, 1203,
	1296, 87, 1193, 87, 984, 28, 1509, 810, 1234, 87,
	810, 1566, 1311, 74, 427, 1213, 422, 87, 87, 512,
	1553, 87, 1485, 37, 1240, 1227, 1209, 448, 1245, 1212,
	1233, 1117, 1214, 686, 419, 1237, 483, 812, 384, 1433,
	1500, 957, 422, 87, 958, 87, 87, 1401, 87, 1338,
	886, 1261, 889, 826, 1002, 473, 474, 87, 1199, 883,
	882, 1270, 87, 87, 1148, 87, 1147, 1146, 1102, 811,
	959, 1524, 386, 387, 449, 1434, 1283, 860, 1124, 1124,
	1288, 1244, 388, 1598, 1242, 450, 70, 1750, 65, 1501,
	1118, 775, 487, 1115, 70, 1573, 1706, 1284, 1267, 851,
	1646, 1629, 1106, 865, 23, 1138, 1138, 1138, 1305, 1302,
	1303, 1304, 1297, 1298, 1299, 1300, 1301, 1531, 540, 1492,
	688, 1350, 970, 695, 1345, 681, 1281, 1250, 628, 670,
	563, 490, 664, 673, 1112, 1352, 1156, 611, 1124, 1124,
	1124, 687, 565, 547, 999, 73, 827, 566, 1256, 1248,
	1000, 887, 553, 73, 1002, 1751, 1260, 997, 444, 625,
	935, 1370, 1071, 1103, 657, 1328, 1329, 1330, 1280, 1271,
	1272, 863, 657, 539, 85, 1343, 545, 1753, 544, 1082,
	536, 1192, 1119, 79, 80, 409, 409, 1351, 1361, 424,
	1363, 1181, 424, 430, 424, 1365, 1519, 424, 85, 440,
	85, 928, 978, 1372, 792, 1371, 1320, 1359, 391, 1206,
	1402, 1293, 1403, 633, 1130, 1122, 1120, 1333, 496, 623,
	85, 85, 1496, 1408, 1376, 936, 1497, 522, 422, 1414,
	1390, 1378, 1386, 1419, 484, 1389, 87, 1111, 989, 1419,
	1394, 1395, 821, 818, 819, 820, 813, 814, 815, 816,
	817, 1235, 1246, 1436, 1353, 1124, 1124, 1251, 87, 1021,
	520, 800, 1445, 1499, 1114, 1447, 416, 1219, 417, 967,
	481, 87, 951, 87, 842, 87, 1420, 1502, 87, 1423,
	1424, 1425, 1429, 1431, 1432, 374, 639, 839, 1442, 87,
	494, 1660, 87, 1694, 1356, 44, 1476, 1477, 17, 1446,
	87, 1444, 16, 87, 383, 1483, 15, 14, 1448, 12,
	1124, 1124, 1124, 1124, 1124, 1124, 1124, 1124, 1124, 1124,
	1124, 1124, 1124, 1124, 1124, 1124, 1124, 1124, 1474, 1124,
	1475, 11, 1210, 9, 8, 1223, 7, 1415, 22, 1478,
	21, 677, 672, 20, 1490, 5, 4, 1486, 2, 1,
	0, 0, 0, 376, 0, 1539, 87, 1498, 0, 1021,
	0, 0, 1534, 0, 0, 1226, 0, 0, 0, 0,
	1533, 1522, 1535, 0, 1247, 1020, 0, 1557, 0, 1527,
	1221, 0, 1561, 1562, 1249, 375, 377, 0, 1565, 28,
	1224, 0, 0, 1567, 1001, 1558, 1023, 1550, 0, 1472,
	0, 1541, 1542, 0, 0, 1547, 0, 0, 1572, 0,
	1482, 0, 1575, 0, 0, 1022, 1222, 87, 87, 87,
	998, 937, 0, 0, 0, 87, 87, 0, 0, 0,
	0, 87, 0, 87, 1545, 87, 87, 87, 87, 0,
	0, 0, 1583, 1505, 1506, 0, 378, 0, 87, 0,
	87, 1578, 422, 0, 0, 422, 0, 0, 87, 87,
	0, 1063, 87, 1540, 379, 0, 1525, 0, 87, 87,
	0, 0, 0, 0, 0, 1020, 0, 0, 0, 0,
	0, 1605, 0, 1061, 1588, 0, 1549, 1589, 0, 0,
	0, 1225, 0, 0, 1001, 0, 1023, 1002, 0, 0,
	0, 0, 1534, 1626, 1612, 1591, 0, 0, 0, 0,
	1533, 87, 1535, 0, 1124, 1022, 1634, 1614, 0, 0,
	998, 0, 0, 0, 1606, 1623, 1640, 1641, 1625, 1632,
	1607, 1608, 424, 1002, 85, 1296, 501, 0, 0, 0,
	1002, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	1635, 0, 87, 1544, 87, 1655, 87, 424, 0, 1500,
	1652, 1002, 1643, 87, 0, 1495, 1645, 424, 424, 0,
	642, 0, 1059, 1654, 0, 0, 1058, 625, 1493, 0,
	1668, 1064, 1124, 1670, 0, 0, 0, 87, 1515, 0,
	0, 0, 1309, 1534, 0, 1672, 0, 87, 1674, 87,
	0, 1533, 1671, 1535, 424, 1618, 424, 87, 1501, 87,
	0, 422, 422, 0, 0, 422, 894, 0, 0, 0,
	85, 0, 424, 85, 1673, 85, 0, 1636, 0, 1686,
	380, 1698, 1699, 381, 787, 0, 0, 382, 0, 0,
	0, 1002, 0, 0, 0, 1683, 0, 0, 0, 1534,
	0, 1702, 409, 1124, 1703, 806, 1721, 1533, 1704, 1535,
	0, 1696, 1700, 0, 1720, 0, 0, 0, 1732, 1732,
	87, 87, 1722, 1723, 87, 1701, 0, 1733, 0, 0,
	0, 1736, 1734, 0, 0, 87, 1740, 1741, 1742, 1219,
	1732, 0, 1021, 0, 87, 1676, 1743, 0, 1060, 0,
	0, 0, 1755, 1754, 0, 0, 0, 0, 1062, 0,
	0, 0, 1680, 0, 0, 0, 0, 1732, 87, 87,
	87, 0, 87, 1760, 0, 0, 1596, 0, 1021, 0,
	0, 1254, 1255, 0, 0, 1021, 1691, 1692, 0, 87,
	0, 1496, 1310, 0, 0, 1497, 1002, 541, 29, 0,
	0, 424, 1709, 0, 0, 0, 0, 1223, 87, 0,
	1628, 0, 0, 0, 910, 0, 1021, 0, 424, 0,
	422, 424, 0, 29, 0, 424, 0, 939, 85, 0,
	85, 0, 1499, 942, 85, 396, 0, 1226, 404, 424,
	806, 1317, 1318, 1319, 1002, 29, 1502, 0, 0, 0,
	0, 0, 1221, 0, 0, 0, 404, 0, 1020, 0,
	0, 0, 1224, 0, 0, 0, 1002, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1001, 0, 1023,
	0, 0, 0, 0, 0, 1311, 0, 0, 1222, 0,
	0, 0, 0, 0, 1020, 0, 1021, 0, 1022, 0,
	0, 1020, 0, 998, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1001, 0, 1023, 0, 0, 0, 0,
	1001, 0, 1023, 0, 0, 0, 1498, 0, 0, 0,
	0, 0, 1020, 1693, 1022, 1002, 0, 0, 0, 998,
	0, 1022, 0, 0, 0, 0, 998, 0, 0, 0,
	0, 1001, 0, 1023, 0, 0, 0, 0, 1404, 1405,
	964, 0, 0, 1225, 0, 0, 424, 910, 0, 0,
	0, 937, 1022, 0, 0, 0, 0, 998, 0, 0,
	0, 1305, 1302, 1303, 1304, 1297, 1298, 1299, 1300, 1301,
	0, 0, 424, 0, 0, 85, 0, 0, 0, 0,
	0, 1021, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1020, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1001, 1470, 1023, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1021,
	0, 810, 1022, 828, 829, 830, 0, 998, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	831, 1021, 0, 0, 0, 0, 0, 1296, 812, 1312,
	1313, 1314, 0, 0, 837, 0, 424, 1157, 1158, 0,
	0, 0, 910, 0, 0, 1163, 810, 0, 828, 829,
	830, 1168, 1169, 1171, 1173, 1174, 0, 1177, 1178, 0,
	811, 0, 0, 0, 424, 831, 1185, 1020, 825, 0,
	0, 0, 424, 812, 0, 0, 0, 0, 0, 837,
	964, 424, 0, 0, 964, 0, 1001, 0, 1023, 0,
	1021, 0, 0, 0, 1309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 811, 787, 1022, 85, 424,
	0, 1208, 998, 825, 0, 1020, 0, 0, 0, 0,
	1215, 0, 0, 0, 0, 1230, 1230, 0, 424, 0,
	0, 0, 0, 0, 1001, 0, 1023, 1020, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 1022, 1001, 0, 1023, 0,
	998, 0, 0, 0, 0, 0, 0, 1595, 0, 0,
	0, 838, 0, 0, 0, 0, 0, 1022, 0, 0,
	0, 0, 998, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 836, 0, 0, 0, 1316, 0, 0,
	0, 0, 0, 0, 0, 0, 1020, 833, 0, 0,
	810, 0, 828, 829, 830, 0, 838, 0, 826, 1315,
	0, 0, 0, 0, 0, 1001, 0, 1023, 0, 831,
	0, 0, 0, 0, 0, 0, 0, 812, 836, 0,
	0, 0, 0, 837, 1310, 1649, 1022, 0, 0, 0,
	0, 998, 833, 832, 0, 0, 0, 0, 396, 0,
	0, 396, 396, 826, 0, 0, 0, 0, 0, 811,
	0, 0, 0, 0, 0, 0, 0, 825, 0, 0,
	0, 0, 849, 0, 0, 0, 850, 0, 0, 0,
	854, 0, 0, 0, 0, 0, 0, 0, 832, 806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 827, 0, 0, 0, 0, 1685, 0, 0, 0,
	0, 424, 0, 0, 0, 0, 0, 0, 835, 0,
	0, 0, 0, 0, 1375, 0, 910, 1311, 787, 0,
	0, 1381, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 424, 0, 0, 424, 827, 0, 0, 0,
	0, 0, 0, 1396, 0, 0, 1230, 0, 0, 0,
	0, 0, 0, 835, 0, 1296, 0, 1312, 1313, 1314,
	838, 0, 0, 0, 0, 0, 0, 29, 0, 0,
	0, 0, 0, 0, 1556, 0, 0, 0, 0, 29,
	834, 0, 836, 822, 823, 824, 0, 821, 818, 819,
	820, 813, 814, 815, 816, 817, 833, 0, 0, 1439,
	0, 0, 0, 0, 1334, 0, 0, 826, 0, 1306,
	1307, 1308, 0, 1305, 1302, 1303, 1304, 1297, 1298, 1299,
	1300, 1301, 1309, 0, 0, 834, 0, 0, 822, 823,
	824, 0, 821, 818, 819, 820, 813, 814, 815, 816,
	817, 0, 832, 0, 1152, 0, 0, 0, 0, 0,
	0, 1153, 0, 0, 0, 0, 0, 0, 0, 0,
	1488, 1489, 910, 0, 0, 0, 0, 0, 806, 806,
	0, 0, 0, 0, 1513, 0, 1514, 0, 424, 1516,
	1517, 1518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 806, 0, 910, 1530, 0, 0, 0, 0, 0,
	827, 424, 424, 0, 810, 424, 828, 829, 830, 0,
	0, 806, 1230, 0, 0, 0, 0, 835, 0, 0,
	0, 0, 0, 831, 810, 0, 828, 829, 830, 0,
	0, 812, 0, 0, 0, 0, 992, 837, 0, 0,
	0, 0, 0, 831, 0, 0, 0, 1315, 0, 0,
	0, 812, 0, 0, 1574, 0, 0, 837, 0, 0,
	0, 0, 0, 811, 0, 0, 1069, 0, 0, 0,
	0, 825, 1310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 811, 0, 0, 0, 0, 0, 834,
	0, 825, 822, 823, 824, 0, 821, 818, 819, 820,
	813, 814, 815, 816, 817, 910, 0, 1590, 0, 85,
	1688, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1530, 0, 0, 0, 0, 0,
	806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	424, 0, 1631, 810, 0, 828, 829, 830, 404, 0,
	424, 0, 806, 0, 0, 1311, 0, 0, 0, 0,
	0, 0, 831, 810, 838, 828, 829, 830, 0, 0,
	812, 0, 0, 0, 0, 0, 837, 0, 0, 0,
	0, 0, 831, 0, 838, 0, 836, 0, 0, 0,
	812, 0, 0, 0, 0, 0, 837, 0, 0, 0,
	833, 0, 811, 29, 0, 0, 836, 0, 0, 0,
	825, 826, 1232, 1662, 1663, 0, 0, 1667, 0, 0,
	833, 0, 811, 0, 0, 1530, 0, 0, 85, 0,
	825, 826, 0, 0, 0, 0, 0, 806, 1296, 0,
	1312, 1313, 1314, 0, 0, 0, 832, 1306, 1307, 1308,
	0, 1305, 1302, 1303, 1304, 1297, 1298, 1299, 1300, 1301,
	0, 806, 806, 424, 0, 85, 832, 0, 0, 0,
	0, 0, 0, 0, 1069, 810, 0, 828, 829, 830,
	0, 1530, 1631, 0, 0, 0, 0, 0, 850, 1257,
	0, 0, 0, 0, 831, 0, 0, 0, 0, 0,
	0, 424, 812, 0, 827, 1309, 0, 0, 837, 0,
	0, 0, 810, 838, 828, 829, 830, 0, 0, 0,
	0, 835, 0, 0, 827, 0, 19, 0, 0, 0,
	0, 831, 0, 838, 811, 836, 0, 0, 0, 812,
	0, 835, 825, 32, 0, 837, 850, 0, 0, 833,
	0, 0, 0, 0, 0, 836, 0, 0, 0, 0,
	826, 0, 0, 0, 0, 0, 0, 0, 0, 833,
	0, 811, 0, 0, 0, 0, 33, 0, 0, 825,
	826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 36, 0, 834, 0, 832, 822, 823, 824, 0,
	821, 818, 819, 820, 813, 814, 815, 816, 817, 0,
	0, 0, 0, 834, 1675, 832, 822, 823, 824, 0,
	821, 818, 819, 820, 813, 814, 815, 816, 817, 24,
	1315, 0, 0, 0, 1653, 0, 992, 0, 0, 992,
	0, 0, 0, 25, 0, 838, 0, 0, 0, 0,
	0, 0, 0, 827, 0, 1310, 0, 0, 0, 0,
	0, 0, 0, 0, 26, 0, 0, 836, 0, 0,
	835, 0, 0, 827, 0, 0, 850, 0, 0, 0,
	0, 833, 838, 0, 0, 0, 0, 0, 0, 0,
	835, 0, 826, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 836, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 833, 0,
	0, 0, 0, 0, 0, 0, 0, 832, 0, 826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 834, 0, 0, 822, 823, 824, 1311, 821,
	818, 819, 820, 813, 814, 815, 816, 817, 0, 0,
	0, 0, 834, 1648, 832, 822, 823, 824, 0, 821,
	818, 819, 820, 813, 814, 815, 816, 817, 0, 0,
	0, 0, 0, 1644, 0, 827, 0, 29, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 835, 0, 0, 992, 992, 0, 0, 992,
	0, 0, 0, 0, 0, 27, 0, 34, 0, 0,
	0, 0, 827, 0, 0, 0, 0, 43, 0, 0,
	0, 0, 0, 0, 30, 0, 0, 31, 0, 835,
	1306, 1307, 1308, 0, 1305, 1302, 1303, 1304, 1297, 1298,
	1299, 1300, 1301, 0, 0, 0, 0, 0, 0, 45,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 35, 834, 0, 0, 822, 823, 824,
	0, 821, 818, 819, 820, 813, 814, 815, 816, 817,
	0, 0, 0, 46, 0, 1586, 0, 0, 0, 0,
	0, 0, 41, 0, 0, 0, 0, 0, 0, 0,
	0, 834, 42, 0, 822, 823, 824, 0, 821, 818,
	819, 820, 813, 814, 815, 816, 817, 0, 0, 0,
	40, 0, 1563, 0, 0, 0, 0, 0, 0, 0,
	0, 1615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 691, 0, 0, 992, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 90, 91, 92, 93, 94, 95,
	696, 96, 97, 98, 697, 698, 699, 700, 701, 702,
	703, 99, 100, 704, 101, 102, 452, 103, 104, 105,
	332, 333, 453, 334, 0, 335, 336, 705, 106, 337,
	107, 108, 109, 110, 706, 707, 111, 338, 339, 112,
	708, 113, 114, 115, 116, 340, 709, 454, 710, 117,
	118, 119, 120, 121, 850, 455, 122, 123, 124, 711,
	125, 126, 127, 128, 129, 130, 0, 712, 456, 131,
	132, 133, 713, 714, 715, 716, 717, 718, 134, 135,
	136, 137, 138, 341, 139, 140, 342, 343, 141, 719,
	142, 720, 143, 144, 145, 146, 147, 721, 148, 149,
	150, 722, 723, 151, 152, 153, 154, 724, 155, 156,
	157, 725, 158, 0, 159, 726, 160, 161, 344, 162,
	163, 164, 345, 727, 165, 728, 166, 167, 346, 168,
	729, 169, 730, 170, 457, 731, 458, 171, 172, 173,
	732, 174, 175, 347, 733, 348, 176, 734, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 735, 186, 187,
	736, 188, 189, 190, 737, 191, 459, 349, 192, 193,
	194, 195, 350, 351, 352, 738, 353, 739, 196, 460,
	197, 461, 198, 199, 200, 201, 202, 740, 741, 203,
	354, 462, 204, 463, 742, 205, 206, 410, 743, 744,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 411, 355, 464, 356, 221,
	222, 357, 745, 223, 224, 225, 746, 358, 226, 359,
	227, 228, 229, 747, 230, 748, 749, 231, 232, 750,
	751, 233, 360, 465, 234, 466, 361, 235, 236, 237,
	238, 239, 240, 241, 752, 242, 243, 362, 244, 363,
	247, 245, 246, 753, 248, 249, 250, 251, 252, 253,
	254, 255, 364, 256, 257, 258, 259, 754, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 755,
	271, 272, 467, 273, 274, 365, 275, 0, 276, 277,
	278, 279, 280, 756, 281, 282, 283, 284, 412, 757,
	285, 286, 287, 288, 468, 289, 290, 366, 291, 758,
	292, 293, 294, 295, 296, 297, 298, 299, 367, 300,
	0, 368, 759, 301, 302, 760, 303, 304, 761, 414,
	369, 762, 763, 413, 305, 370, 306, 371, 764, 307,
	308, 309, 310, 311, 312, 313, 765, 766, 314, 315,
	316, 317, 318, 767, 768, 319, 320, 321, 322, 372,
	373, 769, 323, 469, 324, 770, 771, 772, 773, 325,
	326, 327, 328, 329, 330, 331, 0, 0, 691, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 896,
	89, 90, 91, 92, 93, 94, 95, 696, 96, 97,
	98, 697, 698, 699, 700, 701, 702, 703, 99, 100,
	704, 101, 102, 452, 103, 104, 105, 332, 333, 453,
	334, 0, 335, 336, 705, 106, 337, 107, 108, 109,
	110, 706, 707, 111, 338, 339, 112, 708, 113, 114,
	115, 116, 340, 709, 454, 710, 117, 118, 119, 120,
	121, 0, 455, 122, 123, 124, 711, 125, 126, 127,
	128, 129, 130, 0, 712, 456, 131, 132, 133, 713,
	714, 715, 716, 717, 718, 134, 135, 136, 137, 138,
	341, 139, 140, 342, 343, 141, 719, 142, 720, 143,
	144, 145, 146, 147, 721, 148, 149, 150, 722, 723,
	151, 152, 153, 154, 724, 155, 156, 157, 725, 158,
	0, 159, 726, 160, 161, 344, 162, 163, 164, 345,
	727, 165, 728, 166, 167, 346, 168, 729, 169, 730,
	170, 457, 731, 458, 171, 172, 173, 732, 174, 175,
	347, 733, 348, 176, 734, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 735, 186, 187, 736, 188, 189,
	190, 737, 191, 459, 349, 192, 193, 194, 195, 350,
	351, 352, 738, 353, 739, 196, 460, 197, 461, 198,
	199, 200, 201, 202, 740, 741, 203, 354, 462, 204,
	463, 742, 205, 206, 410, 743, 744, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 411, 355, 464, 356, 221, 222, 357, 745,
	223, 224, 225, 746, 358, 226, 359, 227, 228, 229,
	747, 230, 748, 749, 231, 232, 750, 751, 233, 360,
	465, 234, 466, 361, 235, 236, 237, 238, 239, 240,
	241, 752, 242, 243, 362, 244, 363, 247, 245, 246,
	753, 248, 249, 250, 251, 252, 253, 254, 255, 364,
	256, 257, 258, 259, 754, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 755, 271, 272, 467,
	273, 274, 365, 275, 0, 276, 277, 278, 279, 280,
	756, 281, 282, 283, 284, 412, 757, 285, 286, 287,
	288, 468, 289, 290, 366, 291, 758, 292, 293, 294,
	295, 296, 297, 298, 299, 367, 300, 0, 368, 759,
	301, 302, 760, 303, 304, 761, 414, 369, 762, 763,
	413, 305, 370, 306, 371, 764, 307, 308, 309, 310,
	311, 312, 313, 765, 766, 314, 315, 316, 317, 318,
	767, 768, 319, 320, 321, 322, 372, 373, 769, 323,
	469, 324, 770, 771, 772, 773, 325, 326, 327, 328,
	329, 330, 331, 561, 549, 550, 551, 548, 537, 0,
	0, 0, 0, 0, 0, 89, 90, 91, 92, 93,
	94, 95, 1091, 96, 97, 98, 0, 0, 0, 0,
	543, 0, 0, 99, 100, 0, 101, 102, 452, 103,
	104, 105, 332, 588, 453, 589, 0, 590, 591, 0,
	106, 337, 107, 108, 109, 110, 558, 576, 111, 592,
	593, 112, 0, 113, 114, 115, 116, 584, 0, 569,
	0, 117, 118, 119, 120, 121, 0, 455, 122, 123,
	124, 0, 125, 126, 127, 128, 129, 130, 0, 0,
	456, 131, 132, 133, 0, 570, 572, 0, 571, 573,
	134, 135, 136, 137, 138, 594, 139, 140, 595, 596,
	141, 0, 142, 0, 143, 144, 145, 146, 147, 0,
	148, 149, 150, 1092, 0, 151, 587, 153, 154, 0,
	155, 156, 157, 0, 158, 0, 159, 0, 160, 161,
	542, 162, 163, 164, 577, 556, 165, 0, 166, 167,
	597, 168, 0, 169, 0, 170, 457, 0, 458, 171,
	172, 173, 0, 174, 175, 585, 0, 348, 176, 0,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 0,
	186, 187, 0, 188, 189, 190, 0, 191, 459, 349,
	192, 193, 194, 195, 598, 599, 600, 0, 568, 0,
	196, 460, 197, 461, 198, 199, 200, 201, 202, 0,
	0, 203, 586, 462, 204, 463, 0, 205, 206, 410,
	0, 0, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 411, 355, 464,
	356, 221, 222, 357, 531, 223, 224, 225, 557, 583,
	226, 601, 227, 228, 229, 0, 230, 0, 0, 231,
	232, 0, 0, 233, 360, 465, 234, 466, 578, 235,
	236, 237, 238, 239, 240, 241, 0, 242, 243, 579,
	244, 363, 247, 245, 246, 0, 248, 249, 250, 251,
	252, 253, 254, 255, 602, 256, 257, 258, 259, 0,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 0, 271, 272, 467, 273, 274, 546, 275, 0,
	276, 277, 278, 279, 280, 0, 281, 282, 283, 284,
	412, 574, 285, 286, 287, 288, 468, 289, 290, 603,
	291, 0, 292, 293, 294, 295, 296, 297, 298, 299,
	367, 300, 0, 580, 0, 301, 302, 0, 303, 304,
	0, 414, 604, 0, 0, 413, 305, 581, 306, 582,
	555, 307, 308, 309, 310, 311, 312, 313, 0, 534,
	314, 315, 316, 317, 318, 575, 0, 319, 320, 321,
	322, 372, 605, 1090, 323, 469, 324, 0, 0, 0,
	0, 325, 326, 327, 328, 329, 330, 331, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 528,
	529, 1093, 0, 0, 0, 530, 0, 0, 538, 1088,
	561, 549, 550, 551, 548, 537, 0, 0, 0, 0,
	0, 0, 89, 90, 91, 92, 93, 94, 95, 0,
	96, 97, 98, 0, 0, 0, 0, 543, 0, 0,
	99, 100, 0, 101, 102, 452, 103, 104, 105, 332,
	588, 453, 589, 0, 590, 591, 0, 106, 337, 107,
	108, 109, 110, 558, 576, 111, 592, 593, 112, 0,
	113, 114, 115, 116, 584, 0, 569, 0, 117, 118,
	119, 120, 121, 0, 455, 122, 123, 124, 0, 125,
	126, 127, 128, 129, 130, 0, 0, 456, 131, 132,
	133, 0, 570, 572, 0, 571, 573, 134, 135, 136,
	137, 138, 594, 139, 140, 595, 596, 141, 626, 142,
	0, 143, 144, 145, 146, 147, 0, 148, 149, 150,
	0, 0, 151, 587, 153, 154, 0, 155, 156, 157,
	0, 158, 0, 159, 0, 160, 161, 542, 162, 163,
	164, 577, 556, 165, 0, 166, 167, 597, 168, 0,
	169, 0, 170, 457, 0, 458, 171, 172, 173, 0,
	174, 175, 585, 0, 348, 176, 0, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 0, 186, 187, 0,
	188, 189, 190, 0, 191, 459, 349, 192, 193, 194,
	195, 598, 599, 600, 0, 568, 0, 196, 460, 197,
	461, 198, 199, 200, 201, 202, 0, 0, 203, 586,
	462, 204, 463, 0, 205, 206, 410, 0, 0, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 411, 355, 464, 356, 221, 222,
	357, 531, 223, 224, 225, 557, 583, 226, 601, 227,
	228, 229, 0, 230, 0, 0, 231, 232, 0, 0,
	233, 360, 465, 234, 466, 578, 235, 236, 237, 238,
	239, 240, 241, 0, 242, 243, 579, 244, 363, 247,
	245, 246, 0, 248, 249, 250, 251, 252, 253, 254,
	255, 602, 256, 257, 258, 259, 0, 260, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 270, 0, 271,
	272, 467, 273, 274, 546, 275, 0, 276, 277, 278,
	279, 280, 43, 281, 282, 283, 284, 412, 574, 285,
	286, 287, 288, 468, 289, 290, 603, 291, 0, 292,
	293, 294, 295, 296, 297, 298, 299, 367, 300, 0,
	580, 0, 301, 302, 45, 303, 304, 0, 414, 604,
	0, 0, 413, 305, 581, 306, 582, 555, 307, 308,
	309, 310, 311, 312, 313, 0, 534, 314, 315, 316,
	317, 318, 575, 0, 319, 320, 321, 322, 451, 605,
	0, 323, 469, 324, 0, 0, 0, 41, 325, 326,
	327, 328, 329, 330, 331, 532, 0, 42, 0, 0,
	0, 0, 0, 0, 0, 0, 528, 529, 0, 0,
	0, 0, 530, 0, 0, 538, 561, 549, 550, 551,
	548, 537, 0, 0, 0, 0, 0, 0, 89, 90,
	91, 92, 93, 94, 95, 0, 96, 97, 98, 0,
	0, 0, 0, 543, 0, 0, 99, 100, 0, 101,
	102, 452, 103, 104, 105, 332, 588, 453, 589, 0,
	590, 591, 0, 106, 337, 107, 108, 109, 110, 558,
	576, 111, 592, 593, 112, 0, 113, 114, 115, 116,
	584, 0, 569, 0, 117, 118, 119, 120, 121, 0,
	455, 122, 123, 124, 0, 125, 126, 127, 128, 129,
	130, 0, 0, 456, 131, 132, 133, 0, 570, 572,
	0, 571, 573, 134, 135, 136, 137, 138, 594, 139,
	140, 595, 596, 141, 0, 142, 0, 143, 144, 145,
	146, 147, 0, 148, 149, 150, 0, 0, 151, 587,
	153, 154, 0, 155, 156, 157, 0, 158, 0, 159,
	0, 160, 161, 542, 162, 163, 164, 577, 556, 165,
	0, 166, 167, 597, 168, 0, 169, 0, 170, 457,
	0, 458, 171, 172, 173, 0, 174, 175, 585, 0,
	348, 176, 0, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 0, 186, 187, 0, 188, 189, 190, 0,
	191, 459, 349, 192, 193, 194, 195, 598, 599, 600,
	0, 568, 0, 196, 460, 197, 461, 198, 199, 200,
	201, 202, 0, 0, 203, 586, 462, 204, 463, 0,
	205, 206, 410, 0, 0, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	411, 355, 464, 356, 221, 222, 357, 531, 223, 224,
	225, 557, 583, 226, 601, 227, 228, 229, 0, 230,
	0, 0, 231, 232, 0, 0, 233, 360, 465, 234,
	466, 578, 235, 236, 237, 238, 239, 240, 241, 0,
	242, 243, 579, 244, 363, 247, 245, 246, 0, 248,
	249, 250, 251, 252, 253, 254, 255, 602, 256, 257,
	258, 259, 0, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 0, 271, 272, 467, 273, 274,
	546, 275, 0, 276, 277, 278, 279, 280, 43, 281,
	282, 283, 284, 412, 574, 285, 286, 287, 288, 468,
	289, 290, 603, 291, 0, 292, 293, 294, 295, 296,
	297, 298, 299, 367, 300, 0, 580, 0, 301, 302,
	45, 303, 304, 0, 414, 604, 0, 0, 413, 305,
	581, 306, 582, 555, 307, 308, 309, 310, 311, 312,
	313, 0, 534, 314, 315, 316, 317, 318, 575, 0,
	319, 320, 321, 322, 451, 605, 0, 323, 469, 324,
	0, 0, 0, 41, 325, 326, 327, 328, 329, 330,
	331, 532, 0, 42, 0, 0, 0, 0, 0, 0,
	0, 0, 528, 529, 0, 0, 0, 0, 530, 0,
	0, 538, 561, 549, 550, 551, 548, 537, 0, 0,
	0, 0, 0, 0, 89, 90, 91, 92, 93, 94,
	95, 0, 96, 97, 98, 0, 0, 0, 0, 543,
	0, 0, 99, 100, 0, 101, 102, 452, 103, 104,
	105, 332, 588, 453, 589, 0, 590, 591, 1134, 106,
	337, 107, 108, 109, 110, 558, 576, 111, 592, 593,
	112, 0, 113, 114, 115, 116, 584, 0, 569, 0,
	117, 118, 119, 120, 121, 0, 455, 122, 123, 124,
	0, 125, 126, 127, 128, 129, 130, 0, 0, 456,
	131, 132, 133, 0, 570, 572, 0, 571, 573, 134,
	135, 136, 137, 138, 594, 139, 140, 595, 596, 141,
	0, 142, 0, 143, 144, 145, 146, 147, 0, 148,
	149, 150, 0, 0, 151, 587, 153, 154, 0, 155,
	156, 157, 0, 158, 0, 159, 0, 160, 161, 542,
	162, 163, 164, 577, 556, 165, 0, 166, 167, 597,
	168, 0, 169, 0, 170, 457, 1139, 458, 171, 172,
	173, 0, 174, 175, 585, 0, 348, 176, 0, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 0, 186,
	187, 0, 188, 189, 190, 0, 191, 459, 349, 192,
	193, 194, 195, 598, 599, 600, 0, 568, 0, 196,
	460, 197, 461, 198, 199, 200, 201, 202, 0, 1135,
	203, 586, 462, 204, 463, 0, 205, 206, 410, 0,
	0, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 411, 355, 464, 356,
	221, 222, 357, 531, 223, 224, 225, 557, 583, 226,
	601, 227, 228, 229, 0, 230, 0, 0, 231, 232,
	0, 0, 233, 360, 465, 234, 466, 578, 235, 236,
	237, 238, 239, 240, 241, 0, 242, 243, 579, 244,
	363, 247, 245, 246, 0, 248, 249, 250, 251, 252,
	253, 254, 255, 602, 256, 257, 258, 259, 0, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	0, 271, 272, 467, 273, 274, 546, 275, 0, 276,
	277, 278, 279, 280, 0, 281, 282, 283, 284, 412,
	574, 285, 286, 287, 288, 468, 289, 290, 603, 291,
	0, 292, 293, 294, 295, 296, 297, 298, 299, 367,
	300, 0, 580, 0, 301, 302, 0, 303, 304, 0,
	414, 604, 0, 1136, 413, 305, 581, 306, 582, 555,
	307, 308, 309, 310, 311, 312, 313, 0, 534, 314,
	315, 316, 317, 318, 575, 0, 319, 320, 321, 322,
	372, 605, 0, 323, 469, 324, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 330, 331, 532, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 528, 529,
	0, 0, 0, 0, 530, 0, 0, 538, 561, 549,
	550, 551, 548, 537, 0, 0, 0, 0, 0, 0,
	89, 90, 91, 92, 93, 94, 95, 0, 96, 97,
	98, 0, 0, 0, 0, 543, 0, 0, 99, 100,
	0, 101, 102, 452, 103, 104, 105, 332, 588, 453,
	589, 0, 590, 591, 0, 106, 337, 107, 108, 109,
	110, 558, 576, 111, 592, 593, 112, 0, 113, 114,
	115, 116, 584, 0, 569, 0, 117, 118, 119, 120,
	121, 0, 455, 122, 123, 124, 0, 125, 126, 127,
	128, 129, 130, 0, 0, 456, 131, 132, 133, 0,
	570, 572, 0, 571, 573, 134, 135, 136, 137, 138,
	594, 139, 140, 595, 596, 141, 0, 142, 0, 143,
	144, 145, 146, 147, 0, 148, 149, 150, 0, 0,
	151, 587, 153, 154, 0, 155, 156, 157, 0, 158,
	0, 159, 0, 160, 161, 542, 162, 163, 164, 577,
	556, 165, 0, 166, 167, 597, 168, 0, 169, 0,
	170, 457, 0, 458, 171, 172, 173, 0, 174, 175,
	585, 0, 348, 176, 0, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 0, 186, 187, 0, 188, 189,
	190, 0, 191, 459, 349, 192, 193, 194, 195, 598,
	599, 600, 0, 568, 0, 196, 460, 197, 461, 198,
	199, 200, 201, 202, 0, 0, 203, 586, 462, 204,
	463, 0, 205, 206, 410, 0, 0, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 411, 355, 464, 356, 221, 222, 357, 531,
	223, 224, 225, 557, 583, 226, 601, 227, 228, 229,
	0, 230, 0, 0, 231, 232, 0, 0, 233, 360,
	465, 234, 466, 578, 235, 236, 237, 238, 239, 240,
	241, 0, 242, 243, 579, 244, 363, 247, 245, 246,
	0, 248, 249, 250, 251, 252, 253, 254, 255, 602,
	256, 257, 258, 259, 0, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 0, 271, 272, 467,
	273, 274, 546, 275, 0, 276, 277, 278, 279, 280,
	0, 281, 282, 283, 284, 412, 574, 285, 286, 287,
	288, 468, 289, 290, 603, 291, 0, 292, 293, 294,
	295, 296, 297, 298, 299, 367, 300, 0, 580, 0,
	301, 302, 0, 303, 304, 0, 414, 604, 0, 0,
	413, 305, 581, 306, 582, 555, 307, 308, 309, 310,
	311, 312, 313, 0, 534, 314, 315, 316, 317, 318,
	575, 0, 319, 320, 321, 322, 372, 605, 0, 323,
	469, 324, 0, 0, 0, 0, 325, 326, 327, 328,
	329, 330, 331, 532, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 528, 529, 0, 0, 0, 0,
	530, 0, 0, 538, 1473, 561, 549, 550, 551, 548,
	537, 0, 0, 0, 0, 0, 0, 89, 90, 91,
	92, 93, 94, 95, 0, 96, 97, 98, 0, 0,
	0, 0, 543, 0, 0, 99, 100, 0, 101, 102,
	452, 103, 104, 105, 332, 588, 453, 589, 0, 590,
	591, 0, 106, 337, 107, 108, 109, 110, 558, 576,
	111, 592, 593, 112, 0, 113, 114, 115, 116, 584,
	0, 569, 0, 117, 118, 119, 120, 121, 0, 455,
	122, 123, 124, 0, 125, 126, 127, 128, 129, 130,
	0, 0, 456, 131, 132, 133, 0, 570, 572, 0,
	571, 573, 134, 135, 136, 137, 138, 594, 139, 140,
	595, 596, 141, 0, 142, 0, 143, 144, 145, 146,
	147, 0, 148, 149, 150, 0, 0, 151, 587, 153,
	154, 0, 155, 156, 157, 0, 158, 0, 159, 0,
	160, 161, 542, 162, 163, 164, 577, 556, 165, 0,
	166, 167, 597, 168, 0, 169, 0, 170, 457, 0,
	458, 171, 172, 173, 0, 174, 175, 585, 0, 348,
	176, 0, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 0, 186, 187, 0, 188, 189, 190, 0, 191,
	459, 349, 192, 193, 194, 195, 598, 599, 600, 0,
	568, 0, 196, 460, 197, 461, 198, 199, 200, 201,
	202, 0, 0, 203, 586, 462, 204, 463, 0, 205,
	206, 410, 0, 0, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 411,
	355, 464, 356, 221, 222, 357, 531, 223, 224, 225,
	557, 583, 226, 601, 227, 228, 229, 0, 230, 0,
	0, 231, 232, 0, 0, 233, 360, 465, 234, 466,
	578, 235, 236, 237, 238, 239, 240, 241, 0, 242,
	243, 579, 244, 363, 247, 245, 246, 0, 248, 249,
	250, 251, 252, 253, 254, 255, 602, 256, 257, 258,
	259, 0, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 0, 271, 272, 467, 273, 274, 546,
	275, 0, 276, 277, 278, 279, 280, 0, 281, 282,
	283, 284, 412, 574, 285, 286, 287, 288, 468, 289,
	290, 603, 291, 0, 292, 293, 294, 295, 296, 297,
	298, 299, 367, 300, 0, 580, 0, 301, 302, 0,
	303, 304, 0, 414, 604, 0, 0, 413, 305, 581,
	306, 582, 555, 307, 308, 309, 310, 311, 312, 313,
	0, 534, 314, 315, 316, 317, 318, 575, 0, 319,
	320, 321, 322, 372, 605, 0, 323, 469, 324, 0,
	0, 0, 0, 325, 326, 327, 328, 329, 330, 331,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 529, 0, 0, 0, 0, 530, 0, 0,
	538, 1416, 561, 549, 550, 551, 548, 537, 0, 0,
	0, 0, 0, 0, 89, 90, 91, 92, 93, 94,
	95, 0, 96, 97, 98, 0, 0, 0, 0, 543,
	0, 0, 99, 100, 0, 101, 102, 452, 103, 104,
	105, 332, 588, 453, 589, 0, 590, 591, 0, 106,
	337, 107, 108, 109, 110, 558, 576, 111, 592, 593,
	112, 0, 113, 114, 115, 116, 584, 0, 569, 0,
	117, 118, 119, 120, 121, 0, 455, 122, 123, 124,
	0, 125, 126, 127, 128, 129, 130, 0, 0, 456,
	131, 132, 133, 0, 570, 572, 0, 571, 573, 134,
	135, 136, 137, 138, 594, 139, 140, 595, 596, 141,
	0, 142, 0, 143, 144, 145, 146, 147, 0, 148,
	149, 150, 0, 0, 151, 587, 153, 154, 0, 155,
	156, 157, 0, 158, 0, 159, 0, 160, 161, 542,
	162, 163, 164, 577, 556, 165, 0, 166, 167, 597,
	168, 0, 169, 0, 170, 457, 0, 458, 171, 172,
	173, 0, 174, 175, 585, 0, 348, 176, 0, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 0, 186,
	187, 0, 188, 189, 190, 0, 191, 459, 349, 192,
	193, 194, 195, 598, 599, 600, 0, 568, 0, 196,
	460, 197, 461, 198, 199, 200, 201, 202, 0, 0,
	203, 586, 462, 204, 463, 0, 205, 206, 410, 0,
	0, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 411, 355, 464, 356,
	221, 222, 357, 531, 223, 224, 225, 557, 583, 226,
	601, 227, 228, 229, 0, 230, 0, 0, 231, 232,
	0, 0, 233, 360, 465, 234, 466, 578, 235, 236,
	237, 238, 239, 240, 241, 0, 242, 243, 579, 244,
	363, 247, 245, 246, 0, 248, 249, 250, 251, 252,
	253, 254, 255, 602, 256, 257, 258, 259, 0, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	0, 271, 272, 467, 273, 274, 546, 275, 0, 276,
	277, 278, 279, 280, 0, 281, 282, 283, 284, 412,
	574, 285, 286, 287, 288, 468, 289, 290, 603, 291,
	0, 292, 293, 294, 295, 296, 297, 298, 299, 367,
	300, 0, 580, 0, 301, 302, 0, 303, 304, 0,
	414, 604, 0, 0, 413, 305, 581, 306, 582, 555,
	307, 308, 309, 310, 311, 312, 313, 0, 534, 314,
	315, 316, 317, 318, 575, 0, 319, 320, 321, 322,
	372, 605, 0, 323, 469, 324, 0, 0, 0, 0,
	325, 326, 327, 328, 329, 330, 331, 532, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 528, 529,
	0, 0, 0, 0, 530, 0, 0, 538, 1087, 561,
	549, 550, 551, 548, 537, 0, 0, 0, 0, 0,
	0, 89, 90, 91, 92, 93, 94, 95, 0, 96,
	97, 98, 0, 0, 0, 0, 543, 0, 0, 99,
	100, 0, 101, 102, 452, 103, 104, 105, 332, 588,
	453, 589, 0, 590, 591, 0, 106, 337, 107, 108,
	109, 110, 558, 576, 111, 592, 593, 112, 0, 113,
	114, 115, 116, 584, 0, 569, 0, 117, 118, 119,
	120, 121, 0, 455, 122, 123, 124, 0, 125, 126,
	127, 128, 129, 130, 0, 0, 456, 131, 132, 133,
	0, 570, 572, 0, 571, 573, 134, 135, 136, 137,
	138, 594, 139, 140, 595, 596, 141, 0, 142, 0,
	143, 144, 145, 146, 147, 0, 148, 149, 150, 0,
	0, 151, 587, 153, 154, 0, 155, 156, 157, 0,
	158, 0, 159, 0, 160, 161, 542, 162, 163, 164,
	577, 556, 165, 0, 166, 167, 597, 168, 0, 169,
	0, 170, 457, 0, 458, 171, 172, 173, 0, 174,
	175, 585, 0, 348, 176, 0, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 0, 186, 187, 0, 188,
	189, 190, 0, 191, 459, 349, 192, 193, 194, 195,
	598, 599, 600, 0, 568, 0, 196, 460, 197, 461,
	198, 199, 200, 201, 202, 0, 0, 203, 586, 462,
	204, 463, 0, 205, 206, 410, 0, 0, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 411, 355, 464, 356, 221, 222, 357,
	531, 223, 224, 225, 557, 583, 226, 601, 227, 228,
	229, 0, 230, 0, 0, 231, 232, 0, 0, 233,
	360, 465, 234, 466, 578, 235, 236, 237, 238, 239,
	240, 241, 0, 242, 243, 579, 244, 363, 247, 245,
	246, 0, 248, 249, 250, 251, 252, 253, 254, 255,
	602, 256, 257, 258, 259, 0, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 0, 271, 272,
	467, 273, 274, 546, 275, 0, 276, 277, 278, 279,
	280, 0, 281, 282, 283, 284, 412, 574, 285, 286,
	287, 288, 468, 289, 290, 603, 291, 0, 292, 293,
	294, 295, 296, 297, 298, 299, 367, 300, 0, 580,
	0, 301, 302, 0, 303, 304, 0, 414, 604, 0,
	0, 413, 305, 581, 306, 582, 555, 307, 308, 309,
	310, 311, 312, 313, 0, 534, 314, 315, 316, 317,
	318, 575, 0, 319, 320, 321, 322, 372, 605, 0,
	323, 469, 324, 0, 0, 0, 0, 325, 326, 327,
	328, 329, 330, 331, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 528, 529, 0, 0, 0,
	0, 530, 856, 1083, 538, 561, 549, 550, 551, 548,
	537, 0, 0, 0, 0, 0, 0, 89, 90, 91,
	92, 93, 94, 95, 0, 96, 97, 98, 0, 0,
	0, 0, 543, 0, 0, 99, 100, 0, 101, 102,
	452, 103, 104, 105, 332, 588, 453, 589, 0, 590,
	591, 0, 106, 337, 107, 108, 109, 110, 558, 576,
	111, 592, 593, 112, 0, 113, 114, 115, 116, 584,
	0, 569, 0, 117, 118, 119, 120, 121, 0, 455,
	122, 123, 124, 0, 125, 126, 127, 128, 129, 130,
	0, 0, 456, 131, 132, 133, 0, 570, 572, 0,
	571, 573, 134, 135, 136, 137, 138, 594, 139, 140,
	595, 596, 141, 0, 142, 0, 143, 144, 145, 146,
	147, 0, 148, 149, 150, 0, 0, 151, 587, 153,
	154, 0, 155, 156, 157, 0, 158, 0, 159, 0,
	160, 161, 542, 162, 163, 164, 577, 556, 165, 0,
	166, 167, 597, 168, 0, 169, 0, 170, 457, 0,
	458, 171, 172, 173, 0, 174, 175, 585, 0, 348,
	176, 0, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 0, 186, 187, 0, 188, 189, 190, 0, 191,
	459, 349, 192, 193, 194, 195, 598, 599, 600, 0,
	568, 0, 196, 460, 197, 461, 198, 199, 200, 201,
	202, 0, 0, 203, 586, 462, 204, 463, 0, 205,
	206, 410, 0, 0, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 411,
	355, 464, 356, 221, 222, 357, 531, 223, 224, 225,
	557, 583, 226, 601, 227, 228, 229, 0, 230, 0,
	0, 231, 232, 0, 0, 233, 360, 465, 234, 466,
	578, 235, 236, 237, 238, 239, 240, 241, 0, 242,
	243, 579, 244, 363, 247, 245, 246, 0, 248, 249,
	250, 251, 252, 253, 254, 255, 602, 256, 257, 258,
	259, 0, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 0, 271, 272, 467, 273, 274, 546,
	275, 0, 276, 277, 278, 279, 280, 0, 281, 282,
	283, 284, 412, 574, 285, 286, 287, 288, 468, 289,
	290, 603, 291, 0, 292, 293, 294, 295, 296, 297,
	298, 299, 367, 300, 0, 580, 0, 301, 302, 0,
	303, 304, 0, 414, 604, 0, 0, 413, 305, 581,
	306, 582, 555, 307, 308, 309, 310, 311, 312, 313,
	0, 534, 314, 315, 316, 317, 318, 575, 0, 319,
	320, 321, 322, 372, 605, 1422, 323, 469, 324, 0,
	0, 0, 0, 325, 326, 327, 328, 329, 330, 331,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 529, 0, 0, 0, 0, 530, 0, 0,
	538, 561, 549, 550, 551, 548, 537, 0, 0, 0,
	0, 0, 0, 89, 90, 91, 92, 93, 94, 95,
	0, 96, 97, 98, 0, 0, 0, 0, 543, 0,
	0, 99, 100, 0, 101, 102, 452, 103, 104, 105,
	332, 588, 453, 589, 0, 590, 591, 0, 106, 337,
	107, 108, 109, 110, 558, 576, 111, 592, 593, 112,
	0, 113, 114, 115, 116, 584, 0, 569, 0, 117,
	118, 119, 120, 121, 0, 455, 122, 123, 124, 0,
	125, 126, 127, 128, 129, 130, 0, 0, 456, 131,
	132, 133, 0, 570, 572, 0, 571, 573, 134, 135,
	136, 137, 138, 594, 139, 140, 595, 596, 141, 626,
	142, 0, 143, 144, 145, 146, 147, 0, 148, 149,
	150, 0, 0, 151, 587, 153, 154, 0, 155, 156,
	157, 0, 158, 0, 159, 0, 160, 161, 542, 162,
	163, 164, 577, 556, 165, 0, 166, 167, 597, 168,
	0, 169, 0, 170, 457, 0, 458, 171, 172, 173,
	0, 174, 175, 585, 0, 348, 176, 0, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 0, 186, 187,
	0, 188, 189, 190, 0, 191, 459, 349, 192, 193,
	194, 195, 598, 599, 600, 0, 568, 0, 196, 460,
	197, 461, 198, 199, 200, 201, 202, 0, 0, 203,
	586, 462, 204, 463, 0, 205, 206, 410, 0, 0,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 411, 355, 464, 356, 221,
	222, 357, 531, 223, 224, 225, 557, 583, 226, 601,
	227, 228, 229, 0, 230, 0, 0, 231, 232, 0,
	0, 233, 360, 465, 234, 466, 578, 235, 236, 237,
	238, 239, 240, 241, 0, 242, 243, 579, 244, 363,
	247, 245, 246, 0, 248, 249, 250, 251, 252, 253,
	254, 255, 602, 256, 257, 258, 259, 0, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 0,
	271, 272, 467, 273, 274, 546, 275, 0, 276, 277,
	278, 279, 280, 0, 281, 282, 283, 284, 412, 574,
	285, 286, 287, 288, 468, 289, 290, 603, 291, 0,
	292, 293, 294, 295, 296, 297, 298, 299, 367, 300,
	0, 580, 0, 301, 302, 0, 303, 304, 0, 414,
	604, 0, 0, 413, 305, 581, 306, 582, 555, 307,
	308, 309, 310, 311, 312, 313, 0, 534, 314, 315,
	316, 317, 318, 575, 0, 319, 320, 321, 322, 372,
	605, 0, 323, 469, 324, 0, 0, 0, 0, 325,
	326, 327, 328, 329, 330, 331, 532, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 528, 529, 0,
	0, 0, 0, 530, 0, 0, 538, 561, 549, 550,
	551, 548, 537, 0, 0, 0, 0, 0, 0, 89,
	90, 91, 92, 93, 94, 95, 0, 96, 97, 98,
	0, 0, 0, 0, 543, 0, 0, 99, 100, 0,
	101, 102, 452, 103, 104, 105, 332, 588, 453, 589,
	0, 590, 591, 0, 106, 337, 107, 108, 109, 110,
	558, 576, 111, 592, 593, 112, 0, 113, 114, 115,
	116, 584, 0, 569, 0, 117, 118, 119, 120, 121,
	0, 455, 122, 123, 124, 0, 125, 126, 127, 128,
	129, 130, 0, 0, 456, 131, 132, 133, 0, 570,
	572, 0, 571, 573, 134, 135, 136, 137, 138, 594,
	139, 140, 595, 596, 141, 0, 142, 0, 143, 144,
	145, 146, 147, 0, 148, 149, 150, 0, 0, 151,
	587, 153, 154, 0, 155, 156, 157, 0, 158, 0,
	159, 0, 160, 161, 542, 162, 163, 164, 577, 556,
	165, 0, 166, 167, 597, 168, 0, 169, 0, 170,
	457, 1139, 458, 171, 172, 173, 0, 174, 175, 585,
	0, 348, 176, 0, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 0, 186, 187, 0, 188, 189, 190,
	0, 191, 459, 349, 192, 193, 194, 195, 598, 599,
	600, 0, 568, 0, 196, 460, 197, 461, 198, 199,
	200, 201, 202, 0, 0, 203, 586, 462, 204, 463,
	0, 205, 206, 410, 0, 0, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 411, 355, 464, 356, 221, 222, 357, 531, 223,
	224, 225, 557, 583, 226, 601, 227, 228, 229, 0,
	230, 0, 0, 231, 232, 0, 0, 233, 360, 465,
	234, 466, 578, 235, 236, 237, 238, 239, 240, 241,
	0, 242, 243, 579, 244, 363, 247, 245, 246, 0,
	248, 249, 250, 251, 252, 253, 254, 255, 602, 256,
	257, 258, 259, 0, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 0, 271, 272, 467, 273,
	274, 546, 275, 0, 276, 277, 278, 279, 280, 0,
	281, 282, 283, 284, 412, 574, 285, 286, 287, 288,
	468, 289, 290, 603, 291, 0, 292, 293, 294, 295,
	296, 297, 298, 299, 367, 300, 0, 580, 0, 301,
	302, 0, 303, 304, 0, 414, 604, 0, 0, 413,
	305, 581, 306, 582, 555, 307, 308, 309, 310, 311,
	312, 313, 0, 534, 314, 315, 316, 317, 318, 575,
	0, 319, 320, 321, 322, 372, 605, 0, 323, 469,
	324, 0, 0, 0, 0, 325, 326, 327, 328, 329,
	330, 331, 532, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 528, 529, 0, 0, 0, 0, 530,
	0, 0, 538, 561, 549, 550, 551, 548, 537, 0,
	0, 0, 0, 0, 0, 89, 90, 91, 92, 93,
	94, 95, 0, 96, 97, 98, 0, 0, 0, 0,
	543, 0, 0, 99, 100, 0, 101, 102, 452, 103,
	104, 105, 332, 588, 453, 589, 0, 590, 591, 0,
	106, 337, 107, 108, 109, 110, 558, 576, 111, 592,
	593, 112, 0, 113, 114, 115, 116, 584, 0, 569,
	0, 117, 118, 119, 120, 121, 0, 455, 122, 123,
	124, 0, 125, 126, 127, 128, 129, 130, 0, 0,
	456, 131, 132, 133, 0, 570, 572, 0, 571, 573,
	134, 135, 136, 137, 138, 594, 139, 140, 595, 596,
	141, 0, 142, 0, 143, 144, 145, 146, 147, 0,
	148, 149, 150, 0, 0, 151, 587, 153, 154, 0,
	155, 156, 157, 0, 158, 0, 159, 0, 160, 161,
	542, 162, 163, 164, 577, 556, 165, 0, 166, 167,
	597, 168, 0, 169, 0, 170, 457, 0, 458, 171,
	172, 173, 0, 174, 175, 585, 0, 348, 176, 0,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 0,
	186, 187, 0, 188, 189, 190, 0, 191, 459, 349,
	192, 193, 194, 195, 598, 599, 600, 0, 568, 0,
	196, 460, 197, 461, 198, 199, 200, 201, 202, 0,
	0, 203, 586, 462, 204, 463, 0, 205, 206, 410,
	0, 0, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 411, 355, 464,
	356, 221, 222, 357, 531, 223, 224, 225, 557, 583,
	226, 601, 227, 228, 229, 0, 230, 0, 0, 231,
	232, 0, 0, 233, 360, 465, 234, 466, 578, 235,
	236, 237, 238, 239, 240, 241, 0, 242, 243, 579,
	244, 363, 247, 245, 246, 0, 248, 249, 250, 251,
	252, 253, 254, 255, 602, 256, 257, 258, 259, 0,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 0, 271, 272, 467, 273, 274, 546, 275, 0,
	276, 277, 278, 279, 280, 0, 281, 282, 283, 284,
	412, 574, 285, 286, 287, 288, 468, 289, 290, 603,
	291, 0, 292, 293, 294, 295, 296, 297, 298, 299,
	367, 300, 0, 580, 0, 301, 302, 0, 303, 304,
	0, 414, 604, 0, 0, 413, 305, 581, 306, 582,
	555, 307, 308, 309, 310, 311, 312, 313, 0, 534,
	314, 315, 316, 317, 318, 575, 0, 319, 320, 321,
	322, 372, 605, 0, 323, 469, 324, 0, 0, 0,
	0, 325, 326, 327, 328, 329, 330, 331, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 528,
	529, 526, 0, 0, 0, 530, 0, 0, 538, 561,
	549, 550, 551, 548, 537, 0, 0, 0, 0, 0,
	0, 89, 90, 91, 92, 93, 94, 95, 794, 96,
	97, 98, 0, 0, 0, 0, 543, 0, 0, 99,
	100, 0, 101, 102, 452, 103, 104, 105, 332, 588,
	453, 589, 0, 590, 591, 0, 106, 337, 107, 108,
	109, 110, 558, 576, 111, 592, 593, 112, 0, 113,
	114, 115, 116, 584, 0, 569, 0, 117, 118, 119,
	120, 121, 0, 455, 122, 123, 124, 0, 125, 126,
	127, 128, 129, 130, 0, 0, 456, 131, 132, 133,
	0, 570, 572, 0, 571, 573, 134, 135, 136, 137,
	138, 594, 139, 140, 595, 596, 141, 0, 142, 0,
	143, 144, 145, 146, 147, 0, 148, 149, 150, 0,
	0, 151, 587, 153, 154, 0, 155, 156, 157, 0,
	158, 0, 159, 0, 160, 161, 542, 162, 163, 164,
	577, 556, 165, 0, 166, 167, 597, 168, 0, 169,
	0, 170, 457, 0, 458, 171, 172, 173, 0, 174,
	175, 585, 0, 348, 176, 0, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 0, 186, 187, 0, 188,
	189, 190, 0, 191, 459, 349, 192, 193, 194, 195,
	598, 599, 600, 0, 568, 0, 196, 460, 197, 461,
	198, 199, 200, 201, 202, 0, 0, 203, 586, 462,
	204, 463, 0, 205, 206, 410, 0, 0, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 411, 355, 464, 356, 221, 222, 357,
	531, 223, 224, 225, 557, 583, 226, 601, 227, 228,
	229, 0, 230, 0, 0, 231, 232, 0, 0, 233,
	360, 465, 234, 466, 578, 235, 236, 237, 238, 239,
	240, 241, 0, 242, 243, 579, 244, 363, 247, 245,
	246, 0, 248, 249, 250, 251, 252, 253, 254, 255,
	602, 256, 257, 258, 259, 0, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 0, 271, 272,
	467, 273, 274, 546, 275, 0, 276, 277, 278, 279,
	280, 0, 281, 282, 283, 284, 412, 574, 285, 286,
	287, 288, 468, 289, 290, 603, 291, 0, 292, 293,
	294, 295, 296, 297, 298, 299, 367, 300, 0, 580,
	0, 301, 302, 0, 303, 304, 0, 414, 604, 0,
	0, 413, 305, 581, 306, 582, 555, 307, 308, 309,
	310, 311, 312, 313, 0, 534, 314, 315, 316, 317,
	318, 575, 0, 319, 320, 321, 322, 372, 605, 0,
	323, 469, 324, 0, 0, 0, 0, 325, 326, 327,
	328, 329, 330, 331, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 528, 529, 0, 0, 0,
	0, 530, 0, 0, 538, 561, 549, 550, 551, 548,
	537, 0, 0, 0, 0, 0, 0, 89, 90, 91,
	92, 93, 94, 95, 0, 96, 97, 98, 0, 0,
	0, 0, 543, 0, 0, 99, 100, 0, 101, 102,
	452, 103, 104, 105, 332, 588, 453, 589, 0, 590,
	591, 0, 106, 337, 107, 108, 109, 110, 558, 576,
	111, 592, 593, 112, 0, 113, 114, 115, 116, 584,
	0, 569, 0, 117, 118, 119, 120, 121, 0, 455,
	122, 123, 124, 0, 125, 126, 127, 128, 129, 130,
	0, 0, 456, 131, 132, 1731, 0, 570, 572, 0,
	571, 573, 134, 135, 136, 137, 138, 594, 139, 140,
	595, 596, 141, 0, 142, 0, 143, 144, 145, 146,
	147, 0, 148, 149, 150, 0, 0, 151, 587, 153,
	154, 0, 155, 156, 157, 0, 158, 0, 159, 0,
	160, 161, 542, 162, 163, 164, 577, 556, 165, 0,
	166, 167, 597, 168, 0, 169, 0, 170, 457, 0,
	458, 171, 172, 173, 0, 174, 175, 585, 0, 348,
	176, 0, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 0, 186, 187, 0, 188, 189, 190, 0, 191,
	459, 349, 192, 193, 194, 195, 598, 599, 600, 0,
	568, 0, 196, 460, 197, 461, 198, 199, 200, 201,
	202, 0, 0, 203, 586, 462, 204, 463, 0, 205,
	206, 410, 0, 0, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 411,
	355, 464, 356, 221, 222, 357, 531, 223, 224, 225,
	557, 583, 226, 601, 227, 228, 229, 0, 230, 0,
	0, 231, 232, 0, 0, 233, 360, 465, 234, 466,
	578, 235, 236, 237, 238, 239, 240, 241, 0, 242,
	243, 579, 244, 363, 247, 245, 246, 0, 248, 249,
	250, 251, 252, 253, 254, 255, 602, 256, 257, 258,
	259, 0, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 0, 271, 272, 467, 273, 274, 546,
	275, 0, 276, 277, 278, 279, 280, 0, 281, 282,
	283, 284, 412, 574, 285, 286, 287, 288, 468, 289,
	290, 603, 291, 0, 292, 293, 294, 295, 296, 297,
	298, 299, 367, 300, 0, 580, 0, 301, 302, 0,
	303, 304, 0, 414, 604, 0, 0, 413, 305, 581,
	306, 582, 555, 307, 308, 309, 310, 1730, 312, 313,
	0, 534, 314, 315, 316, 317, 318, 575, 0, 319,
	320, 321, 322, 372, 605, 0, 323, 469, 324, 0,
	0, 0, 0, 325, 326, 327, 328, 329, 330, 331,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 529, 0, 0, 0, 0, 530, 0, 0,
	538, 561, 549, 550, 551, 548, 537, 0, 0, 0,
	0, 0, 0, 89, 90, 91, 92, 93, 94, 95,
	0, 96, 97, 98, 0, 0, 0, 0, 543, 0,
	0, 99, 100, 0, 101, 102, 452, 103, 104, 105,
	1729, 588, 453, 589, 0, 590, 591, 0, 106, 337,
	107, 108, 109, 110, 558, 576, 111, 592, 593, 112,
	0, 113, 114, 115, 116, 584, 0, 569, 0, 117,
	118, 119, 120, 121, 0, 455, 122, 123, 124, 0,
	125, 126, 127, 128, 129, 130, 0, 0, 456, 131,
	132, 1731, 0, 570, 572, 0, 571, 573, 134, 135,
	136, 137, 138, 594, 139, 140, 595, 596, 141, 0,
	142, 0, 143, 144, 145, 146, 147, 0, 148, 149,
	150, 0, 0, 151, 587, 153, 154, 0, 155, 156,
	157, 0, 158, 0, 159, 0, 160, 161, 542, 162,
	163, 164, 577, 556, 165, 0, 166, 167, 597, 168,
	0, 169, 0, 170, 457, 0, 458, 171, 172, 173,
	0, 174, 175, 585, 0, 348, 176, 0, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 0, 186, 187,
	0, 188, 189, 190, 0, 191, 459, 349, 192, 193,
	194, 195, 598, 599, 600, 0, 568, 0, 196, 460,
	197, 461, 198, 199, 200, 201, 202, 0, 0, 203,
	586, 462, 204, 463, 0, 205, 206, 410, 0, 0,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 411, 355, 464, 356, 221,
	222, 357, 531, 223, 224, 225, 557, 583, 226, 601,
	227, 228, 229, 0, 230, 0, 0, 231, 232, 0,
	0, 233, 360, 465, 234, 466, 578, 235, 236, 237,
	238, 239, 240, 241, 0, 242, 243, 579, 244, 363,
	247, 245, 246, 0, 248, 249, 250, 251, 252, 253,
	254, 255, 602, 256, 257, 258, 259, 0, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 0,
	271, 272, 467, 273, 274, 546, 275, 0, 276, 277,
	278, 279, 280, 0, 281, 282, 283, 284, 412, 574,
	285, 286, 287, 288, 468, 289, 290, 603, 291, 0,
	292, 293, 294, 295, 296, 297, 298, 299, 367, 300,
	0, 580, 0, 301, 302, 0, 303, 304, 0, 414,
	604, 0, 0, 413, 305, 581, 306, 582, 555, 307,
	308, 309, 310, 1730, 312, 313, 0, 534, 314, 315,
	316, 317, 318, 575, 0, 319, 320, 321, 322, 372,
	605, 0, 323, 469, 324, 0, 0, 0, 0, 325,
	326, 327, 328, 329, 330, 331, 532, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 528, 529, 0,
	0, 0, 0, 530, 0, 0, 538, 561, 549, 550,
	551, 548, 537, 0, 0, 0, 0, 0, 0, 89,
	90, 91, 92, 93, 94, 95, 0, 96, 97, 98,
	0, 0, 0, 0, 543, 0, 0, 99, 100, 0,
	101, 102, 452, 103, 104, 105, 332, 588, 453, 589,
	0, 590, 591, 0, 106, 337, 107, 108, 109, 110,
	558, 576, 111, 592, 593, 112, 0, 113, 114, 115,
	116, 584, 0, 569, 0, 117, 118, 119, 120, 121,
	0, 455, 122, 123, 124, 0, 125, 126, 127, 128,
	129, 130, 0, 0, 456, 131, 132, 133, 0, 570,
	572, 0, 571, 573, 134, 135, 136, 137, 138, 594,
	139, 140, 595, 596, 141, 0, 142, 0, 143, 144,
	145, 146, 147, 0, 148, 149, 150, 0, 0, 151,
	587, 153, 154, 0, 155, 156, 157, 0, 158, 0,
	159, 0, 160, 161, 542, 162, 163, 164, 577, 556,
	165, 0, 166, 167, 597, 168, 0, 169, 0, 170,
	457, 0, 458, 171, 172, 173, 0, 174, 175, 585,
	0, 348, 176, 0, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 0, 186, 187, 0, 188, 189, 190,
	0, 191, 459, 349, 192, 193, 194, 195, 598, 599,
	600, 0, 568, 0, 196, 460, 197, 461, 198, 199,
	200, 201, 202, 0, 0, 203, 586, 462, 204, 463,
	0, 205, 206, 410, 0, 0, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 411, 355, 464, 356, 221, 222, 357, 531, 223,
	224, 225, 557, 583, 226, 601, 227, 228, 229, 0,
	230, 0, 0, 231, 232, 0, 0, 233, 360, 465,
	234, 466, 578, 235, 236, 237, 238, 239, 240, 241,
	0, 242, 243, 579, 244, 363, 247, 245, 246, 0,
	248, 249, 250, 251, 252, 253, 254, 255, 602, 256,
	257, 258, 259, 0, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 0, 271, 272, 467, 273,
	274, 546, 275, 0, 276, 277, 278, 279, 280, 0,
	281, 282, 283, 284, 412, 574, 285, 286, 287, 288,
	468, 289, 290, 603, 291, 0, 292, 293, 294, 295,
	296, 297, 298, 299, 367, 300, 0, 580, 0, 301,
	302, 0, 303, 304, 0, 414, 604, 0, 0, 413,
	305, 581, 306, 582, 555, 307, 308, 309, 310, 311,
	312, 313, 0, 534, 314, 315, 316, 317, 318, 575,
	0, 319, 320, 321, 322, 372, 605, 0, 323, 469,
	324, 0, 0, 0, 0, 325, 326, 327, 328, 329,
	330, 331, 532, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 528, 529, 0, 0, 0, 0, 530,
	0, 0, 538, 561, 549, 550, 551, 548, 537, 0,
	0, 0, 0, 0, 0, 89, 90, 91, 92, 93,
	94, 95, 0, 96, 97, 98, 0, 0, 0, 0,
	543, 0, 0, 99, 100, 0, 101, 102, 452, 103,
	104, 105, 332, 588, 453, 589, 0, 590, 591, 0,
	106, 337, 107, 108, 109, 110, 558, 576, 111, 592,
	593, 112, 0, 113, 114, 115, 116, 584, 0, 569,
	0, 117, 118, 119, 120, 121, 0, 455, 122, 123,
	124, 0, 125, 126, 127, 128, 129, 130, 0, 0,
	456, 131, 132, 133, 0, 570, 572, 0, 571, 573,
	134, 135, 136, 137, 138, 594, 139, 140, 595, 596,
	141, 0, 142, 0, 143, 144, 145, 146, 147, 0,
	148, 149, 150, 0, 0, 151, 587, 153, 154, 0,
	155, 156, 157, 0, 158, 0, 159, 0, 160, 161,
	542, 162, 163, 164, 577, 556, 165, 0, 166, 167,
	597, 168, 0, 169, 0, 170, 457, 0, 458, 171,
	172, 173, 0, 174, 175, 585, 0, 348, 176, 0,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 0,
	186, 187, 0, 188, 189, 190, 0, 191, 459, 349,
	192, 193, 194, 195, 598, 599, 600, 0, 568, 0,
	196, 460, 197, 461, 198, 199, 200, 201, 202, 0,
	0, 203, 586, 462, 204, 463, 0, 205, 206, 410,
	0, 0, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 411, 355, 464,
	356, 221, 222, 357, 0, 223, 224, 225, 557, 583,
	226, 601, 227, 228, 229, 0, 230, 0, 0, 231,
	232, 0, 0, 233, 360, 465, 234, 466, 578, 235,
	236, 237, 238, 239, 240, 241, 0, 242, 243, 579,
	244, 363, 247, 245, 246, 0, 248, 249, 250, 251,
	252, 253, 254, 255, 602, 256, 257, 258, 259, 0,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 0, 271, 272, 467, 273, 274, 1129, 275, 0,
	276, 277, 278, 279, 280, 0, 281, 282, 283, 284,
	412, 574, 285, 286, 287, 288, 468, 289, 290, 603,
	291, 0, 292, 293, 294, 295, 296, 297, 298, 299,
	367, 300, 0, 580, 0, 301, 302, 0, 303, 304,
	0, 414, 604, 0, 0, 413, 305, 581, 306, 582,
	555, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	314, 315, 316, 317, 318, 575, 0, 319, 320, 321,
	322, 372, 605, 0, 323, 469, 324, 0, 0, 0,
	0, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1125,
	1126, 0, 0, 0, 0, 1127, 0, 0, 1128, 561,
	549, 550, 551, 548, 537, 0, 0, 0, 0, 0,
	0, 89, 90, 91, 92, 93, 94, 95, 0, 96,
	97, 98, 0, 0, 0, 0, 543, 0, 0, 99,
	100, 0, 101, 102, 452, 103, 104, 105, 0, 588,
	453, 589, 0, 590, 591, 0, 106, 337, 107, 108,
	109, 110, 558, 576, 111, 592, 593, 112, 0, 113,
	114, 115, 116, 584, 0, 569, 0, 117, 118, 119,
	120, 121, 0, 455, 122, 123, 124, 0, 125, 126,
	127, 128, 129, 130, 0, 0, 456, 131, 132, 1731,
	0, 570, 572, 0, 571, 573, 134, 135, 136, 137,
	138, 594, 139, 140, 595, 596, 141, 0, 142, 0,
	143, 144, 145, 146, 147, 0, 148, 149, 150, 0,
	0, 151, 587, 153, 154, 0, 155, 156, 157, 0,
	158, 0, 159, 0, 160, 161, 542, 162, 163, 164,
	577, 556, 165, 0, 166, 167, 597, 168, 0, 169,
	0, 170, 457, 0, 458, 171, 172, 173, 0, 174,
	175, 585, 0, 348, 176, 0, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 0, 186, 187, 0, 188,
	189, 190, 0, 191, 459, 349, 192, 193, 194, 195,
	598, 599, 600, 0, 568, 0, 196, 0, 197, 461,
	198, 199, 200, 201, 202, 0, 0, 203, 586, 462,
	204, 0, 0, 205, 206, 410, 0, 0, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 411, 355, 464, 356, 221, 222, 357,
	531, 223, 224, 225, 557, 583, 226, 601, 227, 228,
	229, 0, 230, 0, 0, 231, 232, 0, 0, 233,
	360, 465, 234, 466, 578, 235, 236, 237, 238, 239,
	240, 241, 0, 242, 243, 579, 244, 363, 247, 245,
	246, 0, 248, 249, 250, 251, 252, 253, 254, 255,
	602, 256, 257, 258, 259, 0, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 0, 271, 272,
	467, 273, 274, 546, 275, 0, 276, 277, 278, 279,
	280, 0, 281, 282, 283, 284, 412, 574, 285, 286,
	287, 288, 0, 289, 290, 603, 291, 0, 292, 293,
	294, 295, 296, 297, 298, 299, 367, 300, 0, 580,
	0, 301, 302, 0, 303, 304, 0, 414, 604, 0,
	0, 413, 305, 581, 306, 582, 555, 307, 308, 309,
	310, 1730, 312, 313, 0, 534, 314, 315, 316, 317,
	318, 575, 0, 319, 320, 321, 322, 372, 605, 0,
	323, 469, 324, 0, 0, 0, 0, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 561, 0, 528, 529, 0, 0, 0,
	0, 530, 0, 0, 538, 89, 90, 91, 92, 93,
	94, 95, 0, 96, 97, 98, 0, 0, 0, 0,
	0, 0, 0, 99, 100, 0, 101, 102, 452, 103,
	104, 105, 332, 333, 453, 334, 0, 335, 336, 0,
	106, 337, 107, 108, 109, 110, 0, 576, 111, 338,
	339, 112, 0, 113, 114, 115, 116, 584, 0, 569,
	0, 117, 118, 119, 120, 121, 0, 455, 122, 123,
	124, 0, 125, 126, 127, 128, 129, 130, 0, 0,
	456, 131, 132, 133, 0, 570, 572, 0, 571, 573,
	134, 135, 136, 137, 138, 341, 139, 140, 342, 343,
	141, 0, 142, 0, 143, 144, 145, 146, 147, 0,
	148, 149, 150, 0, 0, 151, 152, 153, 154, 0,
	155, 156, 157, 0, 158, 0, 159, 0, 160, 161,
	344, 162, 163, 164, 577, 0, 165, 0, 166, 167,
	346, 168, 0, 169, 0, 170, 457, 0, 458, 171,
	172, 173, 0, 174, 175, 585, 0, 348, 176, 0,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 0,
	186, 187, 0, 188, 189, 190, 0, 191, 459, 349,
	192, 193, 194, 195, 350, 351, 352, 0, 353, 0,
	196, 460, 197, 461, 198, 199, 200, 201, 202, 0,
	0, 203, 586, 462, 204, 463, 0, 205, 206, 410,
	0, 0, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 411, 355, 464,
	356, 221, 222, 357, 0, 223, 224, 225, 0, 583,
	226, 359, 227, 228, 229, 0, 230, 0, 0, 231,
	232, 0, 0, 233, 360, 465, 234, 466, 578, 235,
	236, 237, 238, 239, 240, 241, 0, 242, 243, 579,
	244, 363, 247, 245, 246, 0, 248, 249, 250, 251,
	252, 253, 254, 255, 364, 256, 257, 258, 259, 0,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 0, 271, 272, 467, 273, 274, 365, 275, 0,
	276, 277, 278, 279, 280, 0, 281, 282, 283, 284,
	412, 574, 285, 286, 287, 288, 468, 289, 290, 366,
	291, 0, 292, 293, 294, 295, 296, 297, 298, 299,
	367, 300, 0, 580, 0, 301, 302, 0, 303, 304,
	0, 414, 369, 0, 0, 413, 305, 581, 306, 582,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	314, 315, 316, 317, 318, 575, 0, 319, 320, 321,
	322, 372, 373, 0, 323, 469, 324, 0, 0, 447,
	0, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	0, 89, 90, 91, 92, 93, 94, 95, 0, 96,
	97, 98, 0, 0, 0, 0, 0, 0, 1532, 99,
	100, 0, 101, 102, 452, 103, 104, 105, 332, 333,
	453, 334, 0, 335, 336, 0, 106, 337, 107, 108,
	109, 110, 0, 0, 111, 338, 339, 112, 0, 113,
	114, 115, 116, 340, 0, 454, 0, 117, 118, 119,
	120, 121, 0, 455, 122, 123, 124, 0, 125, 126,
	127, 128, 129, 130, 0, 0, 456, 131, 132, 133,
	0, 0, 0, 0, 0, 0, 134, 135, 136, 137,
	138, 341, 139, 140, 342, 343, 141, 0, 142, 0,
	143, 144, 145, 146, 147, 0, 148, 149, 150, 0,
	0, 151, 152, 153, 154, 0, 155, 156, 157, 0,
	158, 0, 159, 0, 160, 161, 344, 162, 163, 164,
	345, 0, 165, 0, 166, 167, 346, 168, 0, 169,
	0, 170, 457, 0, 458, 171, 172, 173, 0, 174,
	175, 347, 0, 348, 176, 0, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 0, 186, 187, 0, 188,
	189, 190, 0, 191, 459, 349, 192, 193, 194, 195,
	350, 351, 352, 0, 353, 0, 196, 460, 197, 461,
	198, 199, 200, 201, 202, 0, 0, 203, 354, 462,
	204, 463, 0, 205, 206, 410, 0, 0, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 411, 355, 464, 356, 221, 222, 357,
	0, 223, 224, 225, 0, 358, 226, 359, 227, 228,
	229, 0, 230, 0, 0, 231, 232, 0, 0, 233,
	360, 465, 234, 466, 361, 235, 236, 237, 238, 239,
	240, 241, 0, 242, 243, 362, 244, 363, 247, 245,
	246, 0, 248, 249, 250, 251, 252, 253, 254, 255,
	364, 256, 257, 258, 259, 0, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 0, 271, 272,
	467, 273, 274, 365, 275, 0, 276, 277, 278, 279,
	280, 43, 281, 282, 283, 284, 412, 0, 285, 286,
	287, 288, 468, 289, 290, 366, 291, 0, 292, 293,
	294, 295, 296, 297, 298, 299, 367, 300, 0, 368,
	0, 301, 302, 45, 303, 304, 0, 414, 369, 0,
	0, 413, 305, 370, 306, 371, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 314, 315, 316, 317,
	318, 0, 0, 319, 320, 321, 322, 451, 373, 0,
	323, 469, 324, 0, 0, 0, 41, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 42, 0, 0, 0,
	0, 0, 0, 447, 671, 675, 0, 676, 666, 0,
	0, 0, 0, 0, 40, 89, 90, 91, 92, 93,
	94, 95, 0, 96, 97, 98, 0, 0, 0, 0,
	0, 0, 0, 99, 100, 0, 101, 102, 452, 103,
	104, 105, 332, 333, 453, 334, 0, 335, 336, 0,
	106, 337, 107, 108, 109, 110, 0, 0, 111, 338,
	339, 112, 0, 113, 114, 115, 116, 340, 0, 454,
	0, 117, 118, 119, 120, 121, 0, 455, 122, 123,
	124, 0, 125, 126, 127, 128, 129, 130, 0, 0,
	456, 131, 132, 133, 0, 0, 0, 0, 0, 0,
	134, 135, 136, 137, 138, 341, 139, 140, 342, 343,
	141, 679, 142, 0, 143, 144, 145, 146, 147, 0,
	148, 149, 150, 0, 0, 151, 152, 153, 154, 0,
	155, 156, 157, 0, 158, 0, 159, 0, 160, 161,
	344, 162, 163, 164, 345, 668, 165, 0, 166, 167,
	346, 168, 0, 169, 0, 170, 457, 0, 458, 171,
	172, 173, 0, 174, 175, 347, 0, 348, 176, 0,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 0,
	186, 187, 0, 188, 189, 190, 0, 191, 459, 349,
	192, 193, 194, 195, 350, 351, 352, 0, 353, 0,
	196, 460, 197, 461, 198, 199, 200, 201, 202, 0,
	0, 203, 354, 462, 204, 463, 0, 205, 206, 410,
	0, 0, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 411, 355, 464,
	356, 221, 222, 357, 0, 223, 224, 225, 0, 358,
	226, 359, 227, 228, 229, 0, 230, 669, 0, 231,
	232, 0, 0, 233, 360, 465, 234, 466, 361, 235,
	236, 237, 238, 239, 240, 241, 0, 242, 243, 362,
	244, 363, 247, 245, 246, 0, 248, 249, 250, 251,
	252, 253, 254, 255, 364, 256, 257, 258, 259, 0,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 0, 271, 272, 467, 273, 274, 365, 275, 0,
	276, 277, 278, 279, 280, 0, 281, 282, 283, 284,
	412, 0, 285, 286, 287, 288, 468, 289, 290, 366,
	291, 0, 292, 293, 294, 295, 296, 297, 298, 299,
	367, 300, 0, 368, 0, 301, 302, 0, 303, 304,
	0, 414, 369, 0, 0, 413, 305, 370, 306, 371,
	667, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	314, 315, 316, 317, 318, 0, 0, 319, 320, 321,
	322, 372, 373, 0, 323, 469, 324, 0, 0, 0,
	0, 325, 326, 327, 328, 329, 330, 331, 0, 447,
	671, 675, 0, 676, 666, 0, 0, 0, 0, 677,
	672, 89, 90, 91, 92, 93, 94, 95, 0, 96,
	97, 98, 0, 0, 0, 0, 0, 0, 0, 99,
	100, 0, 101, 102, 452, 103, 104, 105, 332, 333,
	453, 334, 0, 335, 336, 0, 106, 337, 107, 108,
	109, 110, 0, 0, 111, 338, 339, 112, 0, 113,
	114, 115, 116, 340, 0, 454, 0, 117, 118, 119,
	120, 121, 0, 455, 122, 123, 124, 0, 125, 126,
	127, 128, 129, 130, 0, 0, 456, 131, 132, 133,
	0, 0, 0, 0, 0, 0, 134, 135, 136, 137,
	138, 341, 139, 140, 342, 343, 141, 662, 142, 0,
	143, 144, 145, 146, 147, 0, 148, 149, 150, 0,
	0, 151, 152, 153, 154, 0, 155, 156, 157, 0,
	158, 0, 159, 0, 160, 161, 344, 162, 163, 164,
	345, 668, 165, 0, 166, 167, 346, 168, 0, 169,
	0, 170, 457, 0, 458, 171, 172, 173, 0, 174,
	175, 347, 0, 348, 176, 0, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 0, 186, 187, 0, 188,
	189, 190, 0, 191, 459, 349, 192, 193, 194, 195,
	350, 351, 352, 0, 353, 0, 196, 460, 197, 461,
	198, 199, 200, 201, 202, 0, 0, 203, 354, 462,
	204, 463, 0, 205, 206, 410, 0, 0, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 411, 355, 464, 356, 221, 222, 357,
	0, 223, 224, 225, 0, 358, 226, 359, 227, 228,
	229, 0, 230, 669, 0, 231, 232, 0, 0, 233,
	360, 465, 234, 466, 361, 235, 236, 237, 238, 239,
	240, 241, 0, 242, 243, 362, 244, 363, 247, 245,
	246, 0, 248, 249, 250, 251, 252, 253, 254, 255,
	364, 256, 257, 258, 259, 0, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 0, 271, 272,
	467, 273, 274, 365, 275, 0, 276, 277, 278, 279,
	280, 0, 281, 282, 283, 284, 412, 0, 285, 286,
	287, 288, 468, 289, 290, 366, 291, 0, 292, 293,
	294, 295, 296, 297, 298, 299, 367, 300, 0, 368,
	0, 301, 302, 0, 303, 304, 0, 414, 369, 0,
	0, 413, 305, 370, 306, 371, 667, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 314, 315, 316, 317,
	318, 0, 0, 319, 320, 321, 322, 372, 373, 0,
	323, 469, 324, 0, 0, 0, 0, 325, 326, 327,
	328, 329, 330, 331, 0, 447, 671, 675, 0, 676,
	666, 0, 0, 0, 0, 677, 672, 89, 90, 91,
	92, 93, 94, 95, 0, 96, 97, 98, 0, 0,
	0, 0, 0, 0, 0, 99, 100, 0, 101, 102,
	452, 103, 104, 105, 332, 333, 453, 334, 0, 335,
	336, 0, 106, 337, 107, 108, 109, 110, 0, 0,
	111, 338, 339, 112, 0, 113, 114, 115, 116, 340,
	0, 454, 0, 117, 118, 119, 120, 121, 0, 455,
	122, 123, 124, 0, 125, 126, 127, 128, 129, 130,
	0, 0, 456, 131, 132, 133, 0, 0, 0, 0,
	0, 0, 134, 135, 136, 137, 138, 341, 139, 140,
	342, 343, 141, 0, 142, 0, 143, 144, 145, 146,
	147, 0, 148, 149, 150, 0, 0, 151, 152, 153,
	154, 0, 155, 156, 157, 0, 158, 0, 159, 0,
	160, 161, 344, 162, 163, 164, 345, 668, 165, 0,
	166, 167, 346, 168, 0, 169, 0, 170, 457, 0,
	458, 171, 172, 173, 0, 174, 175, 347, 0, 348,
	176, 0, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 0, 186, 187, 0, 188, 189, 190, 0, 191,
	459, 349, 192, 193, 194, 195, 350, 351, 352, 0,
	353, 0, 196, 460, 197, 461, 198, 199, 200, 201,
	202, 0, 0, 203, 354, 462, 204, 463, 0, 205,
	206, 410, 0, 0, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 411,
	355, 464, 356, 221, 222, 357, 0, 223, 224, 225,
	0, 358, 226, 359, 227, 228, 229, 0, 230, 669,
	0, 231, 232, 0, 0, 233, 360, 465, 234, 466,
	361, 235, 236, 237, 238, 239, 240, 241, 0, 242,
	243, 362, 244, 363, 247, 245, 246, 0, 248, 249,
	250, 251, 252, 253, 254, 255, 364, 256, 257, 258,
	259, 0, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 0, 271, 272, 467, 273, 274, 365,
	275, 0, 276, 277, 278, 279, 280, 0, 281, 282,
	283, 284, 412, 0, 285, 286, 287, 288, 468, 289,
	290, 366, 291, 0, 292, 293, 294, 295, 296, 297,
	298, 299, 367, 300, 0, 368, 0, 301, 302, 0,
	303, 304, 0, 414, 369, 0, 0, 413, 305, 370,
	306, 371, 667, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 314, 315, 316, 317, 318, 0, 0, 319,
	320, 321, 322, 372, 373, 0, 323, 469, 324, 0,
	0, 0, 0, 325, 326, 327, 328, 329, 330, 331,
	0, 86, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 677, 672, 89, 90, 91, 92, 93, 94, 95,
	0, 96, 97, 98, 0, 0, 0, 0, 0, 0,
	0, 99, 100, 0, 101, 102, 0, 103, 104, 105,
	332, 333, 0, 334, 0, 335, 336, 0, 106, 337,
	107, 108, 109, 110, 0, 0, 111, 338, 339, 112,
	0, 113, 114, 115, 116, 340, 0, 0, 0, 117,
	118, 119, 120, 121, 0, 0, 122, 123, 124, 0,
	125, 126, 127, 128, 129, 130, 0, 0, 0, 131,
	132, 133, 0, 0, 0, 0, 0, 0, 134, 135,
	136, 137, 138, 341, 139, 140, 342, 343, 141, 0,
	142, 0, 143, 144, 145, 146, 147, 0, 148, 149,
	150, 0, 0, 151, 152, 153, 154, 0, 155, 156,
	157, 0, 158, 0, 159, 0, 160, 161, 344, 162,
	163, 164, 345, 0, 165, 0, 166, 167, 346, 168,
	0, 169, 0, 170, 0, 0, 0, 171, 172, 173,
	0, 174, 175, 347, 0, 348, 176, 0, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 0, 186, 187,
	0, 188, 189, 190, 0, 191, 0, 349, 192, 193,
	194, 195, 350, 351, 352, 0, 353, 0, 196, 0,
	197, 0, 198, 199, 200, 201, 202, 0, 0, 203,
	354, 0, 204, 0, 0, 205, 206, 410, 0, 0,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 411, 355, 0, 356, 221,
	222, 357, 0, 223, 224, 225, 0, 358, 226, 359,
	227, 228, 229, 0, 230, 0, 423, 231, 232, 0,
	0, 233, 360, 0, 234, 0, 361, 235, 236, 237,
	238, 239, 240, 241, 0, 242, 243, 362, 244, 363,
	247, 245, 246, 0, 248, 249, 250, 251, 252, 253,
	254, 255, 364, 256, 257, 258, 259, 0, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 273, 274, 365, 275, 0, 276, 277,
	278, 279, 280, 43, 281, 282, 283, 284, 412, 0,
	285, 286, 287, 288, 0, 289, 290, 366, 291, 0,
	292, 293, 294, 295, 296, 297, 298, 299, 367, 300,
	0, 368, 0, 301, 302, 45, 303, 304, 0, 414,
	369, 0, 0, 413, 305, 370, 306, 371, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 314, 315,
	316, 317, 318, 0, 0, 319, 320, 321, 322, 451,
	373, 0, 323, 0, 324, 0, 0, 86, 41, 325,
	326, 327, 328, 329, 330, 331, 0, 0, 42, 89,
	90, 91, 92, 93, 94, 95, 0, 96, 97, 98,
	0, 0, 0, 0, 0, 0, 994, 99, 100, 0,
	101, 102, 0, 103, 104, 105, 332, 333, 0, 334,
	0, 335, 336, 0, 106, 337, 107, 108, 109, 110,
	0, 0, 111, 338, 339, 112, 0, 113, 114, 115,
	116, 340, 0, 0, 0, 117, 118, 119, 120, 121,
	0, 0, 122, 123, 124, 0, 125, 126, 127, 128,
	129, 130, 0, 0, 0, 131, 132, 133, 0, 0,
	0, 0, 0, 0, 134, 135, 136, 137, 138, 341,
	139, 140, 342, 343, 141, 0, 142, 0, 143, 144,
	145, 146, 147, 0, 148, 149, 150, 0, 0, 151,
	152, 153, 154, 0, 155, 156, 157, 0, 158, 0,
	159, 0, 160, 161, 344, 162, 163, 164, 345, 0,
	165, 0, 166, 167, 346, 168, 0, 169, 0, 170,
	0, 0, 0, 171, 172, 173, 0, 174, 175, 347,
	0, 348, 176, 0, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 0, 186, 187, 0, 188, 189, 190,
	0, 191, 0, 349, 192, 193, 194, 195, 350, 351,
	352, 0, 353, 0, 196, 0, 197, 0, 198, 199,
	200, 201, 202, 0, 0, 203, 354, 0, 204, 0,
	0, 205, 206, 410, 0, 0, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 411, 355, 0, 356, 221, 222, 357, 0, 223,
	224, 225, 0, 358, 226, 359, 227, 228, 229, 0,
	230, 0, 0, 231, 232, 0, 0, 233, 360, 0,
	234, 0, 361, 235, 236, 237, 238, 239, 240, 241,
	0, 242, 243, 362, 244, 363, 247, 245, 246, 0,
	248, 249, 250, 251, 252, 253, 254, 255, 364, 256,
	257, 258, 259, 0, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 273,
	274, 365, 275, 0, 276, 277, 278, 279, 280, 43,
	281, 282, 283, 284, 412, 0, 285, 286, 287, 288,
	0, 289, 290, 366, 291, 0, 292, 293, 294, 295,
	296, 297, 298, 299, 367, 300, 0, 368, 0, 301,
	302, 45, 303, 304, 0, 414, 369, 0, 0, 413,
	305, 370, 306, 371, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 314, 315, 316, 317, 318, 0,
	0, 319, 320, 321, 322, 451, 373, 0, 323, 0,
	324, 0, 0, 86, 41, 325, 326, 327, 328, 329,
	330, 331, 0, 0, 42, 89, 90, 91, 92, 93,
	94, 95, 0, 96, 97, 98, 0, 0, 0, 0,
	0, 1229, 40, 99, 100, 0, 101, 102, 0, 103,
	104, 105, 332, 333, 0, 334, 0, 335, 336, 0,
	106, 337, 107, 108, 109, 110, 0, 0, 111, 338,
	339, 112, 0, 113, 114, 115, 116, 340, 0, 0,
	0, 117, 118, 119, 120, 121, 0, 0, 122, 123,
	124, 0, 125, 126, 127, 128, 129, 130, 0, 0,
	0, 131, 132, 133, 0, 0, 0, 0, 0, 0,
	134, 135, 136, 137, 138, 341, 139, 140, 342, 343,
	141, 0, 142, 0, 143, 144, 145, 146, 147, 0,
	148, 149, 150, 0, 0, 151, 152, 153, 154, 0,
	155, 156, 157, 0, 158, 0, 159, 0, 160, 161,
	344, 162, 163, 164, 345, 0, 165, 0, 166, 167,
	346, 168, 0, 169, 0, 170, 0, 0, 0, 171,
	172, 173, 0, 174, 175, 347, 0, 348, 176, 0,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 0,
	186, 187, 0, 188, 189, 190, 0, 191, 0, 349,
	192, 193, 194, 195, 350, 351, 352, 0, 353, 0,
	196, 0, 197, 0, 198, 199, 200, 201, 202, 0,
	0, 203, 354, 0, 204, 0, 0, 205, 206, 410,
	0, 0, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 411, 355, 0,
	356, 221, 222, 357, 0, 223, 224, 225, 0, 358,
	226, 359, 227, 228, 229, 0, 230, 0, 0, 231,
	232, 0, 0, 233, 360, 0, 234, 0, 361, 235,
	236, 237, 238, 239, 240, 241, 0, 242, 243, 362,
	244, 363, 247, 245, 246, 0, 248, 249, 250, 251,
	252, 253, 254, 255, 364, 256, 257, 258, 259, 0,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 273, 274, 365, 275, 0,
	276, 277, 278, 279, 280, 0, 281, 282, 283, 284,
	412, 0, 285, 286, 287, 288, 0, 289, 290, 366,
	291, 0, 292, 293, 294, 295, 296, 297, 298, 299,
	367, 300, 0, 368, 0, 301, 302, 0, 303, 304,
	0, 414, 369, 0, 0, 413, 305, 370, 306, 371,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	314, 315, 316, 317, 318, 0, 0, 319, 320, 321,
	322, 372, 373, 0, 323, 0, 324, 86, 0, 0,
	0, 325, 326, 327, 328, 329, 330, 331, 0, 89,
	90, 91, 92, 93, 94, 95, 0, 96, 97, 98,
	0, 0, 0, 0, 0, 0, 0, 99, 100, 517,
	101, 102, 0, 103, 104, 105, 332, 333, 0, 334,
	0, 335, 336, 0, 106, 337, 107, 108, 109, 110,
	0, 0, 111, 338, 339, 112, 0, 113, 114, 115,
	116, 340, 0, 0, 0, 117, 118, 119, 120, 121,
	0, 0, 122, 123, 124, 0, 125, 126, 127, 128,
	129, 130, 0, 0, 0, 131, 132, 133, 0, 0,
	0, 0, 0, 0, 134, 135, 136, 137, 138, 341,
	139, 140, 342, 343, 141, 0, 142, 0, 143, 144,
	145, 146, 147, 0, 148, 149, 150, 0, 0, 151,
	152, 153, 154, 0, 155, 156, 157, 0, 158, 0,
	159, 0, 160, 161, 344, 162, 163, 164, 345, 0,
	165, 0, 166, 167, 346, 168, 0, 169, 0, 170,
	0, 0, 0, 171, 172, 173, 0, 174, 175, 347,
	0, 348, 176, 0, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 0, 186, 187, 0, 188, 189, 190,
	0, 191, 0, 349, 192, 193, 194, 195, 350, 351,
	352, 0, 353, 0, 196, 0, 197, 0, 198, 199,
	200, 201, 202, 0, 0, 203, 354, 0, 204, 0,
	0, 205, 206, 410, 0, 0, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 411, 355, 0, 356, 221, 222, 357, 0, 223,
	224, 225, 0, 358, 226, 359, 227, 228, 229, 0,
	230, 0, 423, 231, 232, 0, 0, 233, 360, 0,
	234, 0, 361, 235, 236, 237, 238, 239, 240, 241,
	0, 242, 243, 362, 244, 363, 247, 245, 246, 0,
	248, 249, 250, 251, 252, 253, 254, 255, 364, 256,
	257, 258, 259, 0, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 273,
	274, 365, 275, 0, 276, 277, 278, 279, 280, 0,
	281, 282, 283, 284, 412, 0, 285, 286, 287, 288,
	0, 289, 290, 366, 291, 0, 292, 293, 294, 295,
	296, 297, 298, 299, 367, 300, 0, 368, 0, 301,
	302, 0, 303, 304, 0, 414, 369, 0, 0, 413,
	305, 370, 306, 371, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 314, 315, 316, 317, 318, 0,
	0, 319, 320, 321, 322, 372, 373, 0, 323, 0,
	324, 0, 0, 86, 0, 325, 326, 327, 328, 329,
	330, 331, 0, 0, 0, 89, 90, 91, 92, 93,
	94, 95, 0, 96, 97, 98, 0, 0, 0, 0,
	0, 0, 994, 99, 100, 0, 101, 102, 0, 103,
	104, 105, 332, 333, 0, 334, 0, 335, 336, 0,
	106, 337, 107, 108, 109, 110, 0, 0, 111, 338,
	339, 112, 0, 113, 114, 115, 116, 340, 0, 0,
	0, 117, 118, 119, 120, 121, 0, 0, 122, 123,
	124, 0, 125, 126, 127, 128, 129, 130, 0, 0,
	0, 131, 132, 133, 0, 0, 0, 0, 0, 0,
	134, 135, 136, 137, 138, 341, 139, 140, 342, 343,
	141, 0, 142, 0, 143, 144, 145, 146, 147, 0,
	148, 149, 150, 0, 0, 151, 152, 153, 154, 0,
	155, 156, 157, 0, 158, 0, 159, 0, 160, 161,
	344, 162, 163, 164, 345, 0, 165, 0, 166, 167,
	346, 168, 0, 169, 0, 170, 0, 0, 0, 171,
	172, 173, 0, 174, 175, 347, 0, 348, 176, 0,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 0,
	186, 187, 0, 188, 189, 190, 0, 191, 0, 349,
	192, 193, 194, 195, 350, 351, 352, 0, 353, 0,
	196, 0, 197, 0, 198, 199, 200, 201, 202, 0,
	0, 203, 354, 0, 204, 0, 0, 205, 206, 410,
	0, 0, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 411, 355, 0,
	356, 221, 222, 357, 0, 223, 224, 225, 0, 358,
	226, 359, 227, 228, 229, 0, 230, 0, 0, 231,
	232, 0, 0, 233, 360, 0, 234, 0, 361, 235,
	236, 237, 238, 239, 240, 241, 0, 242, 243, 362,
	244, 363, 247, 245, 246, 0, 248, 249, 250, 251,
	252, 253, 254, 255, 364, 256, 257, 258, 259, 0,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 273, 274, 365, 275, 0,
	276, 277, 278, 279, 280, 0, 281, 282, 283, 284,
	412, 0, 285, 286, 287, 288, 0, 289, 290, 366,
	291, 0, 292, 293, 294, 295, 296, 297, 298, 299,
	367, 300, 0, 368, 0, 301, 302, 0, 303, 304,
	0, 414, 369, 0, 0, 413, 305, 370, 306, 371,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	314, 315, 316, 317, 318, 0, 0, 319, 320, 321,
	322, 372, 373, 0, 323, 0, 324, 0, 0, 86,
	0, 325, 326, 327, 328, 329, 330, 331, 0, 0,
	0, 89, 90, 91, 92, 93, 94, 95, 0, 96,
	97, 98, 0, 0, 0, 0, 0, 0, 938, 99,
	100, 0, 101, 102, 0, 103, 104, 105, 332, 333,
	0, 334, 0, 335, 336, 0, 106, 337, 107, 108,
	109, 110, 0, 0, 111, 338, 339, 112, 0, 113,
	114, 115, 116, 340, 0, 0, 0, 117, 118, 119,
	120, 121, 0, 0, 122, 123, 124, 0, 125, 126,
	127, 128, 129, 130, 0, 0, 0, 131, 132, 133,
	0, 0, 0, 0, 0, 0, 134, 135, 136, 137,
	138, 341, 139, 140, 342, 343, 141, 0, 142, 0,
	143, 144, 145, 146, 147, 0, 148, 149, 150, 0,
	0, 151, 152, 153, 154, 0, 155, 156, 157, 0,
	158, 0, 159, 0, 160, 161, 344, 162, 163, 164,
	345, 0, 165, 0, 166, 167, 346, 168, 0, 169,
	0, 170, 0, 0, 0, 171, 172, 173, 0, 174,
	175, 347, 0, 348, 176, 0, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 0, 186, 187, 0, 188,
	189, 190, 0, 191, 0, 349, 192, 193, 194, 195,
	350, 351, 352, 0, 353, 0, 196, 0, 197, 0,
	198, 199, 200, 201, 202, 0, 0, 203, 354, 0,
	204, 0, 0, 205, 206, 410, 0, 0, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 411, 355, 0, 356, 221, 222, 357,
	0, 223, 224, 225, 0, 358, 226, 359, 227, 228,
	229, 0, 230, 0, 0, 231, 232, 0, 0, 233,
	360, 0, 234, 0, 361, 235, 236, 237, 238, 239,
	240, 241, 0, 242, 243, 362, 244, 363, 247, 245,
	246, 0, 248, 249, 250, 251, 252, 253, 254, 255,
	364, 256, 257, 258, 259, 0, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 273, 274, 365, 275, 0, 276, 277, 278, 279,
	280, 0, 281, 282, 283, 284, 412, 0, 285, 286,
	287, 288, 0, 289, 290, 366, 291, 0, 292, 293,
	294, 295, 296, 297, 298, 299, 367, 300, 0, 368,
	0, 301, 302, 0, 303, 304, 0, 414, 369, 0,
	0, 413, 305, 370, 306, 371, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 314, 315, 316, 317,
	318, 0, 0, 319, 320, 321, 322, 372, 373, 0,
	323, 0, 324, 0, 0, 86, 0, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 0, 89, 90, 91,
	92, 93, 94, 95, 0, 96, 97, 98, 0, 0,
	0, 0, 0, 0, 1440, 99, 100, 0, 101, 102,
	0, 103, 104, 105, 332, 333, 0, 334, 0, 335,
	336, 0, 106, 337, 107, 108, 109, 110, 0, 0,
	111, 338, 339, 112, 0, 113, 114, 115, 116, 340,
	0, 0, 0, 117, 118, 119, 120, 121, 0, 0,
	122, 123, 124, 0, 125, 126, 127, 128, 129, 130,
	0, 0, 0, 131, 132, 133, 0, 0, 0, 0,
	0, 0, 134, 135, 136, 137, 138, 341, 139, 140,
	342, 343, 141, 0, 142, 0, 143, 144, 145, 146,
	147, 0, 148, 149, 150, 0, 0, 151, 152, 153,
	154, 0, 155, 156, 157, 0, 158, 0, 159, 0,
	160, 161, 344, 162, 163, 164, 345, 0, 165, 0,
	166, 167, 346, 168, 0, 169, 0, 170, 0, 0,
	0, 171, 172, 173, 0, 174, 175, 347, 0, 348,
	176, 0, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 0, 186, 187, 0, 188, 189, 190, 0, 191,
	0, 349, 192, 193, 194, 195, 350, 351, 352, 0,
	353, 0, 196, 0, 197, 0, 198, 199, 200, 201,
	202, 0, 0, 203, 354, 0, 204, 0, 0, 205,
	206, 410, 0, 0, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 411,
	355, 0, 356, 221, 222, 357, 0, 223, 224, 225,
	0, 358, 226, 359, 227, 228, 229, 0, 230, 0,
	0, 231, 232, 0, 0, 233, 360, 0, 234, 0,
	361, 235, 236, 237, 238, 239, 240, 241, 0, 242,
	243, 362, 244, 363, 247, 245, 246, 0, 248, 249,
	250, 251, 252, 253, 254, 255, 364, 256, 257, 258,
	259, 0, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 273, 274, 365,
	275, 0, 276, 277, 278, 279, 280, 0, 281, 282,
	283, 284, 412, 0, 285, 286, 287, 288, 0, 289,
	290, 366, 291, 0, 292, 293, 294, 295, 296, 297,
	298, 299, 367, 300, 0, 368, 0, 301, 302, 0,
	303, 304, 0, 414, 369, 0, 0, 413, 305, 370,
	306, 371, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 314, 315, 316, 317, 318, 0, 0, 319,
	320, 321, 322, 372, 373, 0, 323, 0, 324, 0,
	0, 447, 0, 325, 326, 327, 328, 329, 330, 331,
	0, 0, 0, 89, 90, 91, 92, 93, 94, 95,
	0, 96, 97, 98, 0, 0, 0, 0, 0, 0,
	617, 99, 100, 0, 101, 102, 452, 103, 104, 105,
	332, 333, 453, 334, 0, 335, 336, 0, 106, 337,
	107, 108, 109, 110, 0, 0, 111, 338, 339, 112,
	0, 113, 114, 115, 116, 340, 0, 454, 0, 117,
	118, 119, 120, 121, 0, 455, 122, 123, 124, 0,
	125, 126, 127, 128, 129, 130, 0, 0, 456, 131,
	132, 133, 0, 0, 0, 0, 0, 0, 134, 135,
	136, 137, 138, 341, 139, 140, 342, 343, 141, 0,
	142, 0, 143, 144, 145, 146, 147, 0, 148, 149,
	150, 0, 0, 151, 152, 153, 154, 0, 155, 156,
	157, 0, 158, 0, 159, 0, 160, 161, 344, 162,
	163, 164, 345, 0, 165, 0, 166, 167, 346, 168,
	0, 169, 0, 170, 457, 0, 458, 171, 172, 173,
	0, 174, 175, 347, 0, 348, 176, 0, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 0, 186, 187,
	0, 188, 189, 190, 0, 191, 459, 349, 192, 193,
	194, 195, 350, 351, 352, 0, 353, 0, 196, 460,
	197, 461, 198, 199, 200, 201, 202, 0, 0, 203,
	354, 462, 204, 463, 0, 205, 206, 410, 0, 0,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 411, 355, 464, 356, 221,
	222, 357, 0, 223, 224, 225, 0, 358, 226, 359,
	227, 228, 229, 0, 230, 0, 0, 231, 232, 0,
	0, 233, 360, 465, 234, 466, 361, 235, 236, 237,
	238, 239, 240, 241, 0, 242, 243, 362, 244, 363,
	247, 245, 246, 0, 248, 249, 250, 251, 252, 253,
	254, 255, 364, 256, 257, 258, 259, 0, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 0,
	271, 272, 467, 273, 274, 365, 275, 0, 276, 277,
	278, 279, 280, 0, 281, 282, 283, 284, 412, 0,
	285, 286, 287, 288, 468, 289, 290, 366, 291, 0,
	292, 293, 294, 295, 296, 297, 298, 299, 367, 300,
	0, 368, 0, 301, 302, 0, 303, 304, 0, 414,
	369, 0, 0, 413, 305, 370, 306, 371, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 314, 315,
	316, 317, 318, 0, 0, 319, 320, 321, 322, 372,
	373, 0, 323, 469, 324, 86, 0, 0, 0, 325,
	326, 327, 328, 329, 330, 331, 0, 89, 90, 91,
	92, 93, 94, 95, 0, 96, 97, 98, 0, 0,
	0, 0, 0, 0, 0, 99, 100, 0, 101, 102,
	0, 103, 104, 105, 332, 333, 0, 334, 0, 335,
	336, 0, 106, 337, 107, 108, 109, 110, 0, 0,
	111, 338, 339, 112, 913, 113, 114, 115, 116, 340,
	0, 0, 0, 117, 118, 119, 120, 121, 0, 0,
	122, 123, 124, 911, 125, 126, 127, 128, 129, 130,
	0, 0, 0, 131, 132, 133, 0, 0, 0, 0,
	0, 0, 134, 135, 136, 137, 138, 341, 139, 140,
	342, 343, 141, 0, 142, 0, 143, 144, 145, 146,
	147, 0, 148, 149, 150, 0, 0, 151, 152, 153,
	154, 0, 155, 156, 157, 0, 158, 0, 159, 0,
	160, 161, 344, 162, 163, 164, 345, 0, 165, 0,
	166, 167, 346, 168, 0, 169, 916, 170, 0, 0,
	0, 171, 172, 173, 0, 174, 175, 347, 0, 348,
	176, 0, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 0, 186, 187, 972, 188, 189, 190, 0, 191,
	0, 349, 192, 193, 194, 195, 350, 351, 352, 0,
	353, 0, 196, 0, 197, 0, 198, 199, 200, 201,
	202, 0, 0, 203, 354, 0, 204, 0, 0, 205,
	206, 410, 0, 0, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 411,
	355, 0, 356, 221, 222, 357, 0, 223, 224, 225,
	0, 358, 226, 359, 227, 228, 229, 0, 230, 0,
	0, 231, 232, 0, 0, 233, 360, 0, 234, 0,
	361, 235, 236, 237, 238, 239, 240, 241, 0, 242,
	243, 362, 244, 363, 247, 245, 246, 915, 248, 249,
	250, 251, 252, 253, 254, 255, 364, 256, 257, 258,
	259, 0, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 273, 274, 365,
	275, 0, 276, 277, 278, 279, 280, 0, 281, 282,
	283, 284, 412, 0, 285, 286, 287, 288, 0, 289,
	290, 366, 291, 0, 292, 293, 294, 295, 296, 297,
	298, 299, 367, 300, 0, 368, 0, 301, 302, 0,
	303, 304, 0, 414, 369, 0, 0, 413, 305, 370,
	306, 371, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 973, 314, 315, 316, 317, 318, 0, 0, 319,
	320, 321, 322, 372, 373, 0, 323, 0, 324, 86,
	0, 0, 0, 325, 326, 327, 328, 329, 330, 331,
	0, 89, 90, 91, 92, 93, 94, 95, 0, 96,
	97, 98, 0, 0, 0, 0, 0, 0, 0, 99,
	100, 0, 101, 102, 0, 103, 104, 105, 332, 333,
	0, 334, 0, 335, 336, 0, 106, 337, 107, 108,
	109, 110, 0, 0, 111, 338, 339, 112, 913, 113,
	114, 115, 116, 340, 0, 0, 908, 117, 118, 119,
	120, 121, 0, 0, 122, 123, 124, 911, 125, 126,
	127, 128, 129, 130, 0, 0, 0, 131, 132, 133,
	0, 0, 0, 0, 0, 0, 134, 135, 136, 137,
	138, 341, 139, 140, 342, 343, 141, 0, 142, 0,
	143, 144, 145, 146, 147, 0, 148, 149, 150, 0,
	0, 151, 152, 153, 154, 0, 155, 156, 157, 0,
	158, 0, 159, 0, 160, 161, 344, 162, 163, 164,
	345, 0, 165, 0, 166, 167, 346, 168, 0, 169,
	916, 170, 0, 0, 0, 171, 172, 173, 0, 174,
	175, 347, 0, 348, 176, 0, 177, 178, 179, 180,
	907, 182, 183, 184, 185, 0, 186, 187, 0, 188,
	189, 190, 0, 191, 0, 349, 192, 193, 194, 195,
	350, 351, 352, 0, 353, 0, 196, 0, 197, 0,
	198, 199, 200, 201, 202, 0, 0, 203, 354, 0,
	204, 0, 0, 205, 206, 410, 0, 0, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 411, 355, 0, 356, 221, 222, 357,
	0, 223, 224, 225, 0, 358, 226, 359, 227, 228,
	229, 0, 230, 0, 0, 231, 232, 0, 0, 233,
	360, 0, 234, 0, 361, 235, 236, 237, 238, 239,
	240, 241, 0, 242, 243, 362, 244, 363, 247, 245,
	246, 915, 248, 249, 250, 251, 252, 253, 254, 255,
	364, 256, 257, 258, 259, 0, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 273, 274, 365, 275, 0, 276, 277, 278, 279,
	280, 0, 281, 282, 283, 284, 412, 0, 285, 286,
	287, 288, 0, 289, 290, 366, 291, 0, 292, 293,
	294, 295, 296, 297, 298, 299, 367, 300, 0, 368,
	0, 301, 302, 0, 303, 304, 0, 414, 369, 0,
	0, 413, 305, 370, 306, 371, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 914, 314, 315, 316, 317,
	318, 0, 0, 319, 320, 321, 322, 372, 373, 0,
	323, 0, 324, 86, 0, 0, 0, 325, 326, 327,
	328, 329, 330, 331, 0, 89, 90, 91, 92, 93,
	94, 95, 0, 96, 97, 98, 0, 0, 0, 0,
	0, 1229, 0, 99, 100, 0, 101, 102, 0, 103,
	104, 105, 332, 333, 0, 334, 0, 335, 336, 0,
	106, 337, 107, 108, 109, 110, 0, 0, 111, 338,
	339, 112, 0, 113, 114, 115, 116, 340, 0, 0,
	0, 117, 118, 119, 120, 121, 0, 0, 122, 123,
	124, 0, 125, 126, 127, 128, 129, 130, 0, 0,
	0, 131, 132, 133, 0, 0, 0, 0, 0, 0,
	134, 135, 136, 137, 138, 341, 139, 140, 342, 343,
	141, 0, 142, 0, 143, 144, 145, 146, 147, 0,
	148, 149, 150, 0, 0, 151, 152, 153, 154, 0,
	155, 156, 157, 0, 158, 0, 159, 0, 160, 161,
	344, 162, 163, 164, 345, 0, 165, 0, 166, 167,
	346, 168, 0, 169, 0, 170, 0, 0, 0, 171,
	172, 173, 0, 174, 175, 347, 0, 348, 176, 0,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 0,
	186, 187, 0, 188, 189, 190, 0, 191, 0, 349,
	192, 193, 194, 195, 350, 351, 352, 0, 353, 0,
	196, 0, 197, 0, 198, 199, 200, 201, 202, 0,
	0, 203, 354, 0, 204, 0, 0, 205, 206, 410,
	0, 0, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 411, 355, 0,
	356, 221, 222, 357, 0, 223, 224, 225, 0, 358,
	226, 359, 227, 228, 229, 0, 230, 0, 0, 231,
	232, 0, 0, 233, 360, 0, 234, 0, 361, 235,
	236, 237, 238, 239, 240, 241, 0, 242, 243, 362,
	244, 363, 247, 245, 246, 0, 248, 249, 250, 251,
	252, 253, 254, 255, 364, 256, 257, 258, 259, 0,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 273, 274, 365, 275, 0,
	276, 277, 278, 279, 280, 0, 281, 282, 283, 284,
	412, 0, 285, 286, 287, 288, 0, 289, 290, 366,
	291, 0, 292, 293, 294, 295, 296, 297, 298, 299,
	367, 300, 0, 368, 0, 301, 302, 0, 303, 304,
	0, 414, 369, 0, 0, 413, 305, 370, 306, 371,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	314, 315, 316, 317, 318, 0, 0, 319, 320, 321,
	322, 372, 373, 0, 323, 0, 324, 86, 0, 0,
	0, 325, 326, 327, 328, 329, 330, 331, 0, 89,
	90, 91, 92, 93, 94, 95, 0, 96, 97, 98,
	0, 0, 0, 0, 0, 0, 0, 99, 100, 0,
	101, 102, 0, 103, 104, 105, 332, 333, 0, 334,
	0, 335, 336, 0, 106, 337, 107, 108, 109, 110,
	0, 0, 111, 338, 339, 112, 0, 113, 114, 115,
	116, 340, 0, 0, 0, 117, 118, 119, 120, 121,
	0, 0, 122, 123, 124, 0, 125, 126, 127, 128,
	129, 130, 0, 0, 0, 131, 132, 133, 0, 0,
	0, 0, 0, 0, 134, 135, 136, 137, 138, 341,
	139, 140, 342, 343, 141, 0, 142, 0, 143, 144,
	145, 146, 147, 0, 148, 149, 150, 0, 0, 151,
	152, 153, 154, 0, 155, 156, 157, 0, 158, 0,
	159, 0, 160, 161, 344, 162, 163, 164, 345, 0,
	165, 0, 166, 167, 346, 168, 0, 169, 0, 170,
	0, 0, 0, 171, 172, 173, 0, 174, 175, 347,
	0, 348, 176, 0, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 0, 186, 187, 0, 188, 189, 190,
	0, 191, 0, 349, 192, 193, 194, 195, 350, 351,
	352, 0, 353, 0, 196, 0, 197, 0, 198, 199,
	200, 201, 202, 0, 0, 203, 354, 0, 204, 0,
	0, 205, 206, 410, 0, 0, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 411, 355, 0, 356, 221, 222, 357, 0, 223,
	224, 225, 0, 358, 226, 359, 227, 228, 229, 0,
	230, 0, 423, 231, 232, 0, 0, 233, 360, 0,
	234, 0, 361, 235, 236, 237, 238, 239, 240, 241,
	0, 242, 243, 362, 244, 363, 247, 245, 246, 0,
	248, 249, 250, 251, 252, 253, 254, 255, 364, 256,
	257, 258, 259, 0, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 273,
	274, 365, 275, 0, 276, 277, 278, 279, 280, 0,
	281, 282, 283, 284, 412, 0, 285, 286, 287, 288,
	0, 289, 290, 366, 291, 0, 292, 293, 294, 295,
	296, 297, 298, 299, 367, 300, 0, 368, 0, 301,
	302, 0, 303, 304, 0, 414, 369, 0, 0, 413,
	305, 370, 306, 371, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 314, 315, 316, 317, 318, 0,
	0, 319, 320, 321, 322, 372, 373, 0, 323, 0,
	324, 86, 0, 0, 0, 325, 326, 327, 328, 329,
	330, 331, 0, 89, 90, 91, 92, 93, 94, 95,
	0, 96, 97, 98, 0, 0, 0, 0, 0, 0,
	0, 99, 100, 0, 101, 102, 0, 103, 104, 105,
	332, 333, 0, 334, 0, 335, 336, 0, 106, 337,
	107, 108, 109, 110, 0, 0, 111, 338, 339, 112,
	0, 113, 114, 115, 116, 340, 0, 0, 0, 117,
	118, 119, 120, 121, 0, 0, 122, 123, 124, 0,
	125, 126, 127, 128, 129, 130, 0, 0, 0, 131,
	132, 133, 0, 0, 0, 0, 0, 0, 134, 135,
	136, 656, 138, 341, 139, 140, 342, 343, 141, 0,
	142, 0, 143, 144, 145, 146, 147, 0, 148, 149,
	150, 0, 0, 151, 152, 153, 154, 0, 155, 156,
	157, 0, 158, 0, 159, 0, 160, 161, 344, 162,
	163, 164, 345, 0, 165, 0, 166, 167, 346, 168,
	0, 169, 0, 170, 0, 0, 0, 171, 172, 173,
	0, 174, 175, 347, 0, 348, 176, 0, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 0, 186, 187,
	0, 188, 189, 190, 0, 191, 0, 349, 192, 193,
	194, 195, 350, 351, 352, 0, 353, 0, 196, 0,
	197, 0, 198, 199, 200, 201, 202, 0, 0, 203,
	354, 0, 204, 0, 0, 205, 206, 410, 0, 0,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 411, 355, 0, 356, 221,
	222, 357, 0, 223, 224, 225, 0, 358, 226, 359,
	227, 228, 229, 0, 230, 0, 0, 231, 232, 0,
	0, 233, 360, 0, 234, 0, 361, 235, 236, 237,
	238, 239, 240, 241, 0, 242, 243, 362, 244, 363,
	247, 245, 246, 0, 248, 249, 250, 251, 252, 253,
	254, 255, 364, 256, 257, 258, 259, 0, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 273, 274, 365, 275, 0, 276, 277,
	278, 279, 280, 0, 281, 282, 283, 284, 412, 0,
	285, 286, 287, 288, 0, 289, 290, 366, 291, 0,
	292, 293, 294, 295, 296, 297, 298, 299, 367, 300,
	0, 368, 0, 301, 302, 655, 303, 304, 0, 414,
	369, 0, 0, 413, 305, 370, 306, 371, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 314, 315,
	316, 317, 318, 0, 0, 319, 320, 321, 322, 372,
	373, 0, 323, 0, 324, 86, 0, 0, 0, 325,
	326, 327, 328, 329, 330, 331, 0, 89, 90, 91,
	92, 93, 94, 95, 0, 96, 97, 98, 0, 0,
	0, 0, 0, 0, 0, 99, 100, 0, 101, 102,
	0, 103, 104, 105, 332, 333, 0, 334, 0, 335,
	336, 0, 106, 337, 107, 108, 109, 110, 0, 0,
	111, 338, 339, 112, 0, 113, 114, 115, 116, 340,
	0, 0, 0, 117, 118, 119, 120, 121, 0, 0,
	122, 123, 124, 0, 125, 126, 127, 128, 129, 130,
	0, 0, 0, 131, 132, 133, 0, 0, 0, 0,
	0, 0, 134, 135, 136, 137, 138, 341, 139, 140,
	342, 343, 141, 0, 142, 0, 143, 144, 145, 146,
	147, 0, 148, 149, 150, 0, 0, 151, 152, 153,
	154, 0, 155, 156, 157, 0, 158, 0, 159, 0,
	160, 161, 344, 162, 163, 164, 345, 0, 165, 0,
	166, 167, 346, 168, 0, 169, 0, 170, 0, 0,
	0, 171, 172, 173, 0, 174, 175, 347, 0, 348,
	176, 0, 177, 178, 179, 180, 429, 182, 183, 184,
	185, 0, 186, 187, 0, 188, 189, 190, 0, 191,
	0, 349, 192, 193, 194, 195, 350, 351, 352, 0,
	353, 0, 196, 0, 197, 0, 198, 199, 200, 201,
	202, 0, 0, 203, 354, 0, 204, 0, 0, 205,
	206, 410, 0, 0, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 411,
	355, 0, 356, 221, 222, 357, 0, 223, 224, 225,
	0, 358, 226, 359, 227, 228, 229, 0, 230, 0,
	423, 231, 232, 0, 0, 233, 360, 0, 234, 0,
	361, 235, 236, 237, 238, 239, 240, 241, 0, 242,
	243, 362, 244, 363, 247, 245, 246, 0, 248, 249,
	250, 251, 252, 253, 254, 255, 364, 256, 257, 258,
	259, 0, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 273, 274, 365,
	275, 0, 276, 277, 278, 279, 280, 0, 281, 282,
	283, 284, 412, 0, 285, 286, 287, 288, 0, 289,
	290, 366, 291, 0, 292, 293, 294, 295, 296, 297,
	298, 299, 367, 300, 0, 368, 0, 301, 302, 0,
	303, 304, 0, 414, 369, 0, 0, 413, 305, 370,
	306, 371, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 314, 315, 316, 317, 318, 0, 0, 319,
	320, 321, 322, 372, 373, 0, 323, 0, 324, 86,
	0, 0, 0, 325, 326, 327, 328, 329, 330, 331,
	0, 89, 90, 91, 92, 93, 94, 95, 0, 96,
	97, 98, 0, 0, 0, 0, 0, 0, 0, 99,
	100, 0, 101, 102, 0, 103, 104, 105, 332, 333,
	0, 334, 0, 335, 336, 0, 106, 337, 107, 108,
	109, 110, 0, 0, 111, 338, 339, 112, 0, 113,
	114, 115, 116, 340, 0, 0, 0, 117, 118, 119,
	120, 121, 0, 0, 122, 123, 124, 0, 125, 126,
	127, 128, 129, 130, 0, 0, 0, 131, 132, 133,
	0, 0, 0, 0, 0, 0, 134, 135, 136, 137,
	138, 341, 139, 140, 342, 343, 141, 0, 142, 0,
	143, 144, 145, 146, 147, 0, 148, 149, 150, 0,
	0, 151, 152, 153, 154, 0, 155, 156, 157, 0,
	158, 0, 159, 0, 160, 161, 344, 162, 163, 164,
	345, 0, 165, 0, 166, 167, 346, 168, 0, 169,
	0, 170, 0, 0, 0, 171, 172, 173, 0, 174,
	175, 347, 0, 348, 176, 0, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 0, 186, 187, 0, 188,
	189, 190, 0, 191, 0, 349, 192, 193, 194, 195,
	350, 351, 352, 0, 353, 0, 196, 0, 197, 0,
	198, 199, 200, 201, 202, 0, 0, 203, 354, 0,
	204, 0, 0, 205, 206, 410, 0, 0, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 411, 355, 0, 356, 221, 222, 357,
	0, 223, 224, 225, 0, 358, 226, 359, 227, 228,
	229, 0, 230, 0, 0, 231, 232, 0, 0, 233,
	360, 0, 234, 0, 361, 235, 236, 237, 238, 239,
	240, 241, 0, 242, 243, 362, 244, 363, 247, 245,
	246, 0, 248, 249, 250, 251, 252, 253, 254, 255,
	364, 256, 257, 258, 259, 0, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 273, 274, 365, 275, 0, 276, 277, 278, 279,
	280, 0, 281, 282, 283, 284, 412, 0, 285, 286,
	287, 288, 0, 289, 290, 366, 291, 0, 292, 293,
	294, 295, 296, 297, 298, 299, 367, 300, 0, 368,
	0, 301, 302, 0, 303, 304, 0, 414, 369, 0,
	0, 413, 305, 370, 306, 371, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 314, 315, 316, 317,
	318, 0, 0, 319, 320, 321, 322, 372, 373, 0,
	323, 0, 324, 86, 0, 0, 0, 325, 326, 327,
	328, 329, 330, 331, 0, 89, 90, 91, 92, 93,
	94, 95, 0, 96, 97, 98, 0, 0, 0, 0,
	0, 0, 0, 99, 100, 0, 101, 102, 0, 103,
	104, 105, 332, 333, 0, 334, 0, 335, 336, 0,
	106, 337, 107, 108, 109, 110, 0, 0, 111, 338,
	339, 112, 0, 113, 114, 115, 116, 340, 0, 0,
	0, 117, 118, 119, 120, 121, 0, 0, 122, 123,
	124, 0, 125, 126, 127, 128, 129, 130, 0, 0,
	0, 131, 132, 133, 0, 0, 0, 0, 0, 0,
	134, 135, 136, 137, 138, 341, 139, 140, 342, 343,
	141, 0, 142, 0, 143, 144, 145, 146, 147, 0,
	148, 149, 150, 0, 0, 151, 152, 153, 154, 0,
	155, 156, 157, 0, 158, 0, 159, 0, 160, 161,
	344, 162, 163, 164, 345, 0, 165, 0, 166, 167,
	346, 168, 0, 169, 0, 170, 0, 0, 0, 171,
	172, 173, 0, 174, 175, 347, 0, 348, 176, 0,
	177, 178, 179, 180, 1172, 182, 183, 184, 185, 0,
	186, 187, 0, 188, 189, 190, 0, 191, 0, 349,
	192, 193, 194, 195, 350, 351, 352, 0, 353, 0,
	196, 0, 197, 0, 198, 199, 200, 201, 202, 0,
	0, 203, 354, 0, 204, 0, 0, 205, 206, 410,
	0, 0, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 411, 355, 0,
	356, 221, 222, 357, 0, 223, 224, 225, 0, 358,
	226, 359, 227, 228, 229, 0, 230, 0, 0, 231,
	232, 0, 0, 233, 360, 0, 234, 0, 361, 235,
	236, 237, 238, 239, 240, 241, 0, 242, 243, 362,
	244, 363, 247, 245, 246, 0, 248, 249, 250, 251,
	252, 253, 254, 255, 364, 256, 257, 258, 259, 0,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 273, 274, 365, 275, 0,
	276, 277, 278, 279, 280, 0, 281, 282, 283, 284,
	412, 0, 285, 286, 287, 288, 0, 289, 290, 366,
	291, 0, 292, 293, 294, 295, 296, 297, 298, 299,
	367, 300, 0, 368, 0, 301, 302, 0, 303, 304,
	0, 414, 369, 0, 0, 413, 305, 370, 306, 371,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	314, 315, 316, 317, 318, 0, 0, 319, 320, 321,
	322, 372, 373, 0, 323, 0, 324, 86, 0, 0,
	0, 325, 326, 327, 328, 329, 330, 331, 0, 89,
	90, 91, 92, 93, 94, 95, 0, 96, 97, 98,
	0, 0, 0, 0, 0, 0, 0, 99, 100, 0,
	101, 102, 0, 103, 104, 105, 332, 333, 0, 334,
	0, 335, 336, 0, 106, 337, 107, 108, 109, 110,
	0, 0, 111, 338, 339, 112, 0, 113, 114, 115,
	116, 340, 0, 0, 0, 117, 118, 119, 120, 121,
	0, 0, 122, 123, 124, 0, 125, 126, 127, 128,
	129, 130, 0, 0, 0, 131, 132, 133, 0, 0,
	0, 0, 0, 0, 134, 135, 136, 137, 138, 341,
	139, 140, 342, 343, 141, 0, 142, 0, 143, 144,
	145, 146, 147, 0, 148, 149, 150, 0, 0, 151,
	152, 153, 154, 0, 155, 156, 157, 0, 158, 0,
	159, 0, 160, 161, 344, 162, 163, 164, 345, 0,
	165, 0, 166, 167, 346, 168, 0, 169, 0, 170,
	0, 0, 0, 171, 172, 173, 0, 174, 175, 347,
	0, 348, 176, 0, 177, 178, 179, 180, 1170, 182,
	183, 184, 185, 0, 186, 187, 0, 188, 189, 190,
	0, 191, 0, 349, 192, 193, 194, 195, 350, 351,
	352, 0, 353, 0, 196, 0, 197, 0, 198, 199,
	200, 201, 202, 0, 0, 203, 354, 0, 204, 0,
	0, 205, 206, 410, 0, 0, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 411, 355, 0, 356, 221, 222, 357, 0, 223,
	224, 225, 0, 358, 226, 359, 227, 228, 229, 0,
	230, 0, 0, 231, 232, 0, 0, 233, 360, 0,
	234, 0, 361, 235, 236, 237, 238, 239, 240, 241,
	0, 242, 243, 362, 244, 363, 247, 245, 246, 0,
	248, 249, 250, 251, 252, 253, 254, 255, 364, 256,
	257, 258, 259, 0, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 273,
	274, 365, 275, 0, 276, 277, 278, 279, 280, 0,
	281, 282, 283, 284, 412, 0, 285, 286, 287, 288,
	0, 289, 290, 366, 291, 0, 292, 293, 294, 295,
	296, 297, 298, 299, 367, 300, 0, 368, 0, 301,
	302, 0, 303, 304, 0, 414, 369, 0, 0, 413,
	305, 370, 306, 371, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 314, 315, 316, 317, 318, 0,
	0, 319, 320, 321, 322, 372, 373, 0, 323, 0,
	324, 86, 0, 0, 0, 325, 326, 327, 328, 329,
	330, 331, 0, 89, 90, 91, 92, 93, 94, 95,
	0, 96, 97, 98, 0, 0, 0, 0, 0, 0,
	0, 99, 100, 0, 101, 102, 0, 103, 104, 105,
	332, 333, 0, 334, 0, 335, 336, 0, 106, 337,
	107, 108, 109, 110, 0, 0, 111, 338, 339, 112,
	0, 113, 114, 115, 116, 340, 0, 0, 0, 117,
	118, 119, 120, 121, 0, 0, 122, 123, 124, 0,
	125, 126, 127, 128, 129, 130, 0, 0, 0, 131,
	132, 133, 0, 0, 0, 0, 0, 0, 134, 135,
	136, 137, 138, 341, 139, 140, 342, 343, 141, 0,
	142, 0, 143, 144, 145, 146, 147, 0, 148, 149,
	150, 0, 0, 151, 152, 153, 154, 0, 155, 156,
	157, 0, 158, 0, 159, 0, 160, 161, 344, 162,
	163, 164, 345, 0, 165, 0, 166, 167, 346, 168,
	0, 169, 0, 170, 0, 0, 0, 171, 172, 173,
	0, 174, 175, 347, 0, 348, 176, 0, 177, 178,
	179, 180, 1161, 182, 183, 184, 185, 0, 186, 187,
	0, 188, 189, 190, 0, 191, 0, 349, 192, 193,
	194, 195, 350, 351, 352, 0, 353, 0, 196, 0,
	197, 0, 198, 199, 200, 201, 202, 0, 0, 203,
	354, 0, 204, 0, 0, 205, 206, 410, 0, 0,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 411, 355, 0, 356, 221,
	222, 357, 0, 223, 224, 225, 0, 358, 226, 359,
	227, 228, 229, 0, 230, 0, 0, 231, 232, 0,
	0, 233, 360, 0, 234, 0, 361, 235, 236, 237,
	238, 239, 240, 241, 0, 242, 243, 362, 244, 363,
	247, 245, 246, 0, 248, 249, 250, 251, 252, 253,
	254, 255, 364, 256, 257, 258, 259, 0, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 273, 274, 365, 275, 0, 276, 277,
	278, 279, 280, 0, 281, 282, 283, 284, 412, 0,
	285, 286, 287, 288, 0, 289, 290, 366, 291, 0,
	292, 293, 294, 295, 296, 297, 298, 299, 367, 300,
	0, 368, 0, 301, 302, 0, 303, 304, 0, 414,
	369, 0, 0, 413, 305, 370, 306, 371, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 314, 315,
	316, 317, 318, 0, 0, 319, 320, 321, 322, 372,
	373, 0, 323, 0, 324, 86, 0, 0, 0, 325,
	326, 327, 328, 329, 330, 331, 0, 89, 90, 91,
	92, 93, 94, 95, 0, 96, 97, 98, 0, 0,
	0, 0, 0, 0, 0, 99, 100, 0, 101, 102,
	0, 103, 104, 105, 332, 333, 0, 334, 0, 335,
	336, 0, 106, 337, 107, 108, 109, 110, 0, 0,
	111, 338, 339, 112, 0, 113, 114, 115, 116, 340,
	0, 0, 0, 117, 118, 119, 120, 121, 0, 0,
	122, 123, 124, 0, 125, 126, 127, 128, 129, 130,
	0, 0, 0, 131, 132, 133, 0, 0, 0, 0,
	0, 0, 134, 135, 136, 137, 138, 341, 139, 140,
	342, 343, 141, 0, 142, 0, 143, 144, 145, 146,
	147, 0, 148, 149, 150, 0, 0, 151, 152, 153,
	154, 0, 155, 156, 157, 0, 158, 0, 159, 0,
	160, 161, 344, 162, 163, 164, 345, 0, 165, 0,
	166, 167, 346, 168, 0, 169, 0, 170, 0, 0,
	0, 171, 172, 173, 0, 174, 175, 347, 0, 348,
	176, 0, 177, 178, 179, 180, 786, 182, 183, 184,
	185, 0, 186, 187, 0, 188, 189, 190, 0, 191,
	0, 349, 192, 193, 194, 195, 350, 351, 352, 0,
	353, 0, 196, 0, 197, 0, 198, 199, 200, 201,
	202, 0, 0, 203, 354, 0, 204, 0, 0, 205,
	206, 410, 0, 0, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 411,
	355, 0, 356, 221, 222, 357, 0, 223, 224, 225,
	0, 358, 226, 359, 227, 228, 229, 0, 230, 0,
	0, 231, 232, 0, 0, 233, 360, 0, 234, 0,
	361, 235, 236, 237, 238, 239, 240, 241, 0, 242,
	243, 362, 244, 363, 247, 245, 246, 0, 248, 249,
	250, 251, 252, 253, 254, 255, 364, 256, 257, 258,
	259, 0, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 273, 274, 365,
	275, 0, 276, 277, 278, 279, 280, 0, 281, 282,
	283, 284, 412, 0, 285, 286, 287, 288, 0, 289,
	290, 366, 291, 0, 292, 293, 294, 295, 296, 297,
	298, 299, 367, 300, 0, 368, 0, 301, 302, 0,
	303, 304, 0, 414, 369, 0, 0, 413, 305, 370,
	306, 371, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 314, 315, 316, 317, 318, 0, 0, 319,
	320, 321, 322, 372, 373, 0, 323, 0, 324, 86,
	0, 0, 0, 325, 326, 327, 328, 329, 330, 331,
	0, 89, 90, 91, 92, 93, 94, 95, 0, 96,
	97, 98, 0, 0, 0, 0, 0, 643, 0, 99,
	100, 0, 101, 102, 0, 103, 104, 105, 332, 333,
	0, 334, 0, 335, 336, 0, 106, 337, 107, 108,
	109, 110, 0, 0, 111, 338, 339, 112, 0, 113,
	114, 115, 116, 340, 0, 0, 0, 117, 118, 119,
	120, 121, 0, 0, 122, 123, 124, 0, 125, 126,
	127, 128, 129, 130, 0, 0, 0, 131, 132, 133,
	0, 0, 0, 0, 0, 0, 134, 135, 136, 137,
	138, 341, 139, 140, 342, 343, 141, 0, 142, 0,
	143, 144, 145, 146, 147, 0, 148, 149, 150, 0,
	0, 151, 152, 153, 154, 0, 155, 156, 157, 0,
	158, 0, 159, 0, 160, 161, 344, 162, 163, 164,
	345, 0, 165, 0, 166, 167, 346, 168, 0, 169,
	0, 170, 0, 0, 0, 171, 172, 173, 0, 174,
	175, 347, 0, 348, 176, 0, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 0, 186, 187, 0, 188,
	189, 190, 0, 191, 0, 349, 192, 193, 194, 195,
	350, 351, 352, 0, 353, 0, 196, 0, 197, 0,
	198, 199, 200, 201, 202, 0, 0, 203, 354, 0,
	204, 0, 0, 205, 206, 410, 0, 0, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 411, 355, 0, 356, 221, 222, 357,
	0, 223, 224, 225, 0, 358, 226, 359, 227, 228,
	229, 0, 230, 0, 0, 231, 232, 0, 0, 233,
	360, 0, 234, 0, 361, 235, 236, 237, 238, 239,
	240, 241, 0, 242, 243, 362, 244, 363, 247, 245,
	246, 0, 248, 249, 250, 251, 252, 253, 254, 255,
	364, 256, 257, 258, 259, 0, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 273, 274, 365, 275, 0, 276, 277, 278, 279,
	280, 0, 281, 282, 283, 284, 412, 0, 0, 286,
	287, 288, 0, 289, 290, 366, 291, 0, 292, 293,
	294, 295, 296, 297, 298, 299, 367, 300, 0, 368,
	0, 301, 302, 0, 303, 304, 0, 414, 369, 0,
	0, 413, 305, 370, 306, 371, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 314, 315, 316, 317,
	318, 0, 0, 319, 320, 321, 322, 372, 373, 0,
	323, 0, 324, 86, 0, 0, 0, 325, 326, 327,
	328, 329, 330, 331, 0, 89, 90, 91, 92, 93,
	94, 95, 0, 96, 97, 98, 0, 0, 0, 0,
	0, 0, 0, 99, 100, 0, 101, 102, 0, 103,
	104, 105, 332, 333, 0, 334, 0, 335, 336, 0,
	106, 337, 107, 108, 109, 110, 0, 0, 111, 338,
	339, 112, 0, 113, 114, 115, 116, 340, 0, 0,
	0, 117, 118, 119, 120, 121, 0, 0, 122, 123,
	124, 0, 125, 126, 127, 128, 129, 130, 0, 0,
	0, 131, 132, 133, 0, 0, 0, 0, 0, 0,
	134, 135, 136, 137, 138, 341, 139, 140, 342, 343,
	141, 0, 142, 0, 143, 144, 145, 146, 147, 0,
	148, 149, 150, 0, 0, 151, 152, 153, 154, 0,
	155, 156, 157, 0, 158, 0, 159, 0, 160, 161,
	344, 162, 163, 164, 345, 0, 165, 0, 166, 167,
	346, 168, 0, 169, 0, 170, 0, 0, 0, 171,
	172, 173, 0, 174, 175, 347, 0, 348, 176, 0,
	177, 178, 179, 180, 502, 182, 183, 184, 185, 0,
	186, 187, 0, 188, 189, 190, 0, 191, 0, 349,
	192, 193, 194, 195, 350, 351, 352, 0, 353, 0,
	196, 0, 197, 0, 198, 199, 200, 201, 202, 0,
	0, 203, 354, 0, 204, 0, 0, 205, 206, 410,
	0, 0, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 411, 355, 0,
	356, 221, 222, 357, 0, 223, 224, 225, 0, 358,
	226, 359, 227, 228, 229, 0, 230, 0, 0, 231,
	232, 0, 0, 233, 360, 0, 234, 0, 361, 235,
	236, 237, 238, 239, 240, 241, 0, 242, 243, 362,
	244, 363, 247, 245, 246, 0, 248, 249, 250, 251,
	252, 253, 254, 255, 364, 256, 257, 258, 259, 0,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 273, 274, 365, 275, 0,
	276, 277, 278, 279, 280, 0, 281, 282, 283, 284,
	412, 0, 285, 286, 287, 288, 0, 289, 290, 366,
	291, 0, 292, 293, 294, 295, 296, 297, 298, 299,
	367, 300, 0, 368, 0, 301, 302, 0, 303, 304,
	0, 414, 369, 0, 0, 413, 305, 370, 306, 371,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	314, 315, 316, 317, 318, 0, 0, 319, 320, 321,
	322, 372, 373, 0, 323, 0, 324, 86, 0, 0,
	0, 325, 326, 327, 328, 329, 330, 331, 0, 89,
	90, 91, 92, 93, 94, 95, 0, 96, 97, 98,
	0, 0, 0, 0, 0, 0, 0, 99, 100, 0,
	101, 102, 0, 103, 104, 105, 332, 333, 0, 334,
	0, 335, 336, 0, 106, 337, 107, 108, 109, 110,
	0, 0, 111, 338, 339, 112, 0, 113, 114, 115,
	116, 340, 0, 0, 0, 117, 118, 119, 120, 121,
	0, 0, 122, 123, 124, 0, 125, 126, 127, 128,
	129, 130, 0, 0, 0, 131, 132, 133, 0, 0,
	0, 0, 0, 0, 134, 135, 136, 137, 138, 341,
	139, 140, 342, 343, 141, 0, 142, 0, 143, 144,
	145, 146, 147, 0, 148, 149, 150, 0, 0, 151,
	152, 153, 154, 0, 155, 156, 157, 0, 158, 0,
	159, 0, 160, 161, 344, 162, 163, 164, 345, 0,
	165, 0, 166, 167, 346, 168, 0, 169, 0, 170,
	0, 0, 0, 171, 172, 173, 0, 174, 175, 347,
	0, 348, 176, 0, 177, 178, 179, 180, 499, 182,
	183, 184, 185, 0, 186, 187, 0, 188, 189, 190,
	0, 191, 0, 349, 192, 193, 194, 195, 350, 351,
	352, 0, 353, 0, 196, 0, 197, 0, 198, 199,
	200, 201, 202, 0, 0, 203, 354, 0, 204, 0,
	0, 205, 206, 410, 0, 0, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 411, 355, 0, 356, 221, 222, 357, 0, 223,
	224, 225, 0, 358, 226, 359, 227, 228, 229, 0,
	230, 0, 0, 231, 232, 0, 0, 233, 360, 0,
	234, 0, 361, 235, 236, 237, 238, 239, 240, 241,
	0, 242, 243, 362, 244, 363, 247, 245, 246, 0,
	248, 249, 250, 251, 252, 253, 254, 255, 364, 256,
	257, 258, 259, 0, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 273,
	274, 365, 275, 0, 276, 277, 278, 279, 280, 0,
	281, 282, 283, 284, 412, 0, 285, 286, 287, 288,
	0, 289, 290, 366, 291, 0, 292, 293, 294, 295,
	296, 297, 298, 299, 367, 300, 0, 368, 0, 301,
	302, 0, 303, 304, 0, 414, 369, 0, 0, 413,
	305, 370, 306, 371, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 314, 315, 316, 317, 318, 0,
	0, 319, 320, 321, 322, 372, 373, 0, 323, 0,
	324, 86, 0, 0, 0, 325, 326, 327, 328, 329,
	330, 331, 0, 89, 90, 91, 92, 93, 94, 95,
	0, 96, 97, 98, 0, 0, 0, 0, 0, 0,
	0, 99, 100, 0, 101, 102, 0, 103, 104, 105,
	332, 333, 0, 334, 0, 335, 336, 0, 106, 337,
	107, 108, 109, 110, 0, 0, 111, 338, 339, 112,
	0, 113, 114, 115, 116, 340, 0, 0, 0, 117,
	118, 119, 120, 121, 0, 0, 122, 123, 124, 0,
	125, 126, 127, 128, 129, 130, 0, 0, 0, 131,
	132, 133, 0, 0, 0, 0, 0, 0, 134, 135,
	136, 137, 138, 341, 139, 140, 342, 343, 141, 0,
	142, 0, 143, 144, 145, 146, 147, 0, 148, 149,
	150, 0, 0, 151, 152, 153, 154, 0, 155, 156,
	157, 0, 158, 0, 159, 0, 160, 161, 344, 162,
	163, 164, 345, 0, 165, 0, 166, 167, 346, 168,
	0, 169, 0, 170, 0, 0, 0, 171, 172, 173,
	0, 174, 175, 347, 0, 348, 176, 0, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 0, 186, 187,
	0, 188, 189, 190, 0, 191, 0, 349, 192, 193,
	194, 195, 350, 351, 352, 0, 353, 0, 196, 0,
	197, 0, 198, 199, 200, 201, 202, 0, 0, 203,
	354, 0, 204, 0, 0, 205, 206, 410, 0, 0,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 83, 355, 0, 356, 221,
	222, 357, 0, 223, 224, 225, 0, 358, 226, 359,
	227, 228, 229, 0, 230, 0, 0, 231, 232, 0,
	0, 233, 360, 0, 234, 0, 361, 235, 236, 237,
	238, 239, 240, 241, 0, 242, 243, 362, 244, 363,
	247, 245, 246, 0, 248, 249, 250, 251, 252, 253,
	254, 255, 364, 256, 257, 258, 259, 0, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 273, 274, 365, 275, 0, 276, 277,
	278, 279, 280, 0, 281, 282, 283, 284, 412, 0,
	285, 286, 287, 288, 0, 289, 290, 366, 291, 0,
	292, 293, 294, 295, 296, 297, 298, 299, 367, 300,
	0, 368, 0, 301, 302, 0, 303, 304, 0, 82,
	369, 0, 0, 78, 305, 370, 306, 371, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 314, 315,
	316, 317, 318, 0, 0, 319, 320, 321, 322, 372,
	373, 0, 323, 0, 324, 86, 0, 0, 0, 325,
	326, 327, 328, 329, 330, 331, 0, 89, 90, 91,
	92, 93, 94, 95, 0, 96, 97, 98, 0, 0,
	0, 0, 0, 0, 0, 99, 100, 0, 101, 102,
	0, 103, 104, 105, 332, 333, 0, 334, 0, 335,
	336, 0, 106, 337, 107, 108, 109, 110, 0, 0,
	111, 338, 339, 112, 0, 113, 114, 115, 116, 340,
	0, 0, 0, 117, 118, 119, 120, 121, 0, 0,
	122, 123, 124, 0, 125, 126, 127, 128, 129, 130,
	0, 0, 0, 131, 132, 133, 0, 0, 0, 0,
	0, 0, 134, 135, 136, 137, 138, 341, 139, 140,
	342, 343, 141, 0, 142, 0, 143, 144, 145, 146,
	147, 0, 148, 149, 150, 0, 0, 151, 152, 153,
	154, 0, 155, 156, 157, 0, 158, 0, 159, 0,
	160, 161, 344, 162, 163, 164, 345, 0, 165, 0,
	166, 167, 346, 168, 0, 169, 0, 170, 0, 0,
	0, 171, 172, 173, 0, 174, 175, 347, 0, 348,
	176, 0, 177, 178, 179, 180, 443, 182, 183, 184,
	185, 0, 186, 187, 0, 188, 189, 190, 0, 191,
	0, 349, 192, 193, 194, 195, 350, 351, 352, 0,
	353, 0, 196, 0, 197, 0, 198, 199, 200, 201,
	202, 0, 0, 203, 354, 0, 204, 0, 0, 205,
	206, 410, 0, 0, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 411,
	355, 0, 356, 221, 222, 357, 0, 223, 224, 225,
	0, 358, 226, 359, 227, 228, 229, 0, 230, 0,
	0, 231, 232, 0, 0, 233, 360, 0, 234, 0,
	361, 235, 236, 237, 238, 239, 240, 241, 0, 242,
	243, 362, 244, 363, 247, 245, 246, 0, 248, 249,
	250, 251, 252, 253, 254, 255, 364, 256, 257, 258,
	259, 0, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 273, 274, 365,
	275, 0, 276, 277, 278, 279, 280, 0, 281, 282,
	283, 284, 412, 0, 285, 286, 287, 288, 0, 289,
	290, 366, 291, 0, 292, 293, 294, 295, 296, 297,
	298, 299, 367, 300, 0, 368, 0, 301, 302, 0,
	303, 304, 0, 414, 369, 0, 0, 413, 305, 370,
	306, 371, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 314, 315, 316, 317, 318, 0, 0, 319,
	320, 321, 322, 372, 373, 0, 323, 0, 324, 86,
	0, 0, 0, 325, 326, 327, 328, 329, 330, 331,
	0, 89, 90, 91, 92, 93, 94, 95, 0, 96,
	97, 98, 0, 0, 0, 0, 0, 0, 0, 99,
	100, 0, 101, 102, 0, 103, 104, 105, 332, 333,
	0, 334, 0, 335, 336, 0, 106, 337, 107, 108,
	109, 110, 0, 0, 111, 338, 339, 112, 0, 113,
	114, 115, 116, 340, 0, 0, 0, 117, 118, 119,
	120, 121, 0, 0, 122, 123, 124, 0, 125, 126,
	127, 128, 129, 130, 0, 0, 0, 131, 132, 133,
	0, 0, 0, 0, 0, 0, 134, 135, 136, 137,
	138, 341, 139, 140, 342, 343, 141, 0, 142, 0,
	143, 144, 145, 146, 147, 0, 148, 149, 150, 0,
	0, 151, 152, 153, 154, 0, 155, 156, 157, 0,
	158, 0, 159, 0, 160, 161, 344, 162, 163, 164,
	345, 0, 165, 0, 166, 167, 346, 168, 0, 169,
	0, 170, 0, 0, 0, 171, 172, 173, 0, 174,
	175, 347, 0, 348, 176, 0, 177, 178, 179, 180,
	441, 182, 183, 184, 185, 0, 186, 187, 0, 188,
	189, 190, 0, 191, 0, 349, 192, 193, 194, 195,
	350, 351, 352, 0, 353, 0, 196, 0, 197, 0,
	198, 199, 200, 201, 202, 0, 0, 203, 354, 0,
	204, 0, 0, 205, 206, 410, 0, 0, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 411, 355, 0, 356, 221, 222, 357,
	0, 223, 224, 225, 0, 358, 226, 359, 227, 228,
	229, 0, 230, 0, 0, 231, 232, 0, 0, 233,
	360, 0, 234, 0, 361, 235, 236, 237, 238, 239,
	240, 241, 0, 242, 243, 362, 244, 363, 247, 245,
	246, 0, 248, 249, 250, 251, 252, 253, 254, 255,
	364, 256, 257, 258, 259, 0, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 273, 274, 365, 275, 0, 276, 277, 278, 279,
	280, 0, 281, 282, 283, 284, 412, 0, 285, 286,
	287, 288, 0, 289, 290, 366, 291, 0, 292, 293,
	294, 295, 296, 297, 298, 299, 367, 300, 0, 368,
	0, 301, 302, 0, 303, 304, 0, 414, 369, 0,
	0, 413, 305, 370, 306, 371, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 314, 315, 316, 317,
	318, 0, 0, 319, 320, 321, 322, 372, 373, 0,
	323, 0, 324, 86, 0, 0, 0, 325, 326, 327,
	328, 329, 330, 331, 0, 89, 90, 91, 92, 93,
	94, 95, 0, 96, 97, 98, 0, 0, 0, 0,
	0, 0, 0, 99, 100, 0, 101, 102, 0, 103,
	104, 105, 332, 333, 0, 334, 0, 335, 336, 0,
	106, 337, 107, 108, 109, 110, 0, 0, 111, 338,
	339, 112, 0, 113, 114, 115, 116, 340, 0, 0,
	0, 117, 118, 119, 120, 121, 0, 0, 122, 123,
	124, 0, 125, 126, 127, 128, 129, 130, 0, 0,
	0, 131, 132, 133, 0, 0, 0, 0, 0, 0,
	134, 135, 136, 137, 138, 341, 139, 140, 342, 343,
	141, 0, 142, 0, 143, 144, 145, 146, 147, 0,
	148, 149, 150, 0, 0, 151, 152, 153, 154, 0,
	155, 156, 157, 0, 158, 0, 159, 0, 160, 161,
	344, 162, 163, 164, 345, 0, 165, 0, 166, 167,
	346, 168, 0, 169, 0, 170, 0, 0, 0, 171,
	172, 173, 0, 174, 175, 347, 0, 348, 176, 0,
	177, 178, 179, 180, 437, 182, 183, 184, 185, 0,
	186, 187, 0, 188, 189, 190, 0, 191, 0, 349,
	192, 193, 194, 195, 350, 351, 352, 0, 353, 0,
	196, 0, 197, 0, 198, 199, 200, 201, 202, 0,
	0, 203, 354, 0, 204, 0, 0, 205, 206, 410,
	0, 0, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 411, 355, 0,
	356, 221, 222, 357, 0, 223, 224, 225, 0, 358,
	226, 359, 227, 228, 229, 0, 230, 0, 0, 231,
	232, 0, 0, 233, 360, 0, 234, 0, 361, 235,
	236, 237, 238, 239, 240, 241, 0, 242, 243, 362,
	244, 363, 247, 245, 246, 0, 248, 249, 250, 251,
	252, 253, 254, 255, 364, 256, 257, 258, 259, 0,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 273, 274, 365, 275, 0,
	276, 277, 278, 279, 280, 0, 281, 282, 283, 284,
	412, 0, 285, 286, 287, 288, 0, 289, 290, 366,
	291, 0, 292, 293, 294, 295, 296, 297, 298, 299,
	367, 300, 0, 368, 0, 301, 302, 0, 303, 304,
	0, 414, 369, 0, 0, 413, 305, 370, 306, 371,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	314, 315, 316, 317, 318, 0, 0, 319, 320, 321,
	322, 372, 373, 0, 323, 0, 324, 86, 0, 0,
	0, 325, 326, 327, 328, 329, 330, 331, 0, 89,
	90, 91, 92, 93, 94, 95, 0, 96, 97, 98,
	0, 0, 0, 0, 0, 0, 0, 99, 100, 0,
	101, 102, 0, 103, 104, 105, 332, 333, 0, 334,
	0, 335, 336, 0, 106, 337, 107, 108, 109, 110,
	0, 0, 111, 338, 339, 112, 0, 113, 114, 115,
	116, 340, 0, 0, 0, 117, 118, 119, 120, 121,
	0, 0, 122, 123, 124, 0, 125, 126, 127, 128,
	129, 130, 0, 0, 0, 131, 132, 133, 0, 0,
	0, 0, 0, 0, 134, 135, 136, 137, 138, 341,
	139, 140, 342, 343, 141, 0, 142, 0, 143, 144,
	145, 146, 147, 0, 148, 149, 150, 0, 0, 151,
	152, 153, 154, 0, 155, 156, 157, 0, 158, 0,
	159, 0, 160, 161, 344, 162, 163, 164, 345, 0,
	165, 0, 166, 167, 346, 168, 0, 169, 0, 170,
	0, 0, 0, 171, 172, 173, 0, 174, 175, 347,
	0, 348, 176, 0, 177, 178, 179, 180, 432, 182,
	183, 184, 185, 0, 186, 187, 0, 188, 189, 190,
	0, 191, 0, 349, 192, 193, 194, 195, 350, 351,
	352, 0, 353, 0, 196, 0, 197, 0, 198, 199,
	200, 201, 202, 0, 0, 203, 354, 0, 204, 0,
	0, 205, 206, 410, 0, 0, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 411, 355, 0, 356, 221, 222, 357, 0, 223,
	224, 225, 0, 358, 226, 359, 227, 228, 229, 0,
	230, 0, 0, 231, 232, 0, 0, 233, 360, 0,
	234, 0, 361, 235, 236, 237, 238, 239, 240, 241,
	0, 242, 243, 362, 244, 363, 247, 245, 246, 0,
	248, 249, 250, 251, 252, 253, 254, 255, 364, 256,
	257, 258, 259, 0, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 273,
	274, 365, 275, 0, 276, 277, 278, 279, 280, 0,
	281, 282, 283, 284, 412, 0, 285, 286, 287, 288,
	0, 289, 290, 366, 291, 0, 292, 293, 294, 295,
	296, 297, 298, 299, 367, 300, 0, 368, 0, 301,
	302, 0, 303, 304, 0, 414, 369, 0, 0, 413,
	305, 370, 306, 371, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 314, 315, 316, 317, 318, 0,
	0, 319, 320, 321, 322, 372, 373, 0, 323, 0,
	324, 86, 0, 0, 0, 325, 326, 327, 328, 329,
	330, 331, 0, 89, 90, 91, 92, 93, 94, 95,
	0, 96, 97, 98, 0, 0, 0, 0, 0, 0,
	0, 99, 100, 0, 101, 102, 0, 103, 104, 105,
	332, 333, 0, 334, 0, 335, 336, 0, 106, 337,
	107, 108, 109, 110, 0, 0, 111, 338, 339, 112,
	0, 113, 114, 115, 116, 340, 0, 0, 0, 117,
	118, 119, 120, 121, 0, 0, 122, 123, 124, 0,
	125, 126, 127, 128, 129, 130, 0, 0, 0, 131,
	132, 133, 0, 0, 0, 0, 0, 0, 134, 135,
	136, 137, 138, 341, 139, 140, 342, 343, 141, 0,
	142, 0, 143, 144, 145, 146, 147, 0, 148, 149,
	150, 0, 0, 151, 152, 153, 154, 0, 155, 156,
	157, 0, 158, 0, 159, 0, 160, 161, 344, 162,
	163, 164, 345, 0, 165, 0, 166, 167, 346, 168,
	0, 169, 0, 170, 0, 0, 0, 171, 172, 173,
	0, 174, 175, 347, 0, 348, 176, 0, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 0, 186, 187,
	0, 188, 189, 190, 0, 191, 0, 349, 192, 193,
	194, 195, 350, 351, 352, 0, 353, 0, 196, 0,
	197, 0, 198, 199, 200, 201, 202, 0, 0, 203,
	354, 0, 204, 0, 0, 205, 206, 410, 0, 0,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 411, 355, 0, 356, 221,
	222, 357, 0, 223, 224, 225, 0, 358, 226, 359,
	227, 228, 229, 0, 230, 0, 0, 231, 232, 0,
	0, 233, 360, 0, 234, 0, 361, 235, 236, 237,
	238, 239, 240, 241, 0, 242, 243, 362, 244, 363,
	247, 245, 246, 0, 248, 249, 250, 251, 252, 253,
	254, 255, 364, 256, 257, 407, 259, 0, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 273, 274, 365, 275, 0, 276, 277,
	278, 279, 280, 0, 281, 282, 283, 284, 412, 0,
	285, 286, 287, 288, 0, 289, 290, 366, 291, 0,
	292, 293, 294, 295, 296, 297, 298, 299, 367, 300,
	0, 368, 0, 301, 302, 0, 303, 304, 0, 414,
	369, 0, 0, 413, 305, 370, 306, 371, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 314, 315,
	316, 317, 318, 0, 0, 319, 320, 321, 322, 372,
	373, 0, 323, 0, 324, 86, 0, 0, 0, 325,
	326, 327, 328, 329, 330, 331, 0, 89, 90, 91,
	92, 93, 94, 95, 0, 96, 97, 98, 0, 0,
	0, 0, 0, 0, 0, 99, 100, 0, 101, 102,
	0, 103, 104, 105, 332, 333, 0, 334, 0, 335,
	336, 0, 106, 337, 107, 108, 109, 110, 0, 0,
	111, 338, 339, 112, 0, 113, 114, 115, 116, 340,
	0, 0, 0, 117, 118, 119, 120, 121, 0, 0,
	122, 123, 124, 0, 125, 126, 127, 128, 129, 130,
	0, 0, 0, 131, 132, 133, 0, 0, 0, 0,
	0, 0, 134, 135, 136, 137, 138, 341, 139, 140,
	342, 343, 141, 0, 142, 0, 143, 144, 145, 146,
	147, 0, 148, 149, 150, 0, 0, 151, 152, 153,
	154, 0, 155, 156, 157, 0, 158, 0, 159, 0,
	160, 161, 344, 162, 163, 164, 345, 0, 165, 0,
	166, 167, 346, 168, 0, 169, 0, 170, 0, 0,
	0, 171, 172, 173, 0, 174, 175, 347, 0, 348,
	176, 0, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 0, 186, 187, 0, 188, 189, 190, 0, 191,
	0, 349, 192, 193, 194, 195, 350, 351, 352, 0,
	353, 0, 196, 0, 197, 0, 198, 199, 200, 201,
	202, 0, 0, 203, 354, 0, 204, 0, 0, 205,
	206, 76, 0, 0, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 83,
	355, 0, 356, 221, 222, 357, 0, 223, 224, 225,
	0, 358, 226, 359, 227, 228, 229, 0, 230, 0,
	0, 231, 232, 0, 0, 233, 360, 0, 234, 0,
	361, 235, 236, 237, 238, 239, 240, 241, 0, 242,
	243, 362, 244, 363, 247, 245, 246, 0, 248, 249,
	250, 251, 252, 253, 254, 255, 364, 256, 257, 258,
	259, 0, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 273, 274, 365,
	275, 0, 276, 277, 278, 279, 280, 0, 281, 282,
	283, 284, 77, 0, 285, 286, 287, 288, 0, 289,
	290, 366, 291, 0, 292, 293, 294, 295, 296, 297,
	298, 299, 367, 300, 0, 368, 0, 301, 302, 0,
	303, 304, 0, 82, 369, 0, 0, 78, 305, 370,
	306, 371, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 314, 315, 316, 317, 318, 0, 0, 319,
	320, 321, 322, 372, 373, 0, 323, 0, 324, 86,
	0, 0, 0, 325, 326, 327, 328, 329, 330, 331,
	0, 89, 90, 91, 92, 93, 94, 95, 0, 96,
	97, 98, 0, 0, 0, 0, 0, 0, 0, 99,
	100, 0, 101, 102, 0, 103, 104, 105, 332, 333,
	0, 334, 0, 335, 336, 0, 106, 337, 107, 108,
	109, 110, 0, 0, 111, 338, 339, 112, 0, 113,
	114, 115, 116, 340, 0, 0, 0, 117, 118, 119,
	120, 121, 0, 0, 122, 123, 124, 0, 125, 126,
	127, 128, 129, 130, 0, 0, 0, 131, 132, 133,
	0, 0, 0, 0, 0, 0, 134, 135, 136, 137,
	138, 341, 139, 140, 342, 343, 141, 0, 142, 0,
	143, 144, 145, 146, 147, 0, 148, 149, 150, 0,
	0, 151, 152, 153, 154, 0, 155, 156, 157, 0,
	158, 0, 159, 0, 160, 161, 344, 162, 163, 164,
	345, 0, 165, 0, 166, 167, 346, 168, 0, 169,
	0, 170, 0, 0, 0, 171, 172, 173, 0, 174,
	175, 347, 0, 348, 176, 0, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 0, 186, 187, 0, 188,
	189, 190, 0, 191, 0, 349, 192, 193, 194, 195,
	350, 351, 352, 0, 353, 0, 196, 0, 197, 0,
	198, 199, 200, 201, 202, 0, 0, 203, 354, 0,
	204, 0, 0, 205, 206, 410, 0, 0, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 411, 355, 0, 356, 221, 222, 357,
	0, 223, 224, 225, 0, 358, 226, 359, 227, 228,
	229, 0, 230, 0, 0, 231, 232, 0, 0, 233,
	360, 0, 234, 0, 361, 235, 236, 237, 238, 0,
	240, 241, 0, 242, 243, 362, 244, 363, 247, 245,
	246, 0, 248, 249, 250, 251, 252, 253, 0, 255,
	364, 256, 257, 258, 259, 0, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 273, 274, 365, 0, 0, 276, 277, 278, 279,
	280, 0, 281, 282, 283, 284, 412, 0, 285, 286,
	287, 288, 0, 289, 290, 366, 291, 0, 292, 293,
	294, 295, 296, 297, 298, 299, 367, 300, 0, 368,
	0, 301, 302, 0, 303, 304, 0, 414, 369, 0,
	0, 413, 305, 370, 306, 371, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 314, 315, 316, 317,
	318, 0, 0, 319, 320, 321, 322, 372, 373, 0,
	323, 810, 324, 828, 829, 830, 0, 325, 326, 327,
	328, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	831, 810, 0, 828, 829, 830, 0, 0, 812, 0,
	0, 0, 0, 0, 837, 0, 0, 0, 0, 0,
	831, 0, 1296, 0, 1312, 1313, 1314, 0, 812, 0,
	0, 0, 0, 0, 837, 0, 0, 0, 0, 0,
	811, 1555, 810, 0, 828, 829, 830, 0, 825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	811, 831, 0, 0, 0, 0, 0, 0, 825, 812,
	0, 0, 0, 0, 0, 837, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1309,
	0, 0, 0, 0, 0, 0, 810, 0, 828, 829,
	830, 811, 0, 0, 0, 0, 0, 0, 0, 825,
	0, 0, 0, 0, 0, 831, 0, 0, 0, 0,
	0, 0, 0, 812, 0, 0, 0, 0, 0, 837,
	1296, 0, 1312, 1313, 1314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1412,
	810, 838, 828, 829, 830, 811, 0, 0, 0, 0,
	0, 0, 0, 825, 0, 0, 0, 0, 0, 831,
	0, 838, 0, 836, 0, 0, 0, 812, 0, 0,
	0, 0, 0, 837, 0, 0, 0, 833, 0, 0,
	0, 0, 0, 836, 0, 0, 0, 1309, 826, 0,
	0, 0, 0, 0, 0, 0, 0, 833, 0, 811,
	0, 0, 838, 0, 1315, 0, 0, 825, 826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 832, 836, 0, 0, 0, 0, 1310,
	0, 0, 0, 0, 0, 0, 0, 0, 833, 0,
	0, 0, 0, 832, 0, 0, 0, 0, 0, 826,
	0, 0, 0, 0, 0, 0, 838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 810, 0, 828,
	829, 830, 0, 0, 0, 0, 0, 0, 836, 0,
	0, 827, 0, 0, 832, 0, 831, 0, 0, 0,
	0, 0, 833, 0, 812, 0, 0, 0, 835, 0,
	837, 827, 0, 826, 0, 0, 0, 0, 0, 0,
	838, 0, 1315, 0, 0, 0, 0, 0, 835, 0,
	0, 0, 1311, 0, 0, 0, 811, 0, 0, 0,
	0, 0, 836, 0, 825, 0, 0, 1310, 832, 0,
	0, 0, 827, 0, 0, 0, 833, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 826, 0, 835,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	834, 0, 0, 822, 823, 824, 0, 821, 818, 819,
	820, 813, 814, 815, 816, 817, 0, 0, 0, 0,
	834, 1503, 832, 822, 823, 824, 827, 821, 818, 819,
	820, 813, 814, 815, 816, 817, 0, 0, 0, 1748,
	0, 1443, 0, 835, 1306, 1307, 1308, 0, 1305, 1302,
	1303, 1304, 1297, 1298, 1299, 1300, 1301, 0, 0, 0,
	1311, 834, 0, 0, 822, 823, 824, 838, 821, 818,
	819, 820, 813, 814, 815, 816, 817, 0, 0, 0,
	827, 0, 1418, 0, 0, 0, 0, 0, 0, 836,
	0, 0, 0, 0, 0, 0, 0, 835, 0, 0,
	0, 0, 0, 833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 826, 834, 0, 0, 822, 823,
	824, 0, 821, 818, 819, 820, 813, 814, 815, 816,
	817, 0, 0, 0, 0, 0, 1079, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 832,
	0, 0, 1306, 1307, 1308, 0, 1305, 1302, 1303, 1304,
	1297, 1298, 1299, 1300, 1301, 0, 0, 0, 1747, 834,
	0, 0, 822, 823, 824, 0, 821, 818, 819, 820,
	813, 814, 815, 816, 817, 0, 0, 810, 1487, 828,
	829, 830, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 831, 827, 810, 0,
	828, 829, 830, 0, 812, 0, 0, 0, 0, 0,
	837, 0, 0, 0, 835, 0, 0, 831, 0, 0,
	0, 983, 0, 0, 0, 812, 0, 0, 0, 0,
	0, 837, 0, 0, 0, 0, 811, 0, 0, 0,
	0, 841, 0, 0, 825, 0, 0, 810, 0, 828,
	829, 830, 0, 0, 0, 0, 0, 811, 0, 0,
	0, 0, 0, 0, 0, 825, 831, 0, 0, 840,
	0, 0, 0, 0, 812, 0, 0, 0, 0, 0,
	837, 0, 0, 0, 0, 0, 834, 0, 0, 822,
	823, 824, 0, 821, 818, 819, 820, 813, 814, 815,
	816, 817, 0, 0, 0, 0, 811, 0, 984, 0,
	0, 0, 0, 810, 825, 828, 829, 830, 0, 0,
	1326, 0, 0, 0, 0, 1325, 0, 0, 0, 0,
	0, 0, 831, 0, 0, 0, 0, 0, 0, 0,
	812, 0, 0, 0, 0, 0, 837, 838, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 838, 836,
	0, 0, 811, 0, 0, 0, 0, 0, 0, 0,
	825, 0, 0, 833, 0, 0, 0, 0, 0, 0,
	836, 0, 0, 0, 826, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 833, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 826, 0, 838, 0, 0,
	0, 0, 810, 0, 828, 829, 830, 0, 0, 832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 836,
	0, 831, 0, 0, 0, 0, 0, 0, 0, 812,
	832, 0, 0, 833, 0, 837, 0, 0, 0, 0,
	0, 0, 0, 0, 826, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 811, 0, 838, 0, 0, 0, 827, 0, 825,
	0, 0, 0, 810, 0, 828, 829, 830, 0, 832,
	0, 0, 0, 0, 835, 836, 0, 0, 827, 0,
	0, 0, 831, 0, 0, 0, 0, 0, 0, 833,
	812, 0, 0, 0, 0, 835, 837, 0, 0, 0,
	826, 0, 0, 0, 0, 0, 810, 0, 828, 829,
	830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 811, 0, 0, 831, 0, 827, 1327, 0,
	825, 0, 0, 812, 0, 832, 402, 0, 0, 837,
	0, 0, 0, 0, 835, 0, 834, 0, 0, 822,
	823, 824, 0, 821, 818, 819, 820, 813, 814, 815,
	816, 817, 838, 0, 0, 811, 0, 834, 0, 0,
	822, 823, 824, 825, 821, 818, 819, 820, 813, 814,
	815, 816, 817, 0, 836, 0, 0, 0, 0, 0,
	0, 0, 0, 827, 0, 0, 0, 0, 833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 826,
	835, 1332, 0, 0, 0, 0, 834, 0, 0, 822,
	823, 824, 0, 821, 818, 819, 820, 813, 814, 815,
	816, 817, 0, 838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 833,
	0, 0, 0, 0, 0, 0, 838, 0, 0, 0,
	826, 0, 834, 0, 0, 822, 823, 824, 0, 821,
	818, 819, 820, 813, 814, 815, 816, 817, 836, 0,
	0, 0, 827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 833, 0, 0, 832, 0, 0, 0, 835,
	0, 0, 0, 826, 0, 0, 0, 0, 0, 0,
	810, 0, 828, 829, 830, 0, 0, 0, 0, 0,
	0, 0, 0, 1437, 0, 0, 0, 0, 0, 831,
	0, 810, 0, 828, 829, 830, 0, 812, 832, 0,
	0, 0, 0, 837, 0, 0, 0, 0, 0, 0,
	831, 0, 0, 827, 0, 0, 0, 0, 812, 0,
	0, 0, 0, 0, 837, 0, 0, 0, 0, 811,
	835, 834, 0, 0, 822, 823, 824, 825, 821, 818,
	819, 820, 813, 814, 815, 816, 817, 0, 0, 0,
	811, 0, 0, 0, 0, 0, 827, 0, 825, 0,
	810, 0, 828, 829, 830, 0, 0, 0, 0, 0,
	0, 0, 0, 835, 0, 0, 0, 0, 0, 831,
	0, 0, 1289, 0, 0, 0, 0, 812, 0, 0,
	0, 0, 0, 837, 0, 0, 0, 0, 0, 0,
	0, 0, 834, 0, 0, 822, 823, 824, 0, 821,
	818, 819, 820, 813, 814, 815, 816, 817, 0, 811,
	0, 0, 0, 0, 0, 0, 0, 825, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	838, 0, 0, 0, 0, 834, 0, 0, 822, 823,
	824, 0, 821, 818, 819, 820, 813, 814, 815, 816,
	817, 838, 836, 0, 0, 0, 0, 0, 0, 810,
	0, 828, 829, 830, 0, 0, 833, 0, 0, 0,
	0, 0, 0, 836, 0, 0, 0, 826, 831, 0,
	0, 0, 0, 0, 0, 0, 812, 833, 0, 0,
	0, 0, 837, 0, 0, 0, 0, 0, 826, 0,
	0, 0, 0, 0, 0, 810, 0, 828, 829, 830,
	0, 0, 832, 0, 0, 0, 0, 0, 811, 0,
	838, 1296, 0, 1312, 1313, 1314, 825, 1294, 0, 0,
	0, 0, 812, 832, 0, 0, 0, 0, 837, 0,
	1411, 0, 836, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 833, 0, 0, 0,
	0, 0, 0, 0, 811, 0, 0, 826, 0, 0,
	827, 810, 825, 828, 829, 830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 835, 1309, 0,
	0, 827, 0, 0, 0, 0, 0, 0, 812, 0,
	0, 0, 832, 0, 837, 0, 0, 0, 835, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 838,
	811, 0, 0, 0, 0, 0, 0, 0, 825, 0,
	1011, 0, 1026, 1003, 1019, 1018, 0, 0, 1004, 0,
	0, 836, 0, 0, 0, 0, 1028, 1027, 0, 834,
	827, 0, 822, 823, 824, 833, 821, 818, 819, 820,
	813, 814, 815, 816, 817, 838, 826, 835, 0, 0,
	834, 0, 0, 822, 823, 824, 0, 821, 818, 819,
	820, 813, 814, 815, 816, 817, 0, 836, 0, 0,
	0, 0, 1024, 0, 0, 1016, 1015, 0, 0, 0,
	0, 833, 0, 1315, 0, 0, 0, 0, 0, 0,
	0, 0, 826, 1014, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1310, 0,
	810, 838, 0, 0, 0, 0, 0, 1013, 0, 834,
	0, 0, 822, 823, 824, 0, 821, 818, 819, 820,
	813, 814, 815, 816, 817, 0, 0, 812, 0, 827,
	0, 0, 0, 837, 0, 0, 0, 833, 0, 0,
	0, 0, 0, 0, 0, 0, 835, 0, 826, 0,
	0, 1007, 1008, 1009, 0, 688, 0, 0, 0, 811,
	0, 0, 0, 0, 0, 0, 0, 825, 0, 0,
	0, 0, 0, 0, 0, 827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1311, 835, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1017, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 834, 0,
	0, 822, 823, 824, 0, 821, 818, 819, 820, 813,
	814, 815, 816, 817, 0, 0, 0, 0, 0, 0,
	0, 827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1012, 0, 0, 0, 0, 0, 0, 835, 0,
	0, 0, 0, 0, 834, 0, 0, 822, 823, 824,
	838, 821, 818, 819, 820, 813, 814, 815, 816, 817,
	0, 0, 0, 1306, 1307, 1308, 0, 1305, 1302, 1303,
	1304, 1297, 1298, 1299, 1300, 1301, 1010, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 833, 1006, 0, 0,
	0, 0, 0, 0, 0, 0, 1005, 826, 0, 1025,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	834, 0, 0, 822, 823, 824, 0, 821, 818, 819,
	820, 813, 814, 815, 816, 817, 0, 0, 0, 1029,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 834,
	0, 0, 0, 0, 0, 0, 821, 818, 819, 820,
	813, 814, 815, 816, 817,
}
var sqlPact = [...]int{

	2871, -1000, -185, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 391,
	-1000, -1000, -1000, 306, 359, -88, 790, 790, -1000, -1000,
	24871, 1311, 55, 55, 55, 103, 336, -81, -1000, 572,
	-133, 24477, 19355, 940, -189, 18173, -59, 2871, 18961, 19355,
	24083, 729, 467, 18173, 23689, 23295, 22901, -1000, 12195, -1000,
	-1000, -1000, -1000, 310, -1000, -190, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 304, -1000, 22507, 22507, 455, -1000,
	-1000, 235, -11, 954, -1000, -181, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 721, -1000, 300, 710,
	709, -12, 461, -1000, 455, -1000, -1000, -1000, 18173, -1000,
	22113, 486, 21719, -1000, 572, -1000, -1000, -1000, 401, 925,
	925, 925, 942, -129, -131, -81, -191, 19355, -1000, -58,
	-1000, -1000, -1000, -1000, -1000, -191, 8829, 8829, -1000, 299,
	-59, -1000, -41, 16201, -317, -1000, 7977, -1000, 853, 802,
	193, 191, 801, 18173, 19355, 138, 21325, 792, 53, -1000,
	-1000, 789, -197, 783, -204, -1000, -1000, -1000, -1000, -1000,
	-1000, -59, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	18567, 798, 18567, -1000, -1000, -1000, 417, 13015, 12609, 852,
	951, -1000, -1000, -1000, -183, 3734, 19355, 751, 18567, 19355,
	-1000, 19355, -1000, 416, -1000, -1000, 64, -1000, -60, 384,
	20931, -1000, 383, -1000, 401, -1000, 313, 413, 9255, 10533,
	-81, -1000, -1000, -81, -81, 10533, -1000, -1000, 19355, -191,
	975, 19355, 695, -192, -1000, 26307, -1000, -1000, 10533, 10533,
	10533, 10533, 10533, 250, -61, -1000, -1000, -1000, 4992, -1000,
	-1000, -317, -61, -51, -1000, -1000, -62, -317, -1000, -1000,
	-1000, -1000, -63, 1101, 294, -1000, -1000, -1000, 10533, -4,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 749,
	-1000, -1000, -1000, -1000, -1000, -1000, -64, -66, -67, -68,
	-69, -70, -71, -73, -74, -77, -78, 222, -1000, 10,
	-1000, -1000, 10, 10, -1000, -90, -90, -89, -1000, -1000,
	-1000, -90, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -80, 32, -82, -1000, -1000, -1000, 19355, -317, -1000,
	3327, 3734, 10533, -209, -1000, 26841, -1000, -202, 412, -1000,
	17385, 919, 895, 872, 18173, 94, 92, 19355, 2, -1,
	965, 15409, -1000, 19355, 19355, -1000, 19355, -1000, -1000, 19355,
	19355, -133, 16597, 91, -198, 19355, 19355, -1000, -1000, 692,
	182, -193, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1066, -1000, -1000, -1000, -1000, 1092, -193, -1000,
	-1000, -1000, -1000, -1000, 291, -1000, -1000, -1000, -1000, 3734,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 19355, -1000, -1000, -1000,
	-1000, -1000, 18173, 16991, 781, 298, 379, -1000, 780, -1000,
	-1000, -1000, -1000, 26841, -1000, 26841, 166, 470, -1000, 470,
	-194, -1000, 26258, -1000, -83, -211, -1000, 2, 15013, 8829,
	27166, 19355, 97, 10533, 10533, 10533, 10533, 10533, 10533, 10533,
	10533, 10533, 10533, 10533, 10533, 10533, 10533, 10533, 10533, 10533,
	10533, 10533, 10533, 10533, 434, 89, 1367, 527, -92, 575,
	3734, -1000, -1000, 1027, 1027, 1027, 27065, 27065, -27, -1000,
	-318, 25766, -196, -317, -1000, -1000, 7125, 6698, -317, 4139,
	-1000, 287, 1090, 6, 26841, 757, 532, -84, 10533, 888,
	10533, 10959, 10533, 10533, 5418, 10533, 10533, 10533, 10533, -1000,
	-85, -1000, -1000, -1000, -1000, 1089, -1000, -1000, 1088, -1000,
	1086, 2, 10533, -137, -1000, -1000, -1000, -1000, 2076, 7977,
	-1000, 448, 19355, 19355, 19355, -1000, -1000, 371, 20537, -1000,
	27166, 19355, -1000, -86, -87, 435, 433, 19355, 19355, 20143,
	19749, 19355, 585, 19355, 19355, 185, -1000, 10533, 295, -1000,
	14223, 15, 19355, -18, -1000, -1000, -1000, -30, 19355, -1000,
	53, -1000, -1000, -197, -1000, -1000, 19355, 19355, -198, -199,
	19355, -1000, 332, 209, -1000, -1000, 13421, -1000, -1000, -1000,
	287, 1080, -1000, -203, -1000, -1000, -138, -200, -1000, -1000,
	-1000, -1000, 19355, 107, 19355, 19355, 779, 19355, -1000, -1000,
	-1000, 10533, -1000, -1000, -1000, -133, 19355, -1000, 521, -201,
	1638, 17779, 17779, -1000, 13827, -1000, -1000, 980, -1000, -1000,
	-1000, -1000, 14, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -89, 222, -90, -90, -90, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 10, 10, 10, -1000,
	-1000, -22, 343, 343, 1030, 1030, 1030, 340, 340, 382,
	127, 27300, 27300, 27300, 856, 362, 362, 27300, 27300, 27300,
	27065, 27019, 438, 10533, 82, 426, -92, 10533, -1000, 1033,
	-1000, -1000, -1000, 571, -93, 10959, 10959, -1000, -1000, -1000,
	4992, -94, -1000, -1000, -1000, -1000, -1000, -95, 10533, -1000,
	10533, -210, -213, -1000, 26841, -1000, -217, -1000, -1000, -139,
	10533, 10533, 10533, -141, -1000, 78, -1000, 77, 75, 73,
	-1000, -96, -142, 284, -1000, 10533, 253, -97, -98, 10533,
	26910, -143, 568, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-144, 26820, -145, 2057, -1000, 10959, 10959, 10959, 4992, -99,
	-146, 26237, -280, 26596, 8403, 8403, 8403, -147, 26553, 10533,
	-280, 2031, -219, -221, -223, 1071, -225, -148, -149, 521,
	-229, -1000, -1000, 10533, -1000, -1000, -1000, 71, 70, 775,
	-1000, 367, -1000, 578, 10533, 19355, -100, -102, 373, -1000,
	772, 462, 770, 462, -1000, -202, 410, -1000, -1000, 68,
	26841, -1000, 882, -231, -1000, -1000, 2, 15409, 7977, -233,
	-1000, -203, -1000, -203, -1000, -1000, -1000, -1000, -1000, -150,
	19355, -1000, 16991, -103, 19355, -105, -107, 19355, -1000, -1000,
	-151, -1000, -1000, -1000, -1000, -1000, 500, 941, 15013, 444,
	441, 15013, 381, 259, 259, 259, -1000, -1000, -1000, 19355,
	-108, -1000, 14619, -154, 1638, -48, -49, -1000, 1069, 10533,
	438, 10533, 10959, 10959, -1000, 438, -1000, -1000, -1000, -1000,
	566, -109, 10533, 27166, 27081, 25800, -235, -1000, 4992, 6271,
	-205, 25712, 10533, -1000, -1000, -51, -1000, -155, 7551, -1000,
	26373, -135, -135, -1000, 346, 329, 242, 148, 1061, 1099,
	797, -1000, 10533, 26482, -1000, 15805, 4, 258, 25671, 27166,
	-1000, 10533, -1000, 554, 10533, -1000, 27166, 10959, 10959, 10959,
	10959, 10959, 10959, 10959, 10959, 10959, 10959, 10959, 10959, 10959,
	10959, 10959, 10959, 10959, 10959, 654, 10959, 1020, 1020, 1020,
	-206, 5844, -1000, 742, 554, 10533, 10533, 27166, -156, -158,
	-159, -1000, 10533, -280, 10533, -1000, -1000, -1000, -161, -1000,
	1044, -1000, -1000, 500, -1000, 25820, 19355, 19355, 19355, 769,
	1536, -1000, 25651, -239, 19355, 19355, -1000, 753, 791, 39,
	19355, -1000, 19355, -1000, 19355, 19355, 19355, 19355, 9, -133,
	-1000, -1000, -1000, -32, 1095, -1000, -1000, 19355, -110, 16991,
	11799, 283, -1000, -10, 10533, 10533, 1638, 15013, 15013, 1206,
	439, 15013, -1000, -1000, -1000, -1000, -111, 19355, 17779, 320,
	1042, -164, 958, 438, 25692, 2405, 10533, 27166, 27131, -241,
	-1000, 10533, 10533, -1000, 2872, -245, -1000, 10533, -1000, 26841,
	-1000, 1035, 10533, -166, -168, -169, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -170, -1000, -1000, 26841, 10533, -1000, -1000,
	25265, 10533, -172, -1000, -173, 26841, 742, 26841, -1000, 385,
	385, 1020, 1020, 1020, 516, 516, 550, 255, 1555, 1555,
	1555, 722, 419, 419, 1555, 1555, 1555, 549, 631, -113,
	2798, 10533, -249, -1000, -1000, -1000, 26841, 26841, -174, -1000,
	-1000, -1000, -280, 2835, -1000, -175, -10, -1000, -1000, -1000,
	-1000, 19355, -1000, 19355, -1000, 19355, 358, -1000, -1000, 430,
	-114, 10959, 19355, -1000, 377, -250, -251, 351, -1000, 316,
	10533, -1000, 27166, 462, 462, -1000, 62, 58, -1000, 807,
	11799, 868, -1000, -119, -1000, -257, 19355, -176, -258, -1000,
	23, 900, 10533, -1000, -1000, -121, 19355, -1000, 19355, 26841,
	-280, -1000, 1206, -1000, -122, 10533, 15013, -1000, 19355, -262,
	-1000, -1000, -54, -55, -1000, 10533, 10533, 27131, -263, -1000,
	27166, 438, 438, -1000, -1000, 2723, -1000, 26373, -1000, -1000,
	-1000, -1000, 26841, 231, -1000, 2703, -1000, -1000, -1000, 10959,
	542, -123, 27166, 2574, -1000, -1000, -1000, -1000, -1000, -1000,
	1007, -1000, -1000, -1000, 10533, 2798, -134, -1000, -124, -1000,
	-1000, -1000, 200, -1000, -1000, 26841, 907, -1000, -1000, 19355,
	19355, 170, -264, 19355, -1000, -1000, 4566, 377, -268, -1000,
	377, 11799, 914, -317, 19355, 914, 2554, 4139, -126, -230,
	-1000, 962, -1000, 19355, 26841, -1000, -270, -1000, -1000, -1000,
	438, 438, -1000, -1000, -1000, -177, 258, 927, -1000, 375,
	10959, 27166, -292, -1000, -1000, 2240, 398, 19355, 19355, 19355,
	19, 19355, -1000, -1000, 137, -1000, 2, -1000, -1000, 377,
	-1000, -1000, -1000, -1000, -1000, 900, -139, 11799, 19355, -127,
	-294, -1000, -1000, 187, 10533, 375, -298, -1000, -1000, 269,
	309, -300, -308, -134, -1000, 10533, -1000, 15409, -1000, -1000,
	914, -178, -310, -1000, -1000, -1000, -179, 10107, 10107, -280,
	-1000, -1000, 280, 270, 307, -1000, -1000, -1000, -1000, -1000,
	398, 26841, -272, -1000, -1000, 377, -1000, -1000, -1000, 11385,
	361, 169, 25947, -1000, -1000, 828, -1000, 26, 874, 874,
	269, -1000, -1000, 984, -1000, -1000, -1000, -1000, -1000, -1000,
	998, -1000, -1000, 596, -1000, -1000, 9681, -1000, -1000, -1000,
	-1000,
}
var sqlPgo = [...]int{

	0, 1379, 1378, 996, 1376, 1375, 1373, 1370, 1368, 76,
	1366, 1364, 89, 1363, 73, 1362, 1361, 1339, 31, 1337,
	1336, 1332, 1328, 59, 49, 1787, 148, 106, 1325, 1324,
	1323, 12, 77, 66, 1321, 46, 1320, 464, 1173, 56,
	1317, 21, 26, 263, 1316, 1304, 1302, 1300, 29, 1299,
	1298, 1296, 10, 30, 38, 1291, 13, 118, 1290, 1281,
	72, 1268, 71, 39, 95, 107, 1267, 1264, 383, 1257,
	14, 47, 1255, 24, 1249, 23, 55, 98, 1248, 445,
	45, 16, 37, 1246, 1245, 1244, 60, 62, 36, 1241,
	35, 34, 1238, 48, 1237, 88, 90, 1234, 1232, 1231,
	1226, 1221, 1214, 1008, 1213, 2, 25, 51, 4, 32,
	0, 705, 42, 1210, 54, 33, 40, 17, 1209, 78,
	1208, 1206, 1203, 1201, 1198, 52, 1193, 1192, 44, 103,
	28, 63, 74, 20, 43, 65, 80, 174, 79, 1190,
	84, 1188, 41, 1187, 1182, 639, 64, 1181, 1180, 1177,
	634, 615, 613, 273, 1174, 1172, 594, 478, 1167, 1164,
	61, 1163, 1162, 104, 1161, 101, 82, 1160, 86, 1159,
	69, 1155, 100, 158, 147, 1153, 83, 53, 1152, 1151,
	1149, 22, 1, 9, 5, 7, 3, 19, 11, 1148,
	1147, 87, 67, 1134, 436, 1133, 1132, 27, 1131, 1130,
	15, 1127, 18, 1126, 8, 6, 1125, 91, 1122, 81,
	1121, 1015, 1118, 105, 1113, 1112, 1068, 58,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 4, 33, 33, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 29,
	29, 35, 35, 35, 34, 34, 30, 30, 5, 5,
	5, 9, 10, 10, 10, 10, 10, 10, 64, 64,
	63, 63, 67, 67, 11, 11, 12, 12, 12, 12,
	141, 141, 140, 13, 17, 207, 207, 207, 211, 211,
	212, 212, 213, 213, 213, 213, 213, 213, 213, 209,
	209, 19, 19, 19, 103, 103, 102, 102, 102, 102,
	104, 104, 104, 104, 165, 163, 163, 170, 170, 170,
	46, 46, 46, 46, 46, 162, 162, 162, 162, 171,
	171, 171, 171, 171, 171, 171, 47, 47, 47, 169,
	169, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 164, 164, 208, 208, 210, 210, 8, 8, 48,
	48, 49, 49, 107, 107, 107, 106, 179, 179, 180,
	180, 180, 181, 181, 181, 181, 181, 181, 181, 178,
	178, 176, 176, 177, 177, 177, 177, 214, 214, 105,
	105, 52, 52, 184, 184, 184, 184, 182, 182, 182,
	182, 182, 185, 183, 186, 186, 186, 186, 186, 129,
	129, 129, 22, 7, 7, 92, 92, 56, 56, 133,
	133, 133, 42, 42, 31, 31, 31, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 93, 93, 94, 94,
	21, 21, 21, 216, 216, 36, 36, 37, 6, 6,
	14, 44, 44, 99, 99, 99, 101, 101, 101, 100,
	100, 100, 23, 70, 70, 71, 71, 139, 72, 72,
	18, 18, 25, 25, 24, 24, 24, 24, 24, 24,
	26, 26, 27, 27, 27, 27, 27, 27, 27, 192,
	192, 192, 194, 194, 191, 15, 15, 15, 15, 193,
	193, 215, 215, 79, 79, 79, 50, 50, 51, 51,
	54, 54, 53, 55, 55, 132, 77, 77, 77, 77,
	95, 96, 96, 97, 97, 98, 98, 76, 76, 115,
	115, 28, 28, 60, 60, 61, 61, 134, 134, 134,
	134, 135, 135, 135, 135, 135, 135, 130, 130, 130,
	130, 131, 131, 82, 82, 82, 82, 80, 80, 81,
	81, 136, 136, 136, 136, 78, 78, 137, 137, 137,
	108, 108, 142, 142, 142, 59, 59, 59, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 144, 144,
	144, 144, 146, 146, 146, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 147, 147,
	154, 154, 155, 155, 156, 157, 148, 148, 149, 149,
	150, 151, 158, 158, 158, 160, 160, 152, 152, 153,
	87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 88, 88, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	187, 187, 187, 187, 187, 187, 187, 189, 189, 190,
	190, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 195, 195, 196, 196, 197, 197, 198, 198,
	200, 201, 201, 201, 202, 206, 206, 199, 199, 203,
	203, 203, 204, 204, 205, 205, 205, 205, 205, 119,
	119, 119, 120, 120, 121, 127, 127, 127, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 40, 40, 40, 65, 65, 117,
	117, 116, 116, 116, 118, 118, 66, 159, 159, 159,
	159, 159, 159, 159, 83, 83, 89, 84, 84, 85,
	85, 85, 85, 85, 85, 90, 91, 86, 86, 86,
	114, 114, 122, 126, 126, 125, 124, 124, 123, 123,
	109, 109, 109, 109, 109, 73, 73, 217, 217, 128,
	128, 74, 74, 75, 69, 69, 68, 68, 138, 138,
	138, 138, 62, 62, 43, 43, 57, 57, 58, 58,
	41, 41, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 161, 161, 161, 38, 38, 38, 39,
	39, 167, 167, 167, 168, 168, 168, 168, 166, 166,
	166, 166, 166, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175,
}
var sqlR2 = [...]int{

	0, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	4, 6, 1, 3, 2, 5, 3, 6, 4, 6,
	6, 6, 4, 8, 2, 3, 3, 6, 4, 3,
	2, 1, 1, 0, 2, 0, 2, 0, 1, 1,
	1, 5, 6, 4, 3, 5, 3, 5, 1, 3,
	1, 2, 2, 3, 2, 5, 1, 1, 1, 1,
	1, 3, 1, 6, 6, 1, 2, 2, 1, 1,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 2, 3, 3, 2, 1, 3, 3, 3, 3,
	1, 3, 3, 2, 1, 1, 3, 1, 1, 1,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 0, 1,
	1, 2, 2, 4, 2, 4, 4, 3, 3, 4,
	2, 2, 0, 2, 0, 2, 0, 6, 9, 1,
	0, 1, 3, 1, 1, 1, 3, 2, 0, 3,
	1, 2, 2, 1, 1, 2, 4, 2, 5, 6,
	7, 3, 1, 4, 5, 5, 10, 1, 1, 4,
	0, 3, 0, 2, 2, 2, 0, 1, 1, 2,
	2, 0, 3, 3, 2, 1, 1, 2, 2, 1,
	2, 1, 4, 10, 13, 1, 0, 1, 3, 3,
	3, 5, 2, 0, 1, 1, 0, 6, 6, 8,
	6, 8, 8, 10, 8, 10, 1, 0, 2, 0,
	3, 2, 2, 1, 0, 1, 0, 3, 3, 6,
	6, 1, 3, 1, 4, 2, 8, 5, 0, 4,
	3, 0, 7, 1, 3, 1, 1, 3, 5, 5,
	1, 1, 3, 3, 1, 2, 3, 2, 3, 4,
	1, 1, 8, 8, 1, 2, 4, 4, 4, 2,
	2, 3, 1, 3, 6, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 1, 0, 1, 5, 1, 0,
	1, 0, 3, 1, 3, 2, 2, 2, 1, 1,
	2, 2, 3, 1, 1, 1, 1, 3, 0, 2,
	0, 2, 3, 2, 0, 1, 3, 2, 2, 1,
	4, 3, 4, 5, 4, 5, 4, 5, 2, 4,
	1, 1, 0, 2, 2, 2, 1, 1, 0, 4,
	2, 1, 2, 2, 4, 1, 3, 1, 2, 3,
	2, 0, 2, 5, 2, 3, 4, 0, 1, 1,
	1, 1, 2, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 3, 0,
	1, 1, 1, 1, 5, 2, 1, 1, 1, 1,
	4, 1, 2, 2, 1, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 0, 1, 4, 1, 3, 3, 5,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 5, 3,
	4, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 6,
	2, 1, 3, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 5, 6, 6, 7, 1, 1,
	1, 3, 1, 1, 1, 2, 2, 2, 1, 1,
	3, 5, 6, 8, 6, 6, 4, 4, 1, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 6, 4,
	4, 4, 4, 6, 5, 5, 5, 4, 6, 4,
	4, 4, 5, 0, 5, 0, 2, 0, 1, 3,
	3, 2, 2, 0, 6, 1, 0, 3, 0, 2,
	2, 0, 1, 4, 2, 2, 2, 2, 2, 4,
	3, 5, 4, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 3, 1,
	3, 3, 3, 2, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 4, 3, 2, 3, 0, 3,
	3, 2, 2, 1, 0, 2, 2, 3, 2, 1,
	1, 3, 5, 1, 2, 4, 2, 0, 1, 0,
	2, 2, 2, 3, 5, 1, 2, 1, 0, 1,
	1, 1, 3, 3, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 3, 1, 2, 1, 3, 3, 0,
	1, 2, 1, 1, 1, 1, 6, 2, 3, 5,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, -3, -4, -5, -9, -10, -11, -13,
	-14, -16, -17, -18, -19, -20, -21, -22, -23, 25,
	-6, -7, -8, -193, 128, 142, 163, 314, -24, -25,
	333, 336, 42, 75, 316, 372, 90, -192, -27, -26,
	429, 401, 411, 326, -28, 358, 392, 432, 358, 104,
	183, 117, 193, 385, 183, 104, 358, -12, 429, -18,
	-14, -23, -9, -211, 23, -212, -213, 90, 128, 163,
	326, 193, 117, 385, -211, -103, 220, 331, 366, -104,
	-102, -165, 362, 238, -63, -38, 4, -172, -174, 16,
	17, 18, 19, 20, 21, 22, 24, 25, 26, 34,
	35, 37, 38, 40, 41, 42, 51, 53, 54, 55,
	56, 59, 62, 64, 65, 66, 67, 72, 73, 74,
	75, 76, 79, 80, 81, 83, 84, 85, 86, 87,
	88, 92, 93, 94, 101, 102, 103, 104, 105, 107,
	108, 111, 113, 115, 116, 117, 118, 119, 121, 122,
	123, 126, 127, 128, 129, 131, 132, 133, 135, 137,
	139, 140, 142, 143, 144, 147, 149, 150, 152, 154,
	156, 160, 161, 162, 164, 165, 169, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 181, 182, 184, 185,
	186, 188, 191, 192, 193, 194, 201, 203, 205, 206,
	207, 208, 209, 212, 215, 218, 219, 223, 224, 225,
	226, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 242, 243, 246, 247, 248, 251, 253, 254, 255,
	257, 260, 261, 264, 267, 270, 271, 272, 273, 274,
	275, 276, 278, 279, 281, 284, 285, 283, 287, 288,
	289, 290, 291, 292, 293, 294, 296, 297, 298, 299,
	301, 302, 303, 304, 305, 306, 307, 308, 309, 310,
	311, 313, 314, 316, 317, 319, 321, 322, 323, 324,
	325, 327, 328, 329, 330, 333, 334, 335, 336, 338,
	339, 341, 343, 344, 345, 346, 347, 348, 349, 350,
	352, 356, 357, 359, 360, 367, 369, 372, 373, 374,
	375, 376, 377, 378, 381, 382, 383, 384, 385, 388,
	389, 390, 391, 395, 397, 402, 403, 404, 405, 406,
	407, 408, 43, 44, 46, 48, 49, 52, 60, 61,
	68, 106, 109, 110, 141, 145, 151, 166, 168, 190,
	195, 196, 197, 199, 213, 239, 241, 244, 250, 252,
	265, 269, 280, 282, 295, 318, 340, 351, 354, 363,
	368, 370, 392, 393, 4, 104, 72, 105, 165, 183,
	359, 362, 366, 23, -216, 366, -216, -216, -215, 358,
	358, -92, 104, 380, -26, -27, -25, -53, -54, 379,
	198, 138, 263, -24, -25, -192, -194, 298, -191, -38,
	220, 238, 331, 366, 362, -194, -51, -50, 23, 124,
	433, -136, -43, 259, -38, -75, 429, -3, -136, 175,
	-38, -43, 175, 158, 200, -137, -136, 175, -64, -63,
	-38, 175, -64, 175, -141, -140, -168, 4, -172, -174,
	-173, 392, 39, 45, 70, 78, 91, 157, 159, 189,
	202, 204, 214, 216, 240, 266, 268, 315, 337, 396,
	258, 433, 258, -103, -103, -37, 203, 364, 414, 158,
	408, -47, 6, 112, -67, 431, 158, -208, 258, 158,
	-164, 158, 408, 203, -36, -37, -78, -136, -63, 175,
	183, -38, 175, -53, -54, -77, -95, -96, 217, 256,
	-79, 23, 124, -79, -79, 51, 430, 430, 433, -194,
	-58, 429, -69, -68, -138, -110, 422, -112, 420, 421,
	426, 245, 409, -119, 380, -43, -113, 9, 429, -122,
	-189, -25, 141, 31, -120, -121, 318, -38, 8, 5,
	6, 7, -41, -144, -153, 371, 146, 249, 57, -187,
	-188, 4, -172, -167, -145, -155, -149, -152, 199, 70,
	96, 99, 97, 100, 332, 386, 58, 145, 269, 280,
	354, 368, 370, 250, 68, 166, 213, 127, 44, 46,
	48, 49, 60, 61, 106, 109, 110, 151, 195, 196,
	197, 252, 295, 340, 363, 393, -173, -156, -157, -150,
	-151, -158, -68, 258, -75, 422, -43, 429, -73, -109,
	431, 434, 427, -74, -128, -110, 112, -33, 305, -32,
	19, 25, 128, 390, 141, 305, 305, 141, -137, -44,
	-43, 333, -38, 32, 141, -35, 433, 55, 311, 141,
	141, 430, 433, -207, -62, 358, 104, -43, -213, -207,
	215, -163, 112, -170, -162, -129, 9, 371, 146, 258,
	-169, 5, 421, -161, -168, 6, 8, 420, -163, 112,
	94, -171, 6, 4, -153, -129, 112, 220, 199, 431,
	-166, 4, -172, -174, -173, -175, 23, 27, 28, 29,
	30, 31, 32, 33, 36, 50, 57, 58, 63, 69,
	71, 82, 90, 95, 96, 97, 98, 99, 100, 112,
	114, 120, 124, 125, 130, 134, 138, 146, 148, 153,
	155, 158, 163, 167, 170, 180, 183, 187, 198, 200,
	210, 211, 217, 221, 222, 245, 249, 256, 258, 259,
	262, 263, 277, 286, 300, 312, 326, 332, 342, 355,
	358, 361, 364, 365, 371, 379, 380, 386, 387, 394,
	398, 399, 400, 401, -165, -210, 153, -207, -165, -165,
	215, -35, 433, 429, 245, -39, 175, -38, 245, -77,
	-96, -95, -97, -110, 23, -110, -112, -26, -26, -26,
	-55, -132, -110, -191, 32, -57, -38, -60, 158, 433,
	10, 69, 37, 420, 421, 422, 423, 424, 417, 418,
	419, 416, 412, 413, 414, 77, 227, 320, 12, 13,
	14, 29, 262, 216, 409, 337, 202, 43, 180, -40,
	32, 4, -45, -110, -110, -110, -110, -110, 268, -25,
	-25, -110, -65, -73, -25, -116, 427, 429, -73, 429,
	6, 6, 429, -123, -110, -195, 402, 153, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 282,
	-160, 395, -160, -160, -146, 429, -146, -147, 429, -146,
	429, -60, 429, -43, -109, -166, 422, -166, -110, 433,
	430, 433, 364, -93, 82, 71, -106, 175, 71, -176,
	-38, 82, -177, 63, 380, 286, 155, -93, 82, -93,
	82, 82, -136, 364, 364, -43, -108, 399, -99, -18,
	429, 112, 32, -70, -71, -139, -72, -43, 429, -38,
	-64, -63, -38, -64, -12, -140, 364, 433, -62, -57,
	158, -46, 294, 306, 341, 329, 433, 5, 8, 8,
	6, 429, -166, -209, -38, -136, -48, -49, -107, -106,
	-178, -176, 183, 380, 141, 258, 245, 141, -98, 318,
	319, 433, -31, 33, 120, 429, 433, 430, -108, -61,
	-134, -136, -25, -135, 429, -138, -142, -143, -145, -154,
	-148, -152, -153, 47, 52, 360, 351, 195, 196, 197,
	340, 44, 295, 151, 127, 110, 109, 252, 49, 48,
	-156, -157, -150, -151, 106, 363, 46, 61, 60, 393,
	-63, 362, -110, -110, -110, -110, -110, -110, -110, -110,
	-110, -110, -110, -110, -110, -110, -110, -110, -110, -110,
	-110, -110, -110, 216, 337, 43, 180, 364, 249, 245,
	371, 146, 381, 124, 254, -217, 355, 36, -114, -25,
	429, -127, 30, 342, 23, -166, -119, 318, 429, 430,
	433, -65, -118, 428, -110, -116, -65, 430, 430, -65,
	394, 23, 124, 422, -87, 406, 235, 107, 173, 232,
	-88, 324, 8, -126, -125, 398, -196, 149, 167, 429,
	-110, -66, -159, 4, 406, 235, 107, 173, 232, 324,
	-83, -110, -84, -111, -112, 420, 421, 426, 429, 318,
	-85, -110, -65, -110, 50, 211, 365, -86, -110, 158,
	-65, -110, -65, -65, -65, 429, 8, 8, 8, -108,
	-65, 430, 428, 435, -128, -32, -43, -38, -38, 245,
	-106, 175, -142, -38, 429, 429, 205, 205, -38, -38,
	175, -38, 175, -38, -38, -33, 305, -38, -38, 305,
	-110, -101, 258, -62, 392, -38, -60, 433, 414, -62,
	-35, -209, -43, -209, 377, 76, 294, -170, -87, 8,
	433, 430, 433, -39, 183, -63, -43, 141, -38, -132,
	-15, -18, -14, -23, -9, -38, -76, 167, 433, 91,
	-82, 204, 240, 159, 214, 315, 189, -131, -130, 32,
	-38, -131, -25, -135, -134, -59, 31, -87, 429, 408,
	-110, 364, -217, 355, -114, -110, 249, 371, 146, 381,
	124, 254, 158, 429, -111, -111, -65, -25, 429, 429,
	-65, -110, 433, 428, 428, 433, 430, -54, 433, -53,
	-110, -65, -65, 430, 364, 364, 364, 364, 429, 430,
	-124, -125, 130, -110, -201, 267, 429, 429, -110, 32,
	430, 158, 430, -89, 277, 430, 10, 420, 421, 422,
	423, 424, 417, 418, 419, 416, 412, 413, 414, 77,
	227, 320, 12, 13, 14, 202, 180, -111, -111, -111,
	-65, 429, 430, -90, -91, 158, 153, 32, -86, -86,
	-86, 430, 158, -65, 433, 430, 430, 430, 8, 430,
	433, 430, 430, -76, 430, -110, 364, 364, 141, 245,
	-179, -177, -110, -57, 429, 429, -29, 128, 333, -94,
	141, -35, 141, -35, 364, -93, 82, 364, 80, 430,
	-108, -71, -128, 430, 430, -38, -107, 429, -39, 429,
	429, -38, 430, -115, 170, 51, -134, 204, 204, -134,
	-82, 204, -80, 266, -80, -80, -38, 429, 430, 427,
	427, 8, -110, -110, -111, -111, 158, 429, -110, -117,
	-142, 29, 29, 430, -110, -65, 430, 433, 430, -110,
	-116, 430, 394, -54, -54, -54, 235, 173, 232, -88,
	232, -88, -88, 8, 6, 134, -110, 361, -202, -38,
	429, 399, -53, 430, -142, -110, -90, -110, -142, -111,
	-111, -111, -111, -111, -111, -111, -111, -111, -111, -111,
	-111, -111, -111, -111, -111, -111, -111, 124, 245, 254,
	-111, 433, -65, 430, -91, -90, -110, -110, -142, 430,
	430, 430, -65, -110, 430, 8, -115, 428, -38, -38,
	-106, 141, -180, 82, -181, 69, 245, 249, 380, 286,
	63, 112, 300, 430, 430, -57, -57, 245, 112, 245,
	112, 103, 374, -38, -38, -43, -38, -38, -38, -100,
	429, 258, -18, 414, 6, -57, 429, -48, -56, -133,
	-38, -190, 429, -187, -188, -41, 258, -197, 400, -110,
	-65, -134, -134, -81, 387, 258, 204, -134, 429, -57,
	-130, 428, 8, 8, 430, 29, 29, -110, -117, 430,
	433, -110, -110, 430, 430, -110, 6, -110, 430, 430,
	430, 430, -110, -206, -38, -110, 430, 430, -91, 158,
	124, 254, 429, -110, 430, 430, 430, 430, -197, -106,
	-38, -63, 249, 205, 429, -111, -43, -105, -214, 89,
	353, 430, 430, 249, 249, -110, -142, -35, -35, 364,
	364, 125, -56, 82, -75, -25, 429, 430, -57, 430,
	430, 433, -42, -73, 69, -42, -110, 429, -43, -198,
	-200, -38, -81, 429, -110, -134, -57, 430, 428, 428,
	-110, -110, 430, -142, 430, -54, -199, 274, 430, -111,
	158, 429, -117, 430, -181, -110, -52, 429, 429, 300,
	-34, 69, -38, -38, 385, 246, 430, -38, -105, 430,
	-105, -133, -31, -63, -31, 430, -65, 429, 433, 32,
	-57, 430, 430, -54, 51, -111, -117, 430, 430, -184,
	229, -57, -57, -43, -30, 387, -63, 333, -108, -105,
	-42, -54, -56, -200, -202, 430, -203, 293, 319, -65,
	430, -182, -185, -183, 258, 159, 273, 338, 430, 430,
	-52, -110, -70, -31, 430, 430, 430, -204, -205, 43,
	376, 94, -110, -204, -183, 258, -185, 258, 385, 117,
	-184, -108, -105, -205, 281, 152, 318, 281, 152, -186,
	243, 311, 55, 333, -186, -182, 29, 18, 249, 112,
	-205,
}
var sqlDef = [...]int{

	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 0,
	48, 49, 50, 0, 0, 290, 0, 0, 260, -2,
	0, 0, 234, 234, 234, 292, 206, 289, -2, 301,
	0, 0, 0, 299, 274, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 64, 0, 66,
	67, 68, 69, 0, 78, 79, 80, 82, 83, 84,
	85, 86, 87, 88, 0, 91, 841, 921, 942, 95,
	100, 0, 1007, -2, 104, 60, 706, 707, 708, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	794, 795, 796, 797, 798, 799, 800, 801, 802, 803,
	804, 805, 806, 807, 808, 809, 810, 811, 812, 813,
	814, 815, 816, 817, 818, 819, 820, 821, 822, 823,
	824, 825, 826, 827, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 837, 838, 839, 840, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 857, 858, 859, 860, 861, 862, 863, 864, 865,
	866, 867, 868, 869, 870, 871, 872, 873, 874, 875,
	876, 877, 878, 879, 880, 881, 882, 883, 884, 885,
	886, 887, 888, 889, 890, 891, 892, 893, 894, 895,
	896, 897, 898, 899, 900, 901, 902, 903, 904, 905,
	906, 907, 908, 909, 910, 911, 912, 913, 914, 915,
	916, 917, 918, 919, 920, 922, 923, 924, 925, 926,
	927, 928, 929, 930, 931, 932, 933, 934, 935, 936,
	937, 938, 939, 940, 941, 943, 944, 945, 946, 947,
	948, 949, 950, 951, 952, 953, 954, 955, 956, 957,
	958, 959, 960, 961, 962, 963, 964, 965, 966, 967,
	968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008,
	1009, 1010, 1011, 1012, 131, 132, 0, 134, 144, 0,
	142, 0, 0, 140, 236, 233, 231, 232, 0, 291,
	0, 0, 0, 205, -2, 270, 271, -2, 0, 295,
	295, 295, 0, 0, 271, 0, 279, 894, 282, 689,
	841, 856, 921, 942, 1007, 280, 675, 0, 298, 296,
	0, 275, 351, 0, 684, 321, 0, 2, 0, 815,
	0, 0, 815, 0, 0, 0, 357, 815, 43, 58,
	54, 815, 56, 815, 0, 70, 72, 714, 715, 716,
	717, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	0, 0, 0, 92, 93, 94, 0, 0, 0, 0,
	0, 103, 126, 127, 61, 0, 0, 146, 0, 0,
	137, 0, 138, 0, 230, 235, 43, 355, 0, 815,
	710, 238, 815, -2, 0, 266, 308, 309, 0, 0,
	0, 293, 294, 0, 0, 0, 262, 263, 0, 281,
	0, 0, 324, 674, 676, 680, 681, 436, 0, 0,
	0, 0, 0, 0, 0, 518, 519, 520, 0, 522,
	523, 524, 982, 0, 528, 529, 1003, 684, 692, 693,
	694, 695, 0, 0, 0, 700, 701, 702, 659, 563,
	538, -2, -2, 690, 378, 379, 380, 381, -2, 1015,
	542, 543, 544, 545, 546, 547, 0, 983, 999, 1000,
	1006, 1009, 1010, 996, 978, 985, 992, 786, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 713, 402, 403, 408,
	409, 411, 324, 0, 322, 352, 353, 0, 685, 665,
	0, 0, 0, 0, 671, 669, 670, 20, 227, 22,
	0, 227, 227, 0, 0, 0, 0, 0, 361, 0,
	241, 0, 358, 0, 0, 53, 0, 41, 42, 0,
	0, 290, 0, 0, 75, 0, 771, 682, 81, 0,
	0, 96, 98, 105, 107, 108, 109, 115, 116, 117,
	118, 199, 0, 201, 129, 130, 703, 0, 97, 99,
	101, 102, 119, 120, 0, 123, 124, 125, 419, 0,
	62, 718, 719, 720, 721, 722, 1031, 1032, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044,
	1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054,
	1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064,
	1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074,
	1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084,
	1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094,
	1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104,
	1105, 1106, 1107, 1108, 133, 135, 0, 143, 136, 141,
	139, 202, 0, 150, 0, 0, 815, 709, 0, 269,
	306, 307, 310, 313, 314, 311, 436, 276, 277, 278,
	302, 303, 216, 283, 0, 0, 686, 361, 0, 0,
	0, 0, 0, 598, 599, 600, 601, 602, 605, 606,
	603, 604, 607, 608, 609, 610, 0, 0, 611, 612,
	613, 0, 0, 615, 0, 0, 0, 668, 0, 0,
	0, 679, 614, 440, 441, 442, 463, 464, 0, 490,
	-2, 617, 0, 525, 526, 527, 0, 0, -2, 0,
	697, 433, 0, 0, 658, 565, 0, 0, 0, 0,
	0, 638, 644, 0, 0, 0, 0, 0, 0, 392,
	405, 415, 413, 412, 394, 0, 393, 391, 0, 395,
	0, 361, 0, 0, 666, 660, 661, 662, 0, 0,
	673, 0, 0, 0, 0, 226, 24, 815, 0, 34,
	0, 0, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 0, 248, 243,
	0, 0, 0, 324, 253, 255, 256, 0, 0, 359,
	43, 59, 55, 57, 65, 71, 0, 0, 76, 77,
	0, 237, 0, 0, 113, 114, 0, 200, 705, 704,
	433, 0, 63, 145, 89, 356, 0, 149, 151, 153,
	154, 155, 710, 0, 0, 0, 0, 0, 312, 315,
	316, 0, 305, 214, 215, 290, 0, 688, 318, 323,
	325, 342, 342, 329, 0, 677, 437, 367, 368, 369,
	370, 371, 433, 374, 375, 376, 377, 385, 386, 387,
	388, 389, 390, 399, 0, 384, 384, 384, 396, 397,
	400, 401, 406, 407, 417, 418, 416, 416, 416, 414,
	438, 0, 443, 444, 445, 446, 447, 448, 449, 450,
	451, -2, -2, -2, 455, 456, 457, -2, -2, -2,
	461, 462, -2, 616, 0, 668, 0, 0, 469, 0,
	472, 474, 476, 0, 0, 0, 0, 667, 486, 650,
	0, 0, 595, 596, 597, 678, 471, 0, 0, 521,
	0, 0, 0, 623, 617, 624, 0, -2, 530, 301,
	0, 0, 0, 0, 698, 420, 421, 422, 423, 424,
	425, 434, 0, 657, 653, 0, 573, 0, 0, 0,
	0, 0, 0, 627, 628, 629, 630, 631, 632, 633,
	0, 0, 0, 0, 491, 0, 0, 0, 0, 1003,
	0, 617, 643, 0, 0, 0, 0, 0, 617, 0,
	649, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	0, 354, 663, 0, 672, 23, 218, 0, 0, 0,
	26, 815, 158, 0, 0, 0, 0, 0, 229, 35,
	815, 43, 815, 43, 36, 21, 227, 217, 220, 0,
	360, 240, 0, 0, 245, 242, 361, 0, 0, 0,
	52, 73, 683, 74, 110, 111, 112, 106, 121, 0,
	0, 147, 0, 0, 710, 0, 0, 0, 239, 304,
	0, 285, 286, 287, 288, 687, 320, 0, 0, 0,
	0, 0, 0, 348, 348, 348, 346, 327, 341, 0,
	340, 328, -2, 329, 0, 362, 364, 372, 0, 0,
	-2, 0, 0, 0, 487, -2, 470, 473, 475, 477,
	0, 0, 0, 0, 0, 0, 0, 488, 0, 0,
	0, 618, 0, 621, 622, 0, -2, 0, 0, 300,
	301, 301, 301, 536, 0, 0, 0, 0, 0, 0,
	0, 654, 0, 0, 537, 0, 0, 0, 0, 0,
	549, 0, 550, 0, 0, 551, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 493, 494, 495,
	0, 0, 552, 641, 642, 0, 0, 0, 0, 0,
	0, 557, 0, 648, 0, 559, 560, 561, 0, 382,
	0, 398, 410, 320, 297, 0, 0, 0, 0, 0,
	156, 171, 0, 0, 0, 0, 28, 0, 0, 0,
	0, 32, 0, 38, 0, 0, 0, 0, 251, 0,
	252, 254, 257, 0, 0, 90, 152, 0, 0, 150,
	0, 0, 284, 567, 0, 0, 326, 0, 0, 0,
	0, 0, 343, 347, 344, 345, 338, 0, 331, 0,
	0, 0, 439, -2, 0, 0, 0, 0, -2, 0,
	619, 0, 0, 651, 0, 0, 590, 0, -2, 618,
	625, 531, 0, 0, 0, 0, 426, 427, 428, 429,
	430, 431, 432, 0, 699, 652, 656, 0, 571, 572,
	576, 0, 0, 541, 0, 626, 635, 636, 492, 496,
	497, 498, 499, 500, 501, 502, 503, 504, -2, -2,
	-2, 508, 509, 510, -2, -2, -2, 0, 0, 0,
	637, 0, 0, 593, 639, 640, 645, 646, 0, 554,
	555, 556, 647, 0, 404, 0, 567, 664, 222, 224,
	25, 0, 157, 0, 160, 0, 0, 163, 164, 0,
	0, 0, 0, 173, 180, 0, 0, 0, 40, 0,
	0, 228, 0, 43, 43, 219, 0, 0, 221, 0,
	0, 0, 244, 0, 122, 0, 0, 0, 0, 207,
	213, 213, 0, 539, 540, 0, 0, 272, 0, 319,
	317, 332, 0, 334, 0, 0, 0, 336, 0, 0,
	330, 365, 0, 0, 373, 0, 0, -2, 0, 480,
	0, -2, -2, 489, 589, 618, 696, 301, 532, 534,
	535, 435, 655, 578, 575, 0, 562, 548, 634, 0,
	0, 0, 0, 618, 592, 553, 558, 383, 273, 27,
	0, 161, 162, 165, 0, 167, 182, 174, 0, 177,
	178, 175, 0, 29, 30, 39, 45, 31, 37, 0,
	0, 0, 0, 0, 258, 259, 0, 180, 0, 148,
	180, 0, 216, 691, 0, 216, 0, 0, 0, 566,
	568, 0, 333, 0, 350, 335, 0, 339, 366, 363,
	-2, -2, 481, 620, 591, 0, 301, 0, 564, -2,
	0, 0, 0, 594, 159, 0, 186, 0, 0, 0,
	47, 0, 223, 225, 0, 247, 361, 250, 169, 180,
	203, 208, 209, 212, 210, 213, 301, 0, 0, 0,
	0, 337, 533, 581, 0, -2, 0, 516, 166, 191,
	0, 0, 0, 182, 33, 0, 44, 0, 249, 170,
	216, 0, 0, 569, 570, 349, 0, 0, 0, 577,
	517, 168, 187, 188, 0, 183, 184, 185, 181, 179,
	186, 46, 361, 211, 531, 180, 574, 579, 582, -2,
	949, 767, 0, 580, 189, 0, 190, 0, 0, 0,
	191, 246, 204, 0, 584, 585, 586, 587, 588, 192,
	0, 195, 196, 0, 193, 176, 0, 194, 197, 198,
	583,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 418, 3, 424, 419, 3,
	429, 430, 422, 420, 433, 421, 431, 423, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 435, 432,
	412, 414, 413, 3, 434, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 427, 3, 428, 417, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 416, 3, 426,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 415,
	57755, 425, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lookahead func() int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.lookahead()
}

func sqlNewParser() sqlParser {
	p := &sqlParserImpl{
		lookahead: func() int { return -1 },
	}
	return p
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqllval sqlSymType
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := make([]sqlSymType, sqlMaxDepth)

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlchar := -1
	sqltoken := -1 // sqlchar translated into internal numbering
	sqlrcvr.lookahead = func() int { return sqlchar }
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlchar = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlchar < 0 {
		sqlchar, sqltoken = sqllex1(sqllex, &sqllval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlchar = -1
		sqltoken = -1
		sqlVAL = sqllval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlchar < 0 {
			sqlchar, sqltoken = sqllex1(sqllex, &sqllval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlchar = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:443
		{
			sqllex.(*scanner).stmts = sqlDollar[1].stmts
		}
	case 2:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:449
		{
			if sqlDollar[3].stmt != nil {
				sqlVAL.stmts = append(sqlDollar[1].stmts, sqlDollar[3].stmt)
			}
		}
	case 3:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:455
		{
			if sqlDollar[1].stmt != nil {
				sqlVAL.stmts = []Statement{sqlDollar[1].stmt}
			} else {
				sqlVAL.stmts = nil
			}
		}
	case 13:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:474
		{
			sqlVAL.stmt = sqlDollar[1].selectStmt
		}
	case 19:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:483
		{
			sqlVAL.stmt = nil
		}
	case 20:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:489
		{
			sqlVAL.stmt = &AlterTable{Table: sqlDollar[3].qname, IfExists: false, Cmds: sqlDollar[4].alterTableCmds}
		}
	case 21:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:493
		{
			sqlVAL.stmt = &AlterTable{Table: sqlDollar[5].qname, IfExists: true, Cmds: sqlDollar[6].alterTableCmds}
		}
	case 22:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:499
		{
			sqlVAL.alterTableCmds = AlterTableCmds{sqlDollar[1].alterTableCmd}
		}
	case 23:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:503
		{
			sqlVAL.alterTableCmds = append(sqlDollar[1].alterTableCmds, sqlDollar[3].alterTableCmd)
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:510
		{
			sqlVAL.alterTableCmd = &AlterTableAddColumn{columnKeyword: false, IfNotExists: false, ColumnDef: sqlDollar[2].colDef}
		}
	case 25:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:515
		{
			sqlVAL.alterTableCmd = &AlterTableAddColumn{columnKeyword: false, IfNotExists: true, ColumnDef: sqlDollar[5].colDef}
		}
	case 26:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:520
		{
			sqlVAL.alterTableCmd = &AlterTableAddColumn{columnKeyword: true, IfNotExists: false, ColumnDef: sqlDollar[3].colDef}
		}
	case 27:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:525
		{
			sqlVAL.alterTableCmd = &AlterTableAddColumn{columnKeyword: true, IfNotExists: true, ColumnDef: sqlDollar[6].colDef}
		}
	case 28:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:529
		{
			unimplemented()
		}
	case 29:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:531
		{
			unimplemented()
		}
	case 30:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:533
		{
			unimplemented()
		}
	case 31:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:535
		{
			unimplemented()
		}
	case 32:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:537
		{
			unimplemented()
		}
	case 33:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:540
		{
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:543
		{
			sqlVAL.alterTableCmd = &AlterTableAddConstraint{ConstraintDef: sqlDollar[2].constraintDef}
		}
	case 35:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:547
		{
			unimplemented()
		}
	case 36:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:549
		{
			unimplemented()
		}
	case 37:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:551
		{
			unimplemented()
		}
	case 38:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:553
		{
			unimplemented()
		}
	case 39:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:556
		{
			unimplemented()
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:557
		{
			unimplemented()
		}
	case 41:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:560
		{
			unimplemented()
		}
	case 42:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:561
		{
			unimplemented()
		}
	case 43:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:562
		{
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:565
		{
			unimplemented()
		}
	case 45:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:566
		{
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:569
		{
			unimplemented()
		}
	case 47:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:570
		{
		}
	case 51:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:581
		{
			sqlVAL.stmt = &Delete{Table: sqlDollar[4].tblExpr, Where: newWhere(astWhere, sqlDollar[5].expr)}
		}
	case 52:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:588
		{
			sqlVAL.stmt = nil
		}
	case 53:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:592
		{
			sqlVAL.stmt = nil
		}
	case 54:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:596
		{
			sqlVAL.stmt = &DropDatabase{Name: Name(sqlDollar[3].str), IfExists: false}
		}
	case 55:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:600
		{
			sqlVAL.stmt = &DropDatabase{Name: Name(sqlDollar[5].str), IfExists: true}
		}
	case 56:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:604
		{
			sqlVAL.stmt = &DropTable{Names: sqlDollar[3].qnames, IfExists: false}
		}
	case 57:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:608
		{
			sqlVAL.stmt = &DropTable{Names: sqlDollar[5].qnames, IfExists: true}
		}
	case 58:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:614
		{
			sqlVAL.qnames = QualifiedNames{sqlDollar[1].qname}
		}
	case 59:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:618
		{
			sqlVAL.qnames = append(sqlDollar[1].qnames, sqlDollar[3].qname)
		}
	case 60:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:624
		{
			sqlVAL.qname = &QualifiedName{Base: Name(sqlDollar[1].str)}
		}
	case 61:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:628
		{
			sqlVAL.qname = &QualifiedName{Base: Name(sqlDollar[1].str), Indirect: sqlDollar[2].indirect}
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:634
		{
			sqlVAL.indirect = Indirection{NameIndirection(sqlDollar[2].str)}
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:638
		{
			sqlVAL.indirect = append(sqlDollar[1].indirect, NameIndirection(sqlDollar[3].str))
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:645
		{
			sqlVAL.stmt = &Explain{Statement: sqlDollar[2].stmt}
		}
	case 65:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:649
		{
			sqlVAL.stmt = &Explain{Options: sqlDollar[3].strs, Statement: sqlDollar[5].stmt}
		}
	case 66:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:655
		{
			sqlVAL.stmt = sqlDollar[1].selectStmt
		}
	case 70:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:664
		{
			sqlVAL.strs = []string{sqlDollar[1].str}
		}
	case 71:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:668
		{
			sqlVAL.strs = append(sqlDollar[1].strs, sqlDollar[3].str)
		}
	case 73:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:678
		{
			sqlVAL.stmt = &Grant{Privileges: sqlDollar[2].privilegeList, Grantees: NameList(sqlDollar[6].strs), Targets: sqlDollar[4].targetList}
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:685
		{
			sqlVAL.stmt = &Revoke{Privileges: sqlDollar[2].privilegeList, Grantees: NameList(sqlDollar[6].strs), Targets: sqlDollar[4].targetList}
		}
	case 75:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:692
		{
			sqlVAL.targetList = TargetList{Tables: QualifiedNames(sqlDollar[1].qnames)}
		}
	case 76:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:696
		{
			// TODO(marc): this is postgres' grammar, but do we really need
			// both "x" and "TABLE X"?
			sqlVAL.targetList = TargetList{Tables: QualifiedNames(sqlDollar[2].qnames)}
		}
	case 77:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:702
		{
			sqlVAL.targetList = TargetList{Databases: NameList(sqlDollar[2].strs)}
		}
	case 78:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:709
		{
			sqlVAL.privilegeList = privilege.List{privilege.ALL}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:712
		{
		}
	case 80:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:716
		{
			sqlVAL.privilegeList = privilege.List{sqlDollar[1].privilegeType}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:720
		{
			sqlVAL.privilegeList = append(sqlDollar[1].privilegeList, sqlDollar[3].privilegeType)
		}
	case 82:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:727
		{
			sqlVAL.privilegeType = privilege.CREATE
		}
	case 83:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:731
		{
			sqlVAL.privilegeType = privilege.DROP
		}
	case 84:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:735
		{
			sqlVAL.privilegeType = privilege.GRANT
		}
	case 85:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:739
		{
			sqlVAL.privilegeType = privilege.SELECT
		}
	case 86:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:743
		{
			sqlVAL.privilegeType = privilege.INSERT
		}
	case 87:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:747
		{
			sqlVAL.privilegeType = privilege.DELETE
		}
	case 88:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:751
		{
			sqlVAL.privilegeType = privilege.UPDATE
		}
	case 89:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:759
		{
			sqlVAL.strs = []string{sqlDollar[1].str}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:763
		{
			sqlVAL.strs = append(sqlDollar[1].strs, sqlDollar[3].str)
		}
	case 91:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:771
		{
			sqlVAL.stmt = sqlDollar[2].stmt
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:775
		{
			sqlVAL.stmt = sqlDollar[3].stmt
		}
	case 93:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:779
		{
			sqlVAL.stmt = sqlDollar[3].stmt
		}
	case 94:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:785
		{
			sqlVAL.stmt = &SetTransaction{Isolation: sqlDollar[2].isoLevel}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:792
		{
			sqlVAL.stmt = &Set{Name: sqlDollar[1].qname, Values: sqlDollar[3].exprs}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:796
		{
			sqlVAL.stmt = &Set{Name: sqlDollar[1].qname, Values: sqlDollar[3].exprs}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:800
		{
			sqlVAL.stmt = &Set{Name: sqlDollar[1].qname}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:804
		{
			sqlVAL.stmt = &Set{Name: sqlDollar[1].qname}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:811
		{
			unimplemented()
		}
	case 102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:813
		{
			unimplemented()
		}
	case 103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:814
		{
			unimplemented()
		}
	case 105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:821
		{
			sqlVAL.exprs = []Expr{sqlDollar[1].expr}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:825
		{
			sqlVAL.exprs = append(sqlDollar[1].exprs, sqlDollar[3].expr)
		}
	case 109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:833
		{
			sqlVAL.expr = ValArg(sqlDollar[1].str)
		}
	case 110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:839
		{
			// Mapped to the closest supported isolation level.
			sqlVAL.isoLevel = SnapshotIsolation
		}
	case 111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:844
		{
			// Mapped to the closest supported isolation level.
			sqlVAL.isoLevel = SnapshotIsolation
		}
	case 112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:849
		{
			// Mapped to the closest supported isolation level.
			sqlVAL.isoLevel = SnapshotIsolation
		}
	case 113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:854
		{
			sqlVAL.isoLevel = SnapshotIsolation
		}
	case 114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:858
		{
			sqlVAL.isoLevel = SerializableIsolation
		}
	case 115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:864
		{
			sqlVAL.expr = DBool(true)
		}
	case 116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:868
		{
			sqlVAL.expr = DBool(false)
		}
	case 117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:872
		{
			sqlVAL.expr = DString(sqlDollar[1].str)
		}
	case 119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:888
		{
			unimplemented()
		}
	case 120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:889
		{
			unimplemented()
		}
	case 121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:890
		{
			unimplemented()
		}
	case 122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:891
		{
			unimplemented()
		}
	case 123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:892
		{
			unimplemented()
		}
	case 124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:893
		{
			unimplemented()
		}
	case 125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:894
		{
			unimplemented()
		}
	case 126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:897
		{
			unimplemented()
		}
	case 127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:898
		{
			unimplemented()
		}
	case 128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:899
		{
		}
	case 129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:903
		{
			sqlVAL.expr = DString(sqlDollar[1].str)
		}
	case 130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:907
		{
			sqlVAL.expr = DString(sqlDollar[1].str)
		}
	case 131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:913
		{
			sqlVAL.stmt = &Show{Name: sqlDollar[2].str}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:917
		{
			sqlVAL.stmt = &Show{Name: sqlDollar[2].str}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:921
		{
			sqlVAL.stmt = &ShowColumns{Table: sqlDollar[4].qname}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:925
		{
			sqlVAL.stmt = &ShowDatabases{}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:929
		{
			sqlVAL.stmt = &ShowGrants{Targets: sqlDollar[3].targetListPtr, Grantees: sqlDollar[4].strs}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:933
		{
			sqlVAL.stmt = &ShowIndex{Table: sqlDollar[4].qname}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:937
		{
			sqlVAL.stmt = &ShowTables{Name: sqlDollar[3].qname}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:941
		{
			sqlVAL.stmt = nil
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:945
		{
			sqlVAL.stmt = &Show{Name: "TRANSACTION ISOLATION LEVEL"}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:949
		{
			sqlVAL.stmt = nil
		}
	case 141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:955
		{
			sqlVAL.qname = sqlDollar[2].qname
		}
	case 142:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:959
		{
			sqlVAL.qname = nil
		}
	case 143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:965
		{
			tmp := sqlDollar[2].targetList
			sqlVAL.targetListPtr = &tmp
		}
	case 144:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:970
		{
			sqlVAL.targetListPtr = nil
		}
	case 145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:976
		{
			sqlVAL.strs = sqlDollar[2].strs
		}
	case 146:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:980
		{
			sqlVAL.strs = nil
		}
	case 147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:987
		{
			sqlVAL.stmt = &CreateTable{Table: sqlDollar[3].qname, IfNotExists: false, Defs: sqlDollar[5].tblDefs}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
		//line sql.y:991
		{
			sqlVAL.stmt = &CreateTable{Table: sqlDollar[6].qname, IfNotExists: true, Defs: sqlDollar[8].tblDefs}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:998
		{
			sqlVAL.tblDefs = nil
		}
	case 151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1004
		{
			sqlVAL.tblDefs = TableDefs{sqlDollar[1].tblDef}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1008
		{
			sqlVAL.tblDefs = append(sqlDollar[1].tblDefs, sqlDollar[3].tblDef)
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1014
		{
			sqlVAL.tblDef = sqlDollar[1].colDef
		}
	case 155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1019
		{
			sqlVAL.tblDef = sqlDollar[1].constraintDef
		}
	case 156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1025
		{
			sqlVAL.colDef = newColumnTableDef(Name(sqlDollar[1].str), sqlDollar[2].colType, sqlDollar[3].colConstraints)
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1031
		{
			sqlVAL.colConstraints = append(sqlDollar[1].colConstraints, sqlDollar[2].colConstraint)
		}
	case 158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1035
		{
			sqlVAL.colConstraints = nil
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1041
		{
			// TODO(pmattis): Handle constraint name.
			sqlVAL.colConstraint = sqlDollar[3].colConstraint
		}
	case 161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1046
		{
			unimplemented()
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1062
		{
			sqlVAL.colConstraint = NotNullConstraint{}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1066
		{
			sqlVAL.colConstraint = NullConstraint{}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1070
		{
			sqlVAL.colConstraint = UniqueConstraint{}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1074
		{
			sqlVAL.colConstraint = PrimaryKeyConstraint{}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1077
		{
			unimplemented()
		}
	case 167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1078
		{
			unimplemented()
		}
	case 168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1079
		{
			unimplemented()
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1083
		{
			sqlVAL.tblDef = &IndexTableDef{
				Name:    Name(sqlDollar[2].str),
				Columns: NameList(sqlDollar[4].strs),
				Storing: sqlDollar[6].strs,
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:1091
		{
			sqlVAL.tblDef = &UniqueConstraintTableDef{
				IndexTableDef: IndexTableDef{
					Name:    Name(sqlDollar[3].str),
					Columns: NameList(sqlDollar[5].strs),
					Storing: sqlDollar[7].strs,
				},
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1106
		{
			sqlVAL.constraintDef = sqlDollar[3].constraintDef
			sqlVAL.constraintDef.setName(Name(sqlDollar[2].str))
		}
	case 172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1111
		{
			sqlVAL.constraintDef = sqlDollar[1].constraintDef
		}
	case 173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1116
		{
			unimplemented()
		}
	case 174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1118
		{
			sqlVAL.constraintDef = &UniqueConstraintTableDef{
				IndexTableDef: IndexTableDef{
					Columns: NameList(sqlDollar[3].strs),
					Storing: sqlDollar[5].strs,
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1127
		{
			sqlVAL.constraintDef = &UniqueConstraintTableDef{
				IndexTableDef: IndexTableDef{
					Columns: NameList(sqlDollar[4].strs),
				},
				PrimaryKey: true,
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
		//line sql.y:1136
		{
			unimplemented()
		}
	case 179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1153
		{
			sqlVAL.strs = sqlDollar[3].strs
		}
	case 180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1157
		{
			sqlVAL.strs = nil
		}
	case 181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1163
		{
			sqlVAL.strs = sqlDollar[2].strs
		}
	case 182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1167
		{
			sqlVAL.strs = nil
		}
	case 183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1172
		{
			unimplemented()
		}
	case 184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1173
		{
			unimplemented()
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1174
		{
			unimplemented()
		}
	case 186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1175
		{
		}
	case 187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1182
		{
			unimplemented()
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1183
		{
			unimplemented()
		}
	case 189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1184
		{
			unimplemented()
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1185
		{
			unimplemented()
		}
	case 191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1186
		{
		}
	case 192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1189
		{
			unimplemented()
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1192
		{
			unimplemented()
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1195
		{
			unimplemented()
		}
	case 195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1196
		{
			unimplemented()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1197
		{
			unimplemented()
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1198
		{
			unimplemented()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1199
		{
			unimplemented()
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1203
		{
			sqlVAL.expr = NumVal(sqlDollar[1].str)
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1207
		{
			sqlVAL.expr = NumVal("-" + sqlDollar[2].str)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1211
		{
			sqlVAL.expr = IntVal(sqlDollar[1].ival)
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1218
		{
			sqlVAL.stmt = &Truncate{Tables: sqlDollar[3].qnames}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
		//line sql.y:1225
		{
			sqlVAL.stmt = &CreateIndex{
				Name:    Name(sqlDollar[4].str),
				Table:   sqlDollar[6].qname,
				Unique:  sqlDollar[2].boolVal,
				Columns: sqlDollar[8].strs,
				Storing: sqlDollar[10].strs,
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
		//line sql.y:1235
		{
			sqlVAL.stmt = &CreateIndex{
				Name:        Name(sqlDollar[7].str),
				Table:       sqlDollar[9].qname,
				Unique:      sqlDollar[2].boolVal,
				IfNotExists: true,
				Columns:     sqlDollar[11].strs,
				Storing:     sqlDollar[13].strs,
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1248
		{
			sqlVAL.boolVal = true
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1252
		{
			sqlVAL.boolVal = false
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1258
		{
			sqlVAL.strs = []string{sqlDollar[1].str}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1262
		{
			sqlVAL.strs = append(sqlDollar[1].strs, sqlDollar[3].str)
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1271
		{
			// TODO(pmattis): Support opt_asc_desc.
			sqlVAL.str = sqlDollar[1].str
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1275
		{
			unimplemented()
		}
	case 211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1276
		{
			unimplemented()
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1279
		{
			unimplemented()
		}
	case 213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1280
		{
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1284
		{
			sqlVAL.dir = Ascending
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1288
		{
			sqlVAL.dir = Descending
		}
	case 216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1292
		{
			sqlVAL.dir = DefaultDirection
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1299
		{
			sqlVAL.stmt = &RenameDatabase{Name: Name(sqlDollar[3].str), NewName: Name(sqlDollar[6].str)}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1303
		{
			sqlVAL.stmt = &RenameTable{Name: sqlDollar[3].qname, NewName: sqlDollar[6].qname, IfExists: false}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:1307
		{
			sqlVAL.stmt = &RenameTable{Name: sqlDollar[5].qname, NewName: sqlDollar[8].qname, IfExists: true}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1311
		{
			sqlVAL.stmt = &RenameIndex{Name: sqlDollar[3].qname, NewName: Name(sqlDollar[6].str), IfExists: false}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:1315
		{
			sqlVAL.stmt = &RenameIndex{Name: sqlDollar[5].qname, NewName: Name(sqlDollar[8].str), IfExists: true}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:1319
		{
			sqlVAL.stmt = &RenameColumn{Table: sqlDollar[3].qname, Name: Name(sqlDollar[6].str), NewName: Name(sqlDollar[8].str), IfExists: false}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
		//line sql.y:1323
		{
			sqlVAL.stmt = &RenameColumn{Table: sqlDollar[5].qname, Name: Name(sqlDollar[8].str), NewName: Name(sqlDollar[10].str), IfExists: true}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:1327
		{
			sqlVAL.stmt = nil
		}
	case 225:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
		//line sql.y:1331
		{
			sqlVAL.stmt = nil
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1336
		{
		}
	case 227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1337
		{
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1340
		{
		}
	case 229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1341
		{
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1346
		{
			sqlVAL.stmt = &BeginTransaction{Isolation: sqlDollar[3].isoLevel}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1350
		{
			sqlVAL.stmt = &CommitTransaction{}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1354
		{
			sqlVAL.stmt = &RollbackTransaction{}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1359
		{
		}
	case 234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1360
		{
		}
	case 236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1365
		{
			sqlVAL.isoLevel = UnspecifiedIsolation
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1371
		{
			sqlVAL.isoLevel = sqlDollar[3].isoLevel
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1377
		{
			sqlVAL.stmt = &CreateDatabase{Name: Name(sqlDollar[3].str)}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1381
		{
			sqlVAL.stmt = &CreateDatabase{IfNotExists: true, Name: Name(sqlDollar[6].str)}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1387
		{
			sqlVAL.stmt = sqlDollar[5].stmt
			sqlVAL.stmt.(*Insert).Table = sqlDollar[4].qname
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1403
		{
			sqlVAL.stmt = &Insert{Rows: sqlDollar[1].selectStmt}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1407
		{
			sqlVAL.stmt = &Insert{Columns: sqlDollar[2].qnames, Rows: sqlDollar[4].selectStmt}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1411
		{
			sqlVAL.stmt = &Insert{}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:1416
		{
			unimplemented()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1417
		{
			unimplemented()
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1418
		{
		}
	case 249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1421
		{
			unimplemented()
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1422
		{
			unimplemented()
		}
	case 251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1423
		{
		}
	case 252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:1428
		{
			sqlVAL.stmt = &Update{Table: sqlDollar[3].tblExpr, Exprs: sqlDollar[5].updateExprs, Where: newWhere(astWhere, sqlDollar[7].expr)}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1434
		{
			sqlVAL.updateExprs = UpdateExprs{sqlDollar[1].updateExpr}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1438
		{
			sqlVAL.updateExprs = append(sqlDollar[1].updateExprs, sqlDollar[3].updateExpr)
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1448
		{
			sqlVAL.updateExpr = &UpdateExpr{Names: QualifiedNames{sqlDollar[1].qname}, Expr: sqlDollar[3].expr}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1460
		{
			sqlVAL.updateExpr = &UpdateExpr{Tuple: true, Names: sqlDollar[2].qnames, Expr: Tuple(sqlDollar[5].exprs)}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1464
		{
			sqlVAL.updateExpr = &UpdateExpr{Tuple: true, Names: sqlDollar[2].qnames, Expr: &Subquery{Select: sqlDollar[5].selectStmt}}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1511
		{
			sqlVAL.selectStmt = &ParenSelect{Select: sqlDollar[2].selectStmt}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1515
		{
			sqlVAL.selectStmt = &ParenSelect{Select: sqlDollar[2].selectStmt}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1531
		{
			sqlVAL.selectStmt = sqlDollar[1].selectStmt
			if s, ok := sqlVAL.selectStmt.(*Select); ok {
				s.OrderBy = sqlDollar[2].orderBy
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1538
		{
			sqlVAL.selectStmt = sqlDollar[1].selectStmt
			if s, ok := sqlVAL.selectStmt.(*Select); ok {
				s.OrderBy = sqlDollar[2].orderBy
				s.Limit = sqlDollar[3].limit
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1546
		{
			sqlVAL.selectStmt = sqlDollar[2].selectStmt
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1550
		{
			sqlVAL.selectStmt = sqlDollar[2].selectStmt
			if s, ok := sqlVAL.selectStmt.(*Select); ok {
				s.OrderBy = sqlDollar[3].orderBy
			}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1557
		{
			sqlVAL.selectStmt = sqlDollar[2].selectStmt
			if s, ok := sqlVAL.selectStmt.(*Select); ok {
				s.OrderBy = sqlDollar[3].orderBy
				s.Limit = sqlDollar[4].limit
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:1595
		{
			sqlVAL.selectStmt = &Select{
				Exprs:   sqlDollar[3].selExprs,
				From:    sqlDollar[4].tblExprs,
				Where:   newWhere(astWhere, sqlDollar[5].expr),
				GroupBy: sqlDollar[6].groupBy,
				Having:  newWhere(astHaving, sqlDollar[7].expr),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:1607
		{
			// TODO(pmattis): Support DISTINCT ON?
			sqlVAL.selectStmt = &Select{
				Distinct: astDistinct,
				Exprs:    sqlDollar[3].selExprs,
				From:     sqlDollar[4].tblExprs,
				Where:    newWhere(astWhere, sqlDollar[5].expr),
				GroupBy:  sqlDollar[6].groupBy,
				Having:   newWhere(astHaving, sqlDollar[7].expr),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1620
		{
			sqlVAL.selectStmt = &Select{
				Exprs:       SelectExprs{StarSelectExpr()},
				From:        TableExprs{&AliasedTableExpr{Expr: sqlDollar[2].qname}},
				tableSelect: true,
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1628
		{
			// TODO(pmattis): Support all/distinct
			sqlVAL.selectStmt = &Union{
				Type:  astUnion,
				Left:  sqlDollar[1].selectStmt,
				Right: sqlDollar[4].selectStmt,
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1637
		{
			// TODO(pmattis): Support all/distinct
			sqlVAL.selectStmt = &Union{
				Type:  astIntersect,
				Left:  sqlDollar[1].selectStmt,
				Right: sqlDollar[4].selectStmt,
			}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1646
		{
			// TODO(pmattis): Support all/distinct
			sqlVAL.selectStmt = &Union{
				Type:  astExcept,
				Left:  sqlDollar[1].selectStmt,
				Right: sqlDollar[4].selectStmt,
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1664
		{
			unimplemented()
		}
	case 280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1665
		{
			unimplemented()
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1666
		{
			unimplemented()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1669
		{
			unimplemented()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1670
		{
			unimplemented()
		}
	case 284:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1673
		{
			unimplemented()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1677
		{
			sqlVAL.stmt = sqlDollar[1].selectStmt
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1685
		{
			unimplemented()
		}
	case 290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1686
		{
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1689
		{
		}
	case 292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1690
		{
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1693
		{
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1694
		{
		}
	case 295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1695
		{
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1700
		{
		}
	case 297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1701
		{
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1704
		{
		}
	case 299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1705
		{
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1709
		{
			sqlVAL.orderBy = sqlDollar[1].orderBy
		}
	case 301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1713
		{
			sqlVAL.orderBy = nil
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1719
		{
			sqlVAL.orderBy = OrderBy(sqlDollar[3].orders)
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1725
		{
			sqlVAL.orders = []*Order{sqlDollar[1].order}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1729
		{
			sqlVAL.orders = append(sqlDollar[1].orders, sqlDollar[3].order)
		}
	case 305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1735
		{
			sqlVAL.order = &Order{Expr: sqlDollar[1].expr, Direction: sqlDollar[2].dir}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1743
		{
			if sqlDollar[1].limit == nil {
				sqlVAL.limit = sqlDollar[2].limit
			} else {
				sqlVAL.limit = sqlDollar[1].limit
				sqlVAL.limit.Offset = sqlDollar[2].limit.Offset
			}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1752
		{
			sqlVAL.limit = sqlDollar[1].limit
			if sqlDollar[2].limit != nil {
				sqlVAL.limit.Count = sqlDollar[2].limit.Count
			}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1763
		{
			if sqlDollar[2].expr == nil {
				sqlVAL.limit = nil
			} else {
				sqlVAL.limit = &Limit{Count: sqlDollar[2].expr}
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1776
		{
			sqlVAL.limit = &Limit{Offset: sqlDollar[2].expr}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1783
		{
			sqlVAL.limit = &Limit{Offset: sqlDollar[2].expr}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1790
		{
			sqlVAL.expr = nil
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1804
		{
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1805
		{
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1831
		{
			sqlVAL.groupBy = GroupBy(sqlDollar[3].exprs)
		}
	case 318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1835
		{
			sqlVAL.groupBy = nil
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1841
		{
			sqlVAL.expr = sqlDollar[2].expr
		}
	case 320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1845
		{
			sqlVAL.expr = nil
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1851
		{
			sqlVAL.selectStmt = Values{Tuple(sqlDollar[2].exprs)}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1855
		{
			sqlVAL.selectStmt = append(sqlDollar[1].selectStmt.(Values), Tuple(sqlDollar[3].exprs))
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1865
		{
			sqlVAL.tblExprs = sqlDollar[2].tblExprs
		}
	case 324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1869
		{
			sqlVAL.tblExprs = nil
		}
	case 325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1875
		{
			sqlVAL.tblExprs = TableExprs{sqlDollar[1].tblExpr}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1879
		{
			sqlVAL.tblExprs = append(sqlDollar[1].tblExprs, sqlDollar[3].tblExpr)
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1886
		{
			sqlVAL.tblExpr = &AliasedTableExpr{Expr: sqlDollar[1].qname, As: Name(sqlDollar[2].str)}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1890
		{
			sqlVAL.tblExpr = &AliasedTableExpr{Expr: &Subquery{Select: sqlDollar[1].selectStmt}, As: Name(sqlDollar[2].str)}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1894
		{
			unimplemented()
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1912
		{
			sqlVAL.tblExpr = &ParenTableExpr{Expr: sqlDollar[2].tblExpr}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1916
		{
			sqlVAL.tblExpr = &JoinTableExpr{Join: astCrossJoin, Left: sqlDollar[1].tblExpr, Right: sqlDollar[4].tblExpr}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1920
		{
			sqlVAL.tblExpr = &JoinTableExpr{Join: sqlDollar[2].str, Left: sqlDollar[1].tblExpr, Right: sqlDollar[4].tblExpr, Cond: sqlDollar[5].joinCond}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1924
		{
			sqlVAL.tblExpr = &JoinTableExpr{Join: astJoin, Left: sqlDollar[1].tblExpr, Right: sqlDollar[3].tblExpr, Cond: sqlDollar[4].joinCond}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1928
		{
			sqlVAL.tblExpr = &JoinTableExpr{Join: astNaturalJoin, Left: sqlDollar[1].tblExpr, Right: sqlDollar[5].tblExpr}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1932
		{
			sqlVAL.tblExpr = &JoinTableExpr{Join: astNaturalJoin, Left: sqlDollar[1].tblExpr, Right: sqlDollar[4].tblExpr}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1937
		{
			unimplemented()
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1939
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1942
		{
			unimplemented()
		}
	case 340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1944
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1951
		{
			sqlVAL.str = ""
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1957
		{
			sqlVAL.str = astFullJoin
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1961
		{
			sqlVAL.str = astLeftJoin
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1965
		{
			sqlVAL.str = astRightJoin
		}
	case 346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1969
		{
			sqlVAL.str = astInnerJoin
		}
	case 347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1975
		{
		}
	case 348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1976
		{
		}
	case 349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1987
		{
			sqlVAL.joinCond = &UsingJoinCond{Cols: NameList(sqlDollar[3].strs)}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1991
		{
			sqlVAL.joinCond = &OnJoinCond{Expr: sqlDollar[2].expr}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1997
		{
			sqlVAL.qname = sqlDollar[1].qname
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2001
		{
			// TODO(pmattis): Handle the "*".
			sqlVAL.qname = sqlDollar[1].qname
		}
	case 353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2006
		{
			// TODO(pmattis): Support ONLY.
			sqlVAL.qname = sqlDollar[2].qname
		}
	case 354:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2011
		{
			// TODO(pmattis): Support ONLY.
			sqlVAL.qname = sqlDollar[3].qname
		}
	case 355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2018
		{
			sqlVAL.qnames = QualifiedNames{sqlDollar[1].qname}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2022
		{
			sqlVAL.qnames = append(sqlDollar[1].qnames, sqlDollar[3].qname)
		}
	case 357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2035
		{
			sqlVAL.tblExpr = &AliasedTableExpr{Expr: sqlDollar[1].qname}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2039
		{
			sqlVAL.tblExpr = &AliasedTableExpr{Expr: sqlDollar[1].qname, As: Name(sqlDollar[2].str)}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2043
		{
			sqlVAL.tblExpr = &AliasedTableExpr{Expr: sqlDollar[1].qname, As: Name(sqlDollar[3].str)}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2049
		{
			sqlVAL.expr = sqlDollar[2].expr
		}
	case 361:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2053
		{
			sqlVAL.expr = nil
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2065
		{
			sqlVAL.colType = sqlDollar[1].colType
		}
	case 363:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2069
		{
			unimplemented()
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2070
		{
			unimplemented()
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2073
		{
			unimplemented()
		}
	case 366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2074
		{
			unimplemented()
		}
	case 367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2075
		{
		}
	case 373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2083
		{
			unimplemented()
		}
	case 374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2085
		{
			sqlVAL.colType = &BytesType{Name: "BLOB"}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2089
		{
			sqlVAL.colType = &BytesType{Name: "BYTES"}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2093
		{
			sqlVAL.colType = &StringType{Name: "TEXT"}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2097
		{
			sqlVAL.colType = &StringType{Name: "STRING"}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2118
		{
			sqlVAL.colType = &DecimalType{Prec: int(sqlDollar[2].ival)}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2122
		{
			sqlVAL.colType = &DecimalType{Prec: int(sqlDollar[2].ival), Scale: int(sqlDollar[4].ival)}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2126
		{
			sqlVAL.colType = &DecimalType{}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2133
		{
			sqlVAL.colType = &IntType{Name: "INT"}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2137
		{
			sqlVAL.colType = &IntType{Name: "INT64"}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2141
		{
			sqlVAL.colType = &IntType{Name: "INTEGER"}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2145
		{
			sqlVAL.colType = &IntType{Name: "SMALLINT"}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2149
		{
			sqlVAL.colType = &IntType{Name: "BIGINT"}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2153
		{
			sqlVAL.colType = &FloatType{Name: "REAL"}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2157
		{
			sqlVAL.colType = &FloatType{Name: "FLOAT", Prec: int(sqlDollar[2].ival)}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2161
		{
			sqlVAL.colType = &FloatType{Name: "DOUBLE PRECISION"}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2165
		{
			sqlVAL.colType = sqlDollar[2].colType
			sqlVAL.colType.(*DecimalType).Name = "DECIMAL"
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2170
		{
			sqlVAL.colType = sqlDollar[2].colType
			sqlVAL.colType.(*DecimalType).Name = "DEC"
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2175
		{
			sqlVAL.colType = sqlDollar[2].colType
			sqlVAL.colType.(*DecimalType).Name = "NUMERIC"
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2180
		{
			sqlVAL.colType = &BoolType{Name: "BOOLEAN"}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2184
		{
			sqlVAL.colType = &BoolType{Name: "BOOL"}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2190
		{
			sqlVAL.ival = sqlDollar[2].ival
		}
	case 399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2194
		{
			sqlVAL.ival = 0
		}
	case 404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2212
		{
			sqlVAL.colType = &IntType{Name: "BIT", N: int(sqlDollar[4].ival)}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2218
		{
			sqlVAL.colType = &IntType{Name: "BIT"}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2234
		{
			sqlVAL.colType = sqlDollar[1].colType
			sqlVAL.colType.(*StringType).N = int(sqlDollar[3].ival)
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2241
		{
			sqlVAL.colType = sqlDollar[1].colType
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2247
		{
			sqlVAL.colType = &StringType{Name: "CHAR"}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2251
		{
			sqlVAL.colType = &StringType{Name: "CHAR"}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2255
		{
			sqlVAL.colType = &StringType{Name: "VARCHAR"}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2260
		{
		}
	case 416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2261
		{
		}
	case 417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2266
		{
			sqlVAL.colType = &DateType{}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2270
		{
			sqlVAL.colType = &TimestampType{}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2275
		{
			sqlVAL.colType = &IntervalType{}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2280
		{
			unimplemented()
		}
	case 421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2281
		{
			unimplemented()
		}
	case 422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2282
		{
			unimplemented()
		}
	case 423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2283
		{
			unimplemented()
		}
	case 424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2284
		{
			unimplemented()
		}
	case 425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2285
		{
			unimplemented()
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2286
		{
			unimplemented()
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2287
		{
			unimplemented()
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2288
		{
			unimplemented()
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2289
		{
			unimplemented()
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2290
		{
			unimplemented()
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2291
		{
			unimplemented()
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2292
		{
			unimplemented()
		}
	case 433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2293
		{
		}
	case 434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2296
		{
			unimplemented()
		}
	case 435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2297
		{
			unimplemented()
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2321
		{
			sqlVAL.expr = &CastExpr{Expr: sqlDollar[1].expr, Type: sqlDollar[3].colType}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2324
		{
			unimplemented()
		}
	case 439:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2325
		{
			unimplemented()
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2334
		{
			sqlVAL.expr = &UnaryExpr{Operator: UnaryPlus, Expr: sqlDollar[2].expr}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2338
		{
			sqlVAL.expr = &UnaryExpr{Operator: UnaryMinus, Expr: sqlDollar[2].expr}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2342
		{
			sqlVAL.expr = &UnaryExpr{Operator: UnaryComplement, Expr: sqlDollar[2].expr}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2346
		{
			sqlVAL.expr = &BinaryExpr{Operator: Plus, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2350
		{
			sqlVAL.expr = &BinaryExpr{Operator: Minus, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2354
		{
			sqlVAL.expr = &BinaryExpr{Operator: Mult, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2358
		{
			sqlVAL.expr = &BinaryExpr{Operator: Div, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2362
		{
			sqlVAL.expr = &BinaryExpr{Operator: Mod, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2366
		{
			sqlVAL.expr = &BinaryExpr{Operator: Bitxor, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2370
		{
			sqlVAL.expr = &BinaryExpr{Operator: Bitxor, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2374
		{
			sqlVAL.expr = &BinaryExpr{Operator: Bitand, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2378
		{
			sqlVAL.expr = &BinaryExpr{Operator: Bitor, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2382
		{
			sqlVAL.expr = &ComparisonExpr{Operator: LT, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2386
		{
			sqlVAL.expr = &ComparisonExpr{Operator: GT, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2390
		{
			sqlVAL.expr = &ComparisonExpr{Operator: EQ, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2394
		{
			sqlVAL.expr = &BinaryExpr{Operator: Concat, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2398
		{
			sqlVAL.expr = &BinaryExpr{Operator: LShift, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2402
		{
			sqlVAL.expr = &BinaryExpr{Operator: RShift, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2406
		{
			sqlVAL.expr = &ComparisonExpr{Operator: LE, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2410
		{
			sqlVAL.expr = &ComparisonExpr{Operator: GE, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2414
		{
			sqlVAL.expr = &ComparisonExpr{Operator: NE, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2418
		{
			sqlVAL.expr = &AndExpr{Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2422
		{
			sqlVAL.expr = &OrExpr{Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2426
		{
			sqlVAL.expr = &NotExpr{Expr: sqlDollar[2].expr}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2430
		{
			sqlVAL.expr = &NotExpr{Expr: sqlDollar[2].expr}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2434
		{
			sqlVAL.expr = &ComparisonExpr{Operator: Like, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2438
		{
			sqlVAL.expr = &ComparisonExpr{Operator: NotLike, Left: sqlDollar[1].expr, Right: sqlDollar[4].expr}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2442
		{
			sqlVAL.expr = &ComparisonExpr{Operator: SimilarTo, Left: sqlDollar[1].expr, Right: sqlDollar[4].expr}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2446
		{
			sqlVAL.expr = &ComparisonExpr{Operator: NotSimilarTo, Left: sqlDollar[1].expr, Right: sqlDollar[5].expr}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2450
		{
			sqlVAL.expr = &IsExpr{Operator: IsNull, Expr: sqlDollar[1].expr}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2454
		{
			sqlVAL.expr = &IsExpr{Operator: IsNotNull, Expr: sqlDollar[1].expr}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2457
		{
			unimplemented()
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2459
		{
			sqlVAL.expr = &IsExpr{Operator: IsTrue, Expr: sqlDollar[1].expr}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2463
		{
			sqlVAL.expr = &IsExpr{Operator: IsNotTrue, Expr: sqlDollar[1].expr}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2467
		{
			sqlVAL.expr = &IsExpr{Operator: IsFalse, Expr: sqlDollar[1].expr}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2471
		{
			sqlVAL.expr = &IsExpr{Operator: IsNotFalse, Expr: sqlDollar[1].expr}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2475
		{
			sqlVAL.expr = &IsExpr{Operator: IsUnknown, Expr: sqlDollar[1].expr}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2479
		{
			sqlVAL.expr = &IsExpr{Operator: IsNotUnknown, Expr: sqlDollar[1].expr}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2483
		{
			sqlVAL.expr = &ComparisonExpr{Operator: IsDistinctFrom, Left: sqlDollar[1].expr, Right: sqlDollar[5].expr}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2487
		{
			sqlVAL.expr = &ComparisonExpr{Operator: IsNotDistinctFrom, Left: sqlDollar[1].expr, Right: sqlDollar[6].expr}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2491
		{
			sqlVAL.expr = &IsOfTypeExpr{Expr: sqlDollar[1].expr, Types: sqlDollar[5].colTypes}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:2495
		{
			sqlVAL.expr = &IsOfTypeExpr{Not: true, Expr: sqlDollar[1].expr, Types: sqlDollar[6].colTypes}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2499
		{
			sqlVAL.expr = &RangeCond{Left: sqlDollar[1].expr, From: sqlDollar[4].expr, To: sqlDollar[6].expr}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:2503
		{
			sqlVAL.expr = &RangeCond{Not: true, Left: sqlDollar[1].expr, From: sqlDollar[5].expr, To: sqlDollar[7].expr}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2507
		{
			sqlVAL.expr = &RangeCond{Left: sqlDollar[1].expr, From: sqlDollar[4].expr, To: sqlDollar[6].expr}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:2511
		{
			sqlVAL.expr = &RangeCond{Not: true, Left: sqlDollar[1].expr, From: sqlDollar[5].expr, To: sqlDollar[7].expr}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2515
		{
			sqlVAL.expr = &ComparisonExpr{Operator: In, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2519
		{
			sqlVAL.expr = &ComparisonExpr{Operator: NotIn, Left: sqlDollar[1].expr, Right: sqlDollar[4].expr}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2522
		{
			unimplemented()
		}
	case 489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2523
		{
			unimplemented()
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2524
		{
			unimplemented()
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2536
		{
			sqlVAL.expr = &CastExpr{Expr: sqlDollar[1].expr, Type: sqlDollar[3].colType}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2540
		{
			sqlVAL.expr = &UnaryExpr{Operator: UnaryPlus, Expr: sqlDollar[2].expr}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2544
		{
			sqlVAL.expr = &UnaryExpr{Operator: UnaryMinus, Expr: sqlDollar[2].expr}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2548
		{
			sqlVAL.expr = &UnaryExpr{Operator: UnaryComplement, Expr: sqlDollar[2].expr}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2552
		{
			sqlVAL.expr = &BinaryExpr{Operator: Plus, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2556
		{
			sqlVAL.expr = &BinaryExpr{Operator: Minus, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2560
		{
			sqlVAL.expr = &BinaryExpr{Operator: Mult, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2564
		{
			sqlVAL.expr = &BinaryExpr{Operator: Div, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2568
		{
			sqlVAL.expr = &BinaryExpr{Operator: Mod, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2572
		{
			sqlVAL.expr = &BinaryExpr{Operator: Bitxor, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2576
		{
			sqlVAL.expr = &BinaryExpr{Operator: Bitxor, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2580
		{
			sqlVAL.expr = &BinaryExpr{Operator: Bitand, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2584
		{
			sqlVAL.expr = &BinaryExpr{Operator: Bitor, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2588
		{
			sqlVAL.expr = &ComparisonExpr{Operator: LT, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2592
		{
			sqlVAL.expr = &ComparisonExpr{Operator: GT, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2596
		{
			sqlVAL.expr = &ComparisonExpr{Operator: EQ, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2600
		{
			sqlVAL.expr = &BinaryExpr{Operator: Concat, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2604
		{
			sqlVAL.expr = &BinaryExpr{Operator: LShift, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2608
		{
			sqlVAL.expr = &BinaryExpr{Operator: RShift, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2612
		{
			sqlVAL.expr = &ComparisonExpr{Operator: LE, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2616
		{
			sqlVAL.expr = &ComparisonExpr{Operator: GE, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2620
		{
			sqlVAL.expr = &ComparisonExpr{Operator: NE, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2624
		{
			sqlVAL.expr = &ComparisonExpr{Operator: IsDistinctFrom, Left: sqlDollar[1].expr, Right: sqlDollar[5].expr}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2628
		{
			sqlVAL.expr = &ComparisonExpr{Operator: IsNotDistinctFrom, Left: sqlDollar[1].expr, Right: sqlDollar[6].expr}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2632
		{
			sqlVAL.expr = &IsOfTypeExpr{Expr: sqlDollar[1].expr, Types: sqlDollar[5].colTypes}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:2636
		{
			sqlVAL.expr = &IsOfTypeExpr{Not: true, Expr: sqlDollar[1].expr, Types: sqlDollar[6].colTypes}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2648
		{
			sqlVAL.expr = sqlDollar[1].qname
		}
	case 520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2653
		{
			sqlVAL.expr = ValArg(sqlDollar[1].str)
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2657
		{
			sqlVAL.expr = &ParenExpr{Expr: sqlDollar[2].expr}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2663
		{
			sqlVAL.expr = &Subquery{Select: sqlDollar[1].selectStmt}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2667
		{
			sqlVAL.expr = &Subquery{Select: sqlDollar[1].selectStmt}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2671
		{
			sqlVAL.expr = &ExistsExpr{Subquery: &Subquery{Select: sqlDollar[2].selectStmt}}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2677
		{
			sqlVAL.expr = sqlDollar[2].expr
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2681
		{
			sqlVAL.expr = sqlDollar[1].expr
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2685
		{
			sqlVAL.expr = sqlDollar[1].expr
		}
	case 530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2693
		{
			sqlVAL.expr = &FuncExpr{Name: sqlDollar[1].qname}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2697
		{
			// TODO(pmattis): Support opt_sort_clause or remove it?
			sqlVAL.expr = &FuncExpr{Name: sqlDollar[1].qname, Exprs: sqlDollar[3].exprs}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2701
		{
			unimplemented()
		}
	case 533:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:2702
		{
			unimplemented()
		}
	case 534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2703
		{
			unimplemented()
		}
	case 535:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2705
		{
			// TODO(pmattis): Support opt_sort_clause or remove it?
			sqlVAL.expr = &FuncExpr{Name: sqlDollar[1].qname, Distinct: true, Exprs: sqlDollar[4].exprs}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2710
		{
			sqlVAL.expr = &FuncExpr{Name: sqlDollar[1].qname, Exprs: Exprs{StarExpr()}}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2723
		{
			// TODO(pmattis): Support within_group_clause, filter_clause and
			// over_clause?
			sqlVAL.expr = sqlDollar[1].expr
		}
	case 538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2729
		{
			sqlVAL.expr = sqlDollar[1].expr
		}
	case 539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2738
		{
			unimplemented()
		}
	case 540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2739
		{
			unimplemented()
		}
	case 541:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2743
		{
			unimplemented()
		}
	case 542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2745
		{
			sqlVAL.expr = &FuncExpr{Name: &QualifiedName{Base: Name(sqlDollar[1].str)}}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2749
		{
			sqlVAL.expr = &FuncExpr{Name: &QualifiedName{Base: Name(sqlDollar[1].str)}}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2752
		{
			unimplemented()
		}
	case 545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2753
		{
			unimplemented()
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2754
		{
			unimplemented()
		}
	case 547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2755
		{
			unimplemented()
		}
	case 548:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2757
		{
			sqlVAL.expr = &CastExpr{Expr: sqlDollar[3].expr, Type: sqlDollar[5].colType}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2761
		{
			sqlVAL.expr = &FuncExpr{Name: &QualifiedName{Base: Name(sqlDollar[1].str)}, Exprs: sqlDollar[3].exprs}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2764
		{
			unimplemented()
		}
	case 551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2765
		{
			unimplemented()
		}
	case 552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2766
		{
			unimplemented()
		}
	case 553:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2767
		{
			unimplemented()
		}
	case 554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2768
		{
			unimplemented()
		}
	case 555:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2769
		{
			unimplemented()
		}
	case 556:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2770
		{
			unimplemented()
		}
	case 557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2771
		{
			unimplemented()
		}
	case 558:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2772
		{
			unimplemented()
		}
	case 559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2773
		{
			unimplemented()
		}
	case 560:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2774
		{
			unimplemented()
		}
	case 561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2775
		{
			unimplemented()
		}
	case 562:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2779
		{
			unimplemented()
		}
	case 563:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2780
		{
		}
	case 564:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2783
		{
			unimplemented()
		}
	case 565:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2784
		{
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2788
		{
			unimplemented()
		}
	case 567:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2789
		{
		}
	case 568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2792
		{
			unimplemented()
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2793
		{
			unimplemented()
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2796
		{
			unimplemented()
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2799
		{
			unimplemented()
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2800
		{
			unimplemented()
		}
	case 573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2801
		{
		}
	case 574:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2805
		{
			unimplemented()
		}
	case 575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2816
		{
			unimplemented()
		}
	case 576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2817
		{
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2820
		{
			unimplemented()
		}
	case 578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2821
		{
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2829
		{
			unimplemented()
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2830
		{
			unimplemented()
		}
	case 581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2831
		{
		}
	case 582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2834
		{
			unimplemented()
		}
	case 583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2835
		{
			unimplemented()
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2841
		{
			unimplemented()
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2842
		{
			unimplemented()
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2843
		{
			unimplemented()
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2844
		{
			unimplemented()
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2845
		{
			unimplemented()
		}
	case 589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2856
		{
			sqlVAL.expr = Row(sqlDollar[3].exprs)
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2860
		{
			sqlVAL.expr = Row(nil)
		}
	case 591:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2864
		{
			sqlVAL.expr = Tuple(append(sqlDollar[2].exprs, sqlDollar[4].expr))
		}
	case 592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2870
		{
			sqlVAL.expr = Row(sqlDollar[3].exprs)
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2874
		{
			sqlVAL.expr = Row(nil)
		}
	case 594:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2880
		{
			sqlVAL.expr = Tuple(append(sqlDollar[2].exprs, sqlDollar[4].expr))
		}
	case 595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2885
		{
			unimplemented()
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2886
		{
			unimplemented()
		}
	case 597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2887
		{
			unimplemented()
		}
	case 598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2890
		{
			unimplemented()
		}
	case 599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2891
		{
			unimplemented()
		}
	case 600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2892
		{
			unimplemented()
		}
	case 601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2893
		{
			unimplemented()
		}
	case 602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2894
		{
			unimplemented()
		}
	case 603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2895
		{
			unimplemented()
		}
	case 604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2896
		{
			unimplemented()
		}
	case 605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2897
		{
			unimplemented()
		}
	case 606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2898
		{
			unimplemented()
		}
	case 607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2899
		{
			unimplemented()
		}
	case 608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2900
		{
			unimplemented()
		}
	case 609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2901
		{
			unimplemented()
		}
	case 610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2902
		{
			unimplemented()
		}
	case 611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2903
		{
			unimplemented()
		}
	case 612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2904
		{
			unimplemented()
		}
	case 613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2905
		{
			unimplemented()
		}
	case 614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2908
		{
			unimplemented()
		}
	case 615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2909
		{
			unimplemented()
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2910
		{
			unimplemented()
		}
	case 617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2921
		{
			sqlVAL.exprs = Exprs{sqlDollar[1].expr}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2925
		{
			sqlVAL.exprs = append(sqlDollar[1].exprs, sqlDollar[3].expr)
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2931
		{
			sqlVAL.colTypes = []ColumnType{sqlDollar[1].colType}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2935
		{
			sqlVAL.colTypes = append(sqlDollar[1].colTypes, sqlDollar[3].colType)
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2941
		{
			sqlVAL.expr = Array(sqlDollar[2].exprs)
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2945
		{
			sqlVAL.expr = Array(sqlDollar[2].exprs)
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2949
		{
			sqlVAL.expr = Array(nil)
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2955
		{
			sqlVAL.exprs = Exprs{sqlDollar[1].expr}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2959
		{
			sqlVAL.exprs = append(sqlDollar[1].exprs, sqlDollar[3].expr)
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2965
		{
			sqlVAL.exprs = Exprs{DString(sqlDollar[1].str), sqlDollar[3].expr}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2986
		{
			unimplemented()
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2987
		{
			unimplemented()
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2990
		{
			unimplemented()
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2994
		{
			unimplemented()
		}
	case 638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2995
		{
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3009
		{
			unimplemented()
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3010
		{
			unimplemented()
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3011
		{
			unimplemented()
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3012
		{
			unimplemented()
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3013
		{
			unimplemented()
		}
	case 644:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3014
		{
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3017
		{
			unimplemented()
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3020
		{
			unimplemented()
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3023
		{
			unimplemented()
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3024
		{
			unimplemented()
		}
	case 649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3025
		{
			unimplemented()
		}
	case 650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3029
		{
			sqlVAL.expr = &Subquery{Select: sqlDollar[1].selectStmt}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3033
		{
			sqlVAL.expr = Tuple(sqlDollar[2].exprs)
		}
	case 652:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:3044
		{
			sqlVAL.expr = &CaseExpr{Expr: sqlDollar[2].expr, Whens: sqlDollar[3].whens, Else: sqlDollar[4].expr}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3051
		{
			sqlVAL.whens = []*When{sqlDollar[1].when}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3055
		{
			sqlVAL.whens = append(sqlDollar[1].whens, sqlDollar[2].when)
		}
	case 655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3061
		{
			sqlVAL.when = &When{Cond: sqlDollar[2].expr, Val: sqlDollar[4].expr}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3067
		{
			sqlVAL.expr = sqlDollar[2].expr
		}
	case 657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3071
		{
			sqlVAL.expr = nil
		}
	case 659:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3078
		{
			sqlVAL.expr = nil
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3084
		{
			sqlVAL.indirectElem = NameIndirection(sqlDollar[2].str)
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3088
		{
			sqlVAL.indirectElem = qualifiedStar
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3092
		{
			sqlVAL.indirectElem = IndexIndirection(sqlDollar[2].str)
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3096
		{
			sqlVAL.indirectElem = &ArrayIndirection{Begin: sqlDollar[2].expr}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:3100
		{
			sqlVAL.indirectElem = &ArrayIndirection{Begin: sqlDollar[2].expr, End: sqlDollar[4].expr}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3106
		{
			sqlVAL.indirect = Indirection{sqlDollar[1].indirectElem}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3110
		{
			sqlVAL.indirect = append(sqlDollar[1].indirect, sqlDollar[2].indirectElem)
		}
	case 667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3115
		{
		}
	case 668:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3116
		{
		}
	case 670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3125
		{
			sqlVAL.expr = nil
		}
	case 671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3131
		{
			sqlVAL.exprs = []Expr{sqlDollar[1].expr}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3135
		{
			sqlVAL.exprs = append(sqlDollar[1].exprs, sqlDollar[3].expr)
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3144
		{
			sqlVAL.exprs = sqlDollar[2].exprs
		}
	case 675:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3152
		{
			sqlVAL.selExprs = nil
		}
	case 676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3158
		{
			sqlVAL.selExprs = SelectExprs{sqlDollar[1].selExpr}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3162
		{
			sqlVAL.selExprs = append(sqlDollar[1].selExprs, sqlDollar[3].selExpr)
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3168
		{
			sqlVAL.selExpr = SelectExpr{Expr: sqlDollar[1].expr, As: Name(sqlDollar[3].str)}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3177
		{
			sqlVAL.selExpr = SelectExpr{Expr: sqlDollar[1].expr, As: Name(sqlDollar[2].str)}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3181
		{
			sqlVAL.selExpr = SelectExpr{Expr: sqlDollar[1].expr}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3185
		{
			sqlVAL.selExpr = StarSelectExpr()
		}
	case 682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3193
		{
			sqlVAL.qnames = QualifiedNames{sqlDollar[1].qname}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3197
		{
			sqlVAL.qnames = append(sqlDollar[1].qnames, sqlDollar[3].qname)
		}
	case 684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3208
		{
			sqlVAL.qname = &QualifiedName{Base: Name(sqlDollar[1].str)}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3212
		{
			sqlVAL.qname = &QualifiedName{Base: Name(sqlDollar[1].str), Indirect: sqlDollar[2].indirect}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3218
		{
			sqlVAL.strs = []string{sqlDollar[1].str}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3222
		{
			sqlVAL.strs = append(sqlDollar[1].strs, sqlDollar[3].str)
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3228
		{
			sqlVAL.strs = sqlDollar[2].strs
		}
	case 689:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3231
		{
		}
	case 690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3241
		{
			sqlVAL.qname = &QualifiedName{Base: Name(sqlDollar[1].str)}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3245
		{
			sqlVAL.qname = &QualifiedName{Base: Name(sqlDollar[1].str), Indirect: sqlDollar[2].indirect}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3252
		{
			sqlVAL.expr = IntVal(sqlDollar[1].ival)
		}
	case 693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3256
		{
			sqlVAL.expr = NumVal(sqlDollar[1].str)
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3260
		{
			sqlVAL.expr = DString(sqlDollar[1].str)
		}
	case 695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3264
		{
			sqlVAL.expr = DBytes(sqlDollar[1].str)
		}
	case 696:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:3267
		{
			unimplemented()
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3269
		{
			sqlVAL.expr = &CastExpr{Expr: DString(sqlDollar[2].str), Type: sqlDollar[1].colType}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3273
		{
			// TODO(pmattis): support opt_interval?
			sqlVAL.expr = &CastExpr{Expr: DString(sqlDollar[2].str), Type: sqlDollar[1].colType}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:3278
		{
			// TODO(pmattis): Support the precision specification?
			sqlVAL.expr = &CastExpr{Expr: DString(sqlDollar[5].str), Type: sqlDollar[1].colType}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3283
		{
			sqlVAL.expr = DBool(true)
		}
	case 701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3287
		{
			sqlVAL.expr = DBool(false)
		}
	case 702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3291
		{
			sqlVAL.expr = DNull
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3298
		{
			sqlVAL.ival = +sqlDollar[2].ival
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3302
		{
			sqlVAL.ival = -sqlDollar[2].ival
		}
	case 710:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3324
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
