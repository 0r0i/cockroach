// Code generated by go yacc.
//line sql.y:22
package parser

import __yyfmt__ "fmt"

//line sql.y:22
import "github.com/cockroachdb/cockroach/sql/privilege"

//line sql.y:26
type sqlSymType struct {
	yys            int
	id             int
	pos            int
	empty          struct{}
	ival           int64
	boolVal        bool
	str            string
	strs           []string
	qname          *QualifiedName
	qnames         QualifiedNames
	indirectElem   IndirectionElem
	indirect       Indirection
	stmt           Statement
	stmts          []Statement
	selectStmt     SelectStatement
	colDef         *ColumnTableDef
	constraintDef  ConstraintTableDef
	tblDef         TableDef
	tblDefs        []TableDef
	colConstraint  ColumnConstraint
	colConstraints []ColumnConstraint
	colType        ColumnType
	colTypes       []ColumnType
	expr           Expr
	exprs          Exprs
	selExpr        SelectExpr
	selExprs       SelectExprs
	tblExpr        TableExpr
	tblExprs       TableExprs
	joinCond       JoinCond
	when           *When
	whens          []*When
	updateExpr     *UpdateExpr
	updateExprs    []*UpdateExpr
	limit          *Limit
	targetList     TargetList
	targetListPtr  *TargetList
	privilegeType  privilege.Kind
	privilegeList  privilege.List
	orderBy        OrderBy
	orders         []*Order
	order          *Order
	dir            Direction
	alterTableCmd  AlterTableCmd
	alterTableCmds AlterTableCmds
	isoLevel       IsolationLevel
}

const IDENT = 57346
const FCONST = 57347
const SCONST = 57348
const BCONST = 57349
const ICONST = 57350
const PARAM = 57351
const TYPECAST = 57352
const DOT_DOT = 57353
const LESS_EQUALS = 57354
const GREATER_EQUALS = 57355
const NOT_EQUALS = 57356
const ERROR = 57357
const ABSOLUTE = 57358
const ACCESS = 57359
const ACTION = 57360
const ADD = 57361
const ADMIN = 57362
const AFTER = 57363
const AGGREGATE = 57364
const ALL = 57365
const ALSO = 57366
const ALTER = 57367
const ALWAYS = 57368
const ANALYSE = 57369
const ANALYZE = 57370
const AND = 57371
const ANY = 57372
const ARRAY = 57373
const AS = 57374
const ASC = 57375
const ASSERTION = 57376
const ASSIGNMENT = 57377
const ASYMMETRIC = 57378
const AT = 57379
const ATTRIBUTE = 57380
const AUTHORIZATION = 57381
const BACKWARD = 57382
const BEFORE = 57383
const BEGIN = 57384
const BETWEEN = 57385
const BIGINT = 57386
const BINARY = 57387
const BIT = 57388
const BLOB = 57389
const BOOL = 57390
const BOOLEAN = 57391
const BOTH = 57392
const BY = 57393
const BYTES = 57394
const CACHE = 57395
const CALLED = 57396
const CASCADE = 57397
const CASCADED = 57398
const CASE = 57399
const CAST = 57400
const CHAIN = 57401
const CHAR = 57402
const CHARACTER = 57403
const CHARACTERISTICS = 57404
const CHECK = 57405
const CHECKPOINT = 57406
const CLASS = 57407
const CLOSE = 57408
const CLUSTER = 57409
const COALESCE = 57410
const COLLATE = 57411
const COLLATION = 57412
const COLUMN = 57413
const COLUMNS = 57414
const COMMENT = 57415
const COMMENTS = 57416
const COMMIT = 57417
const COMMITTED = 57418
const CONCAT = 57419
const CONCURRENTLY = 57420
const CONFIGURATION = 57421
const CONFLICT = 57422
const CONNECTION = 57423
const CONSTRAINT = 57424
const CONSTRAINTS = 57425
const CONTENT = 57426
const CONTINUE = 57427
const CONVERSION = 57428
const COPY = 57429
const COST = 57430
const COVERING = 57431
const CREATE = 57432
const CROSS = 57433
const CSV = 57434
const CUBE = 57435
const CURRENT = 57436
const CURRENT_CATALOG = 57437
const CURRENT_DATE = 57438
const CURRENT_ROLE = 57439
const CURRENT_TIME = 57440
const CURRENT_TIMESTAMP = 57441
const CURRENT_USER = 57442
const CURSOR = 57443
const CYCLE = 57444
const DATA = 57445
const DATABASE = 57446
const DATABASES = 57447
const DATE = 57448
const DAY = 57449
const DEALLOCATE = 57450
const DEC = 57451
const DECIMAL = 57452
const DECLARE = 57453
const DEFAULT = 57454
const DEFAULTS = 57455
const DEFERRABLE = 57456
const DEFERRED = 57457
const DEFINER = 57458
const DELETE = 57459
const DELIMITER = 57460
const DELIMITERS = 57461
const DESC = 57462
const DICTIONARY = 57463
const DISABLE = 57464
const DISCARD = 57465
const DISTINCT = 57466
const DO = 57467
const DOMAIN = 57468
const DOUBLE = 57469
const DROP = 57470
const EACH = 57471
const ELSE = 57472
const ENABLE = 57473
const ENCODING = 57474
const ENCRYPTED = 57475
const END = 57476
const ENUM = 57477
const ESCAPE = 57478
const EVENT = 57479
const EXCEPT = 57480
const EXCLUSIVE = 57481
const EXECUTE = 57482
const EXISTS = 57483
const EXPLAIN = 57484
const EXTENSION = 57485
const EXTERNAL = 57486
const EXTRACT = 57487
const FALSE = 57488
const FAMILY = 57489
const FETCH = 57490
const FILTER = 57491
const FIRST = 57492
const FLOAT = 57493
const FOLLOWING = 57494
const FOR = 57495
const FORCE = 57496
const FOREIGN = 57497
const FORWARD = 57498
const FREEZE = 57499
const FROM = 57500
const FULL = 57501
const FUNCTION = 57502
const FUNCTIONS = 57503
const GLOBAL = 57504
const GRANT = 57505
const GRANTED = 57506
const GRANTS = 57507
const GREATEST = 57508
const GROUP = 57509
const GROUPING = 57510
const HANDLER = 57511
const HAVING = 57512
const HEADER = 57513
const HOLD = 57514
const HOUR = 57515
const IDENTITY = 57516
const IF = 57517
const IMMEDIATE = 57518
const IMMUTABLE = 57519
const IMPLICIT = 57520
const IMPORT = 57521
const IN = 57522
const INCLUDING = 57523
const INCREMENT = 57524
const INDEX = 57525
const INDEXES = 57526
const INHERIT = 57527
const INHERITS = 57528
const INITIALLY = 57529
const INLINE = 57530
const INNER = 57531
const INOUT = 57532
const INPUT = 57533
const INSENSITIVE = 57534
const INSERT = 57535
const INSTEAD = 57536
const INT = 57537
const INT64 = 57538
const INTEGER = 57539
const INTERSECT = 57540
const INTERVAL = 57541
const INTO = 57542
const INVOKER = 57543
const IS = 57544
const ISOLATION = 57545
const JOIN = 57546
const KEY = 57547
const LABEL = 57548
const LANGUAGE = 57549
const LARGE = 57550
const LAST = 57551
const LATERAL = 57552
const LEADING = 57553
const LEAKPROOF = 57554
const LEAST = 57555
const LEFT = 57556
const LEVEL = 57557
const LIKE = 57558
const LIMIT = 57559
const LISTEN = 57560
const LOAD = 57561
const LOCAL = 57562
const LOCALTIME = 57563
const LOCALTIMESTAMP = 57564
const LOCATION = 57565
const LOCK = 57566
const LOCKED = 57567
const LOGGED = 57568
const LSHIFT = 57569
const MAPPING = 57570
const MATCH = 57571
const MATERIALIZED = 57572
const MAXVALUE = 57573
const MINUTE = 57574
const MINVALUE = 57575
const MODE = 57576
const MONTH = 57577
const MOVE = 57578
const NAME = 57579
const NAMES = 57580
const NATIONAL = 57581
const NATURAL = 57582
const NCHAR = 57583
const NEXT = 57584
const NO = 57585
const NONE = 57586
const NOT = 57587
const NOTHING = 57588
const NOTIFY = 57589
const NOWAIT = 57590
const NULL = 57591
const NULLIF = 57592
const NULLS = 57593
const NUMERIC = 57594
const OBJECT = 57595
const OF = 57596
const OFF = 57597
const OFFSET = 57598
const OIDS = 57599
const ON = 57600
const ONLY = 57601
const OPTION = 57602
const OPTIONS = 57603
const OR = 57604
const ORDER = 57605
const ORDINALITY = 57606
const OUT = 57607
const OUTER = 57608
const OVER = 57609
const OVERLAPS = 57610
const OVERLAY = 57611
const OWNED = 57612
const OWNER = 57613
const PARSER = 57614
const PARTIAL = 57615
const PARTITION = 57616
const PASSING = 57617
const PASSWORD = 57618
const PLACING = 57619
const PLANS = 57620
const POLICY = 57621
const POSITION = 57622
const PRECEDING = 57623
const PRECISION = 57624
const PRESERVE = 57625
const PREPARE = 57626
const PREPARED = 57627
const PRIMARY = 57628
const PRIOR = 57629
const PRIVILEGES = 57630
const PROCEDURAL = 57631
const PROCEDURE = 57632
const PROGRAM = 57633
const QUOTE = 57634
const RANGE = 57635
const READ = 57636
const REAL = 57637
const REASSIGN = 57638
const RECHECK = 57639
const RECURSIVE = 57640
const REF = 57641
const REFERENCES = 57642
const REFRESH = 57643
const REINDEX = 57644
const RELATIVE = 57645
const RELEASE = 57646
const RENAME = 57647
const REPEATABLE = 57648
const REPLACE = 57649
const REPLICA = 57650
const RESET = 57651
const RESTART = 57652
const RESTRICT = 57653
const RETURNING = 57654
const RETURNS = 57655
const REVOKE = 57656
const RIGHT = 57657
const ROLLBACK = 57658
const ROLLUP = 57659
const ROW = 57660
const ROWS = 57661
const RSHIFT = 57662
const RULE = 57663
const SCROLL = 57664
const SEARCH = 57665
const SECOND = 57666
const SECURITY = 57667
const SELECT = 57668
const SEQUENCE = 57669
const SEQUENCES = 57670
const SERIALIZABLE = 57671
const SERVER = 57672
const SESSION = 57673
const SESSION_USER = 57674
const SET = 57675
const SETS = 57676
const SHARE = 57677
const SHOW = 57678
const SIMILAR = 57679
const SIMPLE = 57680
const SKIP = 57681
const SMALLINT = 57682
const SNAPSHOT = 57683
const SOME = 57684
const SQL = 57685
const STABLE = 57686
const STANDALONE = 57687
const STATEMENT = 57688
const STATISTICS = 57689
const STDIN = 57690
const STDOUT = 57691
const STRICT = 57692
const STRING = 57693
const STRIP = 57694
const STORING = 57695
const SUBSTRING = 57696
const SYMMETRIC = 57697
const SYSID = 57698
const SYSTEM = 57699
const TABLE = 57700
const TABLES = 57701
const TEXT = 57702
const THEN = 57703
const TIME = 57704
const TIMESTAMP = 57705
const TO = 57706
const TRAILING = 57707
const TRANSACTION = 57708
const TRANSFORM = 57709
const TREAT = 57710
const TRIGGER = 57711
const TRIM = 57712
const TRUE = 57713
const TRUNCATE = 57714
const TRUSTED = 57715
const TYPE = 57716
const TYPES = 57717
const UNBOUNDED = 57718
const UNCOMMITTED = 57719
const UNENCRYPTED = 57720
const UNION = 57721
const UNIQUE = 57722
const UNKNOWN = 57723
const UNLISTEN = 57724
const UNLOGGED = 57725
const UNTIL = 57726
const UPDATE = 57727
const USER = 57728
const USING = 57729
const VACUUM = 57730
const VALID = 57731
const VALIDATE = 57732
const VALUE = 57733
const VALUES = 57734
const VARCHAR = 57735
const VARIADIC = 57736
const VARYING = 57737
const VERBOSE = 57738
const VERSION = 57739
const WHEN = 57740
const WHERE = 57741
const WINDOW = 57742
const WITH = 57743
const WITHIN = 57744
const WITHOUT = 57745
const WRAPPER = 57746
const WRITE = 57747
const YEAR = 57748
const YES = 57749
const ZONE = 57750
const NOT_LA = 57751
const NULLS_LA = 57752
const WITH_LA = 57753
const POSTFIXOP = 57754
const UMINUS = 57755

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"FCONST",
	"SCONST",
	"BCONST",
	"ICONST",
	"PARAM",
	"TYPECAST",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"ERROR",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALSO",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"ANY",
	"ARRAY",
	"AS",
	"ASC",
	"ASSERTION",
	"ASSIGNMENT",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BINARY",
	"BIT",
	"BLOB",
	"BOOL",
	"BOOLEAN",
	"BOTH",
	"BY",
	"BYTES",
	"CACHE",
	"CALLED",
	"CASCADE",
	"CASCADED",
	"CASE",
	"CAST",
	"CHAIN",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CHECKPOINT",
	"CLASS",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTENT",
	"CONTINUE",
	"CONVERSION",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEALLOCATE",
	"DEC",
	"DECIMAL",
	"DECLARE",
	"DEFAULT",
	"DEFAULTS",
	"DEFERRABLE",
	"DEFERRED",
	"DEFINER",
	"DELETE",
	"DELIMITER",
	"DELIMITERS",
	"DESC",
	"DICTIONARY",
	"DISABLE",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"EACH",
	"ELSE",
	"ENABLE",
	"ENCODING",
	"ENCRYPTED",
	"END",
	"ENUM",
	"ESCAPE",
	"EVENT",
	"EXCEPT",
	"EXCLUSIVE",
	"EXECUTE",
	"EXISTS",
	"EXPLAIN",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GLOBAL",
	"GRANT",
	"GRANTED",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"HANDLER",
	"HAVING",
	"HEADER",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPLICIT",
	"IMPORT",
	"IN",
	"INCLUDING",
	"INCREMENT",
	"INDEX",
	"INDEXES",
	"INHERIT",
	"INHERITS",
	"INITIALLY",
	"INLINE",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INSTEAD",
	"INT",
	"INT64",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVOKER",
	"IS",
	"ISOLATION",
	"JOIN",
	"KEY",
	"LABEL",
	"LANGUAGE",
	"LARGE",
	"LAST",
	"LATERAL",
	"LEADING",
	"LEAKPROOF",
	"LEAST",
	"LEFT",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LISTEN",
	"LOAD",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCATION",
	"LOCK",
	"LOCKED",
	"LOGGED",
	"LSHIFT",
	"MAPPING",
	"MATCH",
	"MATERIALIZED",
	"MAXVALUE",
	"MINUTE",
	"MINVALUE",
	"MODE",
	"MONTH",
	"MOVE",
	"NAME",
	"NAMES",
	"NATIONAL",
	"NATURAL",
	"NCHAR",
	"NEXT",
	"NO",
	"NONE",
	"NOT",
	"NOTHING",
	"NOTIFY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OBJECT",
	"OF",
	"OFF",
	"OFFSET",
	"OIDS",
	"ON",
	"ONLY",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"PARSER",
	"PARTIAL",
	"PARTITION",
	"PASSING",
	"PASSWORD",
	"PLACING",
	"PLANS",
	"POLICY",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PRESERVE",
	"PREPARE",
	"PREPARED",
	"PRIMARY",
	"PRIOR",
	"PRIVILEGES",
	"PROCEDURAL",
	"PROCEDURE",
	"PROGRAM",
	"QUOTE",
	"RANGE",
	"READ",
	"REAL",
	"REASSIGN",
	"RECHECK",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REINDEX",
	"RELATIVE",
	"RELEASE",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICA",
	"RESET",
	"RESTART",
	"RESTRICT",
	"RETURNING",
	"RETURNS",
	"REVOKE",
	"RIGHT",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"SCROLL",
	"SEARCH",
	"SECOND",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSION_USER",
	"SET",
	"SETS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SNAPSHOT",
	"SOME",
	"SQL",
	"STABLE",
	"STANDALONE",
	"STATEMENT",
	"STATISTICS",
	"STDIN",
	"STDOUT",
	"STRICT",
	"STRING",
	"STRIP",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYSID",
	"SYSTEM",
	"TABLE",
	"TABLES",
	"TEXT",
	"THEN",
	"TIME",
	"TIMESTAMP",
	"TO",
	"TRAILING",
	"TRANSACTION",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNENCRYPTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNTIL",
	"UPDATE",
	"USER",
	"USING",
	"VACUUM",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARCHAR",
	"VARIADIC",
	"VARYING",
	"VERBOSE",
	"VERSION",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WRAPPER",
	"WRITE",
	"YEAR",
	"YES",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"'<'",
	"'>'",
	"'='",
	"POSTFIXOP",
	"'|'",
	"'^'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"UMINUS",
	"'~'",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"';'",
	"','",
	"'@'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlMaxDepth = 200

//line sql.y:3795

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 19,
	432, 19,
	-2, 291,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 29,
	1, 262,
	258, 262,
	430, 262,
	432, 262,
	-2, 272,
	-1, 38,
	1, 265,
	258, 265,
	430, 265,
	432, 265,
	-2, 271,
	-1, 47,
	1, 19,
	432, 19,
	-2, 291,
	-1, 84,
	1, 129,
	432, 129,
	-2, 868,
	-1, 395,
	148, 302,
	217, 302,
	256, 302,
	-2, 268,
	-1, 398,
	148, 301,
	217, 301,
	256, 301,
	-2, 266,
	-1, 504,
	148, 301,
	217, 301,
	256, 301,
	-2, 269,
	-1, 563,
	429, 723,
	-2, 718,
	-1, 564,
	429, 724,
	-2, 719,
	-1, 570,
	6, 431,
	429, 431,
	-2, 1003,
	-1, 590,
	6, 401,
	-2, 983,
	-1, 591,
	6, 428,
	429, 428,
	-2, 984,
	-1, 592,
	6, 409,
	-2, 985,
	-1, 593,
	6, 408,
	-2, 986,
	-1, 594,
	6, 428,
	429, 428,
	-2, 988,
	-1, 595,
	6, 428,
	429, 428,
	-2, 989,
	-1, 596,
	6, 429,
	-2, 991,
	-1, 597,
	6, 396,
	-2, 992,
	-1, 598,
	6, 396,
	-2, 993,
	-1, 599,
	6, 411,
	-2, 996,
	-1, 600,
	6, 397,
	-2, 1000,
	-1, 601,
	6, 398,
	-2, 1001,
	-1, 602,
	6, 399,
	-2, 1002,
	-1, 603,
	6, 396,
	-2, 1009,
	-1, 604,
	6, 402,
	-2, 1014,
	-1, 605,
	6, 400,
	-2, 1016,
	-1, 606,
	6, 430,
	-2, 1020,
	-1, 607,
	6, 426,
	429, 426,
	-2, 1024,
	-1, 855,
	138, 272,
	148, 272,
	198, 272,
	217, 272,
	256, 272,
	263, 272,
	379, 272,
	-2, 536,
	-1, 863,
	429, 703,
	-2, 697,
	-1, 1050,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 464,
	-1, 1051,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 465,
	-1, 1052,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 466,
	-1, 1056,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 470,
	-1, 1057,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 471,
	-1, 1058,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 472,
	-1, 1061,
	43, 0,
	180, 0,
	216, 0,
	337, 0,
	409, 0,
	-2, 477,
	-1, 1096,
	268, 602,
	-2, 605,
	-1, 1243,
	138, 272,
	148, 272,
	198, 272,
	217, 272,
	256, 272,
	263, 272,
	379, 272,
	-2, 354,
	-1, 1251,
	43, 0,
	180, 0,
	216, 0,
	337, 0,
	409, 0,
	-2, 478,
	-1, 1256,
	43, 0,
	180, 0,
	216, 0,
	337, 0,
	409, 0,
	-2, 479,
	-1, 1277,
	268, 601,
	-2, 604,
	-1, 1416,
	43, 0,
	180, 0,
	216, 0,
	337, 0,
	409, 0,
	-2, 480,
	-1, 1421,
	202, 0,
	-2, 490,
	-1, 1431,
	268, 603,
	-2, 606,
	-1, 1471,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 517,
	-1, 1472,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 518,
	-1, 1473,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 519,
	-1, 1477,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 523,
	-1, 1478,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 524,
	-1, 1479,
	12, 0,
	13, 0,
	14, 0,
	412, 0,
	413, 0,
	414, 0,
	-2, 525,
	-1, 1574,
	202, 0,
	-2, 491,
	-1, 1578,
	43, 0,
	180, 0,
	216, 0,
	337, 0,
	409, 0,
	-2, 494,
	-1, 1579,
	43, 0,
	180, 0,
	216, 0,
	337, 0,
	409, 0,
	-2, 496,
	-1, 1659,
	43, 0,
	180, 0,
	216, 0,
	337, 0,
	409, 0,
	-2, 495,
	-1, 1660,
	43, 0,
	180, 0,
	216, 0,
	337, 0,
	409, 0,
	-2, 497,
	-1, 1668,
	202, 0,
	-2, 526,
	-1, 1705,
	202, 0,
	-2, 527,
	-1, 1749,
	43, 0,
	216, 0,
	337, 0,
	409, 0,
	-2, 982,
}

const sqlNprod = 1121
const sqlPrivate = 57344

var sqlTokenNames []string
var sqlStates []string

const sqlLast = 28691

var sqlAct = [...]int{

	1093, 1731, 1748, 1769, 931, 1614, 1732, 1709, 1733, 1747,
	1675, 991, 938, 399, 562, 1541, 561, 554, 1451, 1554,
	1647, 1560, 426, 621, 1639, 1507, 556, 537, 610, 1422,
	1149, 1542, 974, 999, 1550, 1335, 1239, 1334, 858, 971,
	404, 28, 1396, 1109, 85, 1280, 1423, 860, 1405, 1231,
	973, 787, 626, 908, 917, 939, 1227, 647, 13, 1077,
	1113, 1146, 1074, 1242, 885, 1002, 28, 1103, 806, 889,
	406, 37, 987, 423, 968, 656, 423, 665, 432, 89,
	631, 423, 18, 10, 60, 398, 6, 629, 28, 812,
	692, 535, 526, 675, 676, 446, 37, 976, 58, 440,
	439, 440, 409, 507, 609, 506, 82, 667, 62, 61,
	663, 67, 63, 38, 1000, 39, 1641, 1106, 37, 508,
	624, 608, 624, 519, 622, 649, 622, 623, 436, 623,
	932, 1745, 1739, 403, 1638, 995, 649, 1738, 403, 450,
	995, 936, 1730, 655, 1725, 1577, 1707, 995, 1273, 1577,
	813, 396, 1701, 395, 447, 995, 813, 443, 569, 612,
	422, 43, 1688, 429, 1196, 995, 1685, 815, 437, 1638,
	1661, 1656, 1637, 1577, 995, 1638, 1634, 1619, 1697, 995,
	995, 451, 1618, 1107, 1601, 995, 1581, 1273, 1576, 1273,
	1649, 1577, 1517, 45, 817, 995, 1426, 1384, 1380, 1273,
	952, 952, 1355, 1350, 810, 1273, 1351, 1348, 1347, 1346,
	1273, 1273, 1273, 1277, 1275, 1274, 1273, 43, 996, 1276,
	1273, 995, 905, 1484, 1430, 904, 816, 46, 653, 1209,
	906, 654, 1229, 1211, 995, 952, 41, 648, 1089, 990,
	961, 814, 1108, 520, 472, 1105, 42, 421, 43, 45,
	47, 691, 486, 1746, 1744, 1702, 611, 678, 1636, 1604,
	1602, 1594, 1593, 1588, 40, 1213, 1587, 1586, 1585, 1571,
	1497, 1534, 1494, 1493, 1492, 1434, 1411, 1395, 1385, 1353,
	45, 1352, 1342, 46, 1333, 1306, 1303, 1301, 1290, 1284,
	1210, 1160, 41, 1086, 965, 815, 866, 519, 518, 525,
	1676, 1453, 42, 1279, 1536, 1696, 1677, 1670, 1273, 1652,
	1644, 1633, 1611, 566, 46, 1599, 1565, 1539, 1420, 1569,
	59, 1410, 817, 1391, 1390, 1388, 1366, 1365, 1332, 1298,
	1297, 1289, 1270, 1269, 1110, 1264, 1079, 890, 893, 1174,
	1173, 1154, 1118, 994, 897, 895, 883, 882, 881, 880,
	879, 40, 878, 877, 816, 43, 815, 876, 833, 834,
	835, 875, 874, 873, 864, 862, 40, 785, 427, 523,
	1658, 1657, 861, 1413, 1412, 836, 1307, 617, 1197, 480,
	1250, 650, 493, 817, 831, 481, 815, 45, 871, 842,
	1551, 1307, 650, 932, 1454, 1114, 886, 815, 1193, 1715,
	1684, 1758, 1525, 386, 1087, 1627, 1293, 1626, 51, 505,
	1204, 1759, 1378, 817, 918, 816, 1104, 423, 527, 527,
	632, 46, 1106, 830, 817, 1196, 633, 910, 627, 1358,
	41, 814, 476, 1357, 1040, 1288, 499, 407, 1377, 1249,
	42, 504, 1533, 1287, 616, 816, 815, 393, 833, 834,
	835, 1286, 618, 830, 1307, 1285, 816, 1252, 935, 1066,
	951, 929, 423, 642, 620, 836, 928, 512, 390, 1735,
	1368, 1616, 55, 817, 624, 49, 1717, 832, 622, 842,
	416, 623, 643, 1110, 52, 1766, 910, 1076, 1107, 1727,
	1443, 988, 989, 1188, 685, 673, 684, 909, 678, 659,
	529, 659, 638, 648, 498, 816, 921, 637, 686, 957,
	795, 1174, 800, 830, 784, 1728, 649, 659, 807, 1678,
	396, 958, 395, 1205, 1076, 1765, 843, 884, 1666, 634,
	853, 848, 849, 850, 851, 852, 402, 1307, 1296, 1683,
	1406, 856, 403, 1393, 960, 1734, 1083, 1108, 841, 437,
	1105, 57, 511, 1081, 50, 783, 959, 1757, 450, 450,
	1755, 869, 838, 640, 564, 1549, 695, 1191, 1621, 1480,
	980, 857, 510, 831, 823, 824, 825, 818, 819, 820,
	821, 822, 1110, 1736, 660, 478, 1132, 615, 863, 687,
	680, 1440, 1597, 1321, 776, 88, 401, 780, 489, 781,
	451, 451, 688, 831, 1779, 473, 88, 88, 696, 1620,
	88, 791, 793, 88, 88, 88, 843, 661, 88, 88,
	88, 88, 471, 808, 449, 903, 396, 792, 802, 396,
	396, 803, 804, 779, 1609, 479, 1524, 920, 841, 1110,
	1360, 509, 88, 88, 899, 1523, 1439, 898, 1737, 1168,
	1441, 981, 838, 790, 1764, 786, 1710, 782, 510, 887,
	888, 403, 662, 831, 423, 911, 832, 930, 891, 679,
	986, 942, 1610, 894, 1114, 1369, 53, 1176, 985, 1758,
	511, 1521, 28, 840, 1175, 659, 1322, 922, 924, 690,
	1481, 440, 477, 946, 28, 1563, 832, 440, 837, 1482,
	934, 391, 695, 695, 896, 818, 819, 820, 821, 822,
	689, 1203, 60, 900, 902, 1401, 1400, 966, 614, 867,
	1375, 1104, 1598, 394, 37, 494, 56, 509, 435, 48,
	914, 919, 401, 953, 450, 1617, 62, 61, 1307, 1568,
	63, 1778, 1110, 501, 696, 696, 1397, 945, 815, 447,
	950, 927, 949, 948, 1321, 839, 832, 1228, 827, 828,
	829, 1117, 826, 823, 824, 825, 818, 819, 820, 821,
	822, 695, 650, 840, 1669, 817, 451, 400, 1522, 907,
	1596, 815, 967, 1313, 1314, 1315, 1308, 1309, 1310, 1311,
	1312, 635, 826, 823, 824, 825, 818, 819, 820, 821,
	822, 1308, 1309, 1310, 1311, 1312, 1254, 816, 817, 820,
	821, 822, 423, 696, 1520, 527, 1336, 997, 496, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
	1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061,
	816, 423, 1011, 1075, 1030, 839, 521, 1322, 827, 828,
	829, 798, 826, 823, 824, 825, 818, 819, 820, 821,
	822, 1039, 1005, 954, 1161, 1082, 1310, 1311, 1312, 515,
	516, 1162, 1064, 1419, 1119, 1302, 1130, 1263, 1140, 1142,
	1147, 1150, 899, 632, 955, 813, 1337, 899, 492, 633,
	490, 984, 1090, 1095, 487, 1098, 632, 434, 872, 970,
	778, 1158, 633, 1116, 1307, 627, 1504, 1004, 1141, 1094,
	679, 674, 1151, 1152, 1153, 1373, 1371, 1359, 1216, 982,
	1029, 979, 652, 651, 646, 695, 639, 636, 1159, 1448,
	1628, 992, 1759, 1189, 483, 1165, 1084, 682, 1630, 1122,
	1772, 910, 1011, 799, 1030, 1085, 1169, 1308, 1309, 1310,
	1311, 1312, 925, 910, 88, 1321, 88, 1163, 88, 513,
	419, 926, 1171, 659, 923, 831, 1379, 696, 76, 1641,
	1680, 659, 1704, 88, 1010, 1032, 1398, 1234, 517, 3,
	1201, 1698, 937, 809, 1072, 1247, 1219, 1164, 1776, 88,
	815, 807, 634, 64, 1777, 1307, 815, 1570, 831, 88,
	88, 962, 88, 1199, 963, 634, 1070, 1237, 1215, 1065,
	1498, 1192, 801, 1446, 815, 1184, 1414, 817, 993, 1198,
	1029, 75, 1404, 1349, 1214, 963, 1200, 428, 1195, 1212,
	1202, 423, 1235, 1207, 1208, 28, 88, 1245, 88, 1206,
	484, 450, 1125, 449, 449, 1062, 474, 475, 1322, 816,
	1157, 694, 88, 1222, 88, 88, 1218, 88, 832, 1220,
	514, 420, 1156, 1251, 1238, 37, 88, 1256, 1155, 1244,
	1111, 964, 1031, 816, 1010, 1032, 1583, 1224, 1223, 1248,
	1537, 1225, 1447, 451, 865, 88, 389, 1615, 88, 385,
	1272, 832, 66, 777, 891, 488, 894, 1590, 1726, 1295,
	1281, 888, 887, 1665, 1646, 1068, 1115, 870, 1126, 1067,
	1267, 23, 1278, 1544, 1073, 1294, 1513, 542, 1271, 1299,
	1505, 1321, 1508, 387, 388, 1255, 1361, 1253, 1770, 1007,
	975, 1282, 1283, 1236, 697, 1506, 683, 672, 856, 565,
	491, 666, 1121, 613, 1147, 1147, 1147, 1315, 1308, 1309,
	1310, 1311, 1312, 567, 826, 823, 824, 825, 818, 819,
	820, 821, 822, 1356, 1008, 1514, 1063, 1127, 1331, 1185,
	1124, 568, 1031, 1292, 1363, 1009, 892, 1230, 555, 1344,
	1006, 445, 630, 940, 88, 1080, 1112, 694, 694, 1291,
	825, 818, 819, 820, 821, 822, 1771, 88, 627, 868,
	1381, 88, 541, 547, 88, 1339, 1340, 1341, 88, 546,
	88, 88, 1091, 88, 1322, 1354, 88, 88, 1773, 449,
	538, 80, 88, 88, 942, 81, 1190, 1362, 1532, 1007,
	933, 1069, 797, 983, 794, 54, 1370, 392, 1372, 1376,
	1374, 1071, 1304, 1139, 1131, 1234, 1129, 1556, 1553, 497,
	1383, 1415, 1382, 1416, 635, 625, 694, 423, 941, 1128,
	423, 524, 1387, 1399, 1421, 1389, 1402, 635, 485, 1120,
	1427, 998, 1246, 522, 1432, 1237, 805, 417, 418, 972,
	1432, 482, 956, 1403, 1407, 1408, 847, 641, 844, 495,
	1232, 1011, 1679, 1030, 1449, 1436, 1437, 1438, 1509, 1714,
	1235, 1428, 1510, 1458, 1367, 44, 1460, 17, 16, 15,
	1316, 1313, 1314, 1315, 1308, 1309, 1310, 1311, 1312, 14,
	12, 11, 1221, 9, 1433, 8, 1233, 1011, 7, 1030,
	1442, 1444, 1445, 22, 1011, 21, 1030, 1489, 1490, 1512,
	20, 1123, 1459, 88, 1455, 5, 1496, 1457, 4, 88,
	88, 2, 1, 1515, 1461, 0, 0, 0, 0, 0,
	0, 0, 0, 1485, 0, 1011, 0, 1030, 0, 1029,
	1487, 0, 0, 1488, 1495, 0, 0, 1133, 88, 1364,
	0, 88, 0, 0, 0, 1491, 0, 0, 0, 0,
	0, 0, 1503, 0, 0, 0, 0, 1499, 1552, 1555,
	0, 1236, 0, 1528, 0, 1029, 1547, 0, 1546, 1548,
	694, 0, 1029, 0, 0, 0, 0, 0, 0, 0,
	1574, 28, 0, 1010, 1032, 1578, 1579, 0, 423, 423,
	1540, 1582, 423, 1511, 1558, 1559, 1584, 0, 1564, 1535,
	0, 0, 0, 1029, 0, 0, 0, 1011, 1567, 1030,
	1575, 1589, 0, 0, 0, 1592, 0, 0, 0, 1010,
	1032, 1307, 0, 1323, 1324, 1325, 1010, 1032, 0, 0,
	0, 0, 88, 88, 88, 0, 815, 0, 88, 0,
	0, 88, 0, 0, 0, 1600, 0, 88, 88, 88,
	88, 88, 0, 88, 88, 1595, 0, 1010, 1032, 0,
	88, 0, 88, 817, 0, 0, 0, 0, 88, 0,
	0, 0, 0, 0, 0, 0, 88, 88, 0, 0,
	88, 1031, 0, 0, 1622, 1029, 449, 0, 1320, 0,
	0, 0, 0, 0, 1605, 816, 0, 1606, 0, 0,
	0, 0, 88, 1613, 88, 88, 1643, 88, 1547, 1629,
	1546, 1548, 1011, 1608, 1030, 0, 0, 1031, 856, 1631,
	88, 0, 0, 1653, 1031, 88, 88, 1513, 88, 1642,
	1518, 1519, 1623, 1659, 1660, 1133, 1133, 1645, 1007, 1010,
	1032, 1651, 1640, 0, 1624, 1625, 0, 0, 857, 0,
	0, 423, 0, 1538, 0, 1031, 0, 1654, 1664, 0,
	0, 1261, 0, 0, 1011, 0, 1030, 0, 0, 0,
	0, 0, 1674, 0, 1007, 1566, 1514, 549, 0, 0,
	0, 1007, 0, 1259, 1662, 0, 1011, 0, 1030, 1671,
	1029, 0, 0, 1673, 627, 1133, 1133, 1133, 0, 0,
	1687, 0, 0, 1689, 0, 0, 0, 0, 86, 0,
	1555, 1691, 1007, 1547, 1693, 1546, 1548, 0, 0, 410,
	410, 1265, 1266, 425, 899, 0, 425, 431, 425, 1699,
	1690, 425, 86, 441, 86, 1695, 0, 1031, 1321, 1703,
	0, 0, 1029, 0, 1010, 1032, 1692, 0, 0, 0,
	1718, 0, 0, 831, 1719, 86, 86, 1011, 0, 1030,
	1706, 0, 0, 0, 1029, 0, 1713, 0, 0, 1721,
	0, 1547, 1722, 1546, 1548, 0, 1741, 1724, 1723, 1720,
	0, 1328, 1329, 1330, 1740, 1716, 1257, 0, 1752, 1752,
	1742, 1262, 1743, 0, 1007, 1729, 1010, 1032, 1753, 88,
	1756, 1754, 0, 0, 1635, 942, 0, 1761, 1760, 1509,
	1752, 1762, 1763, 1510, 1133, 1133, 0, 0, 1010, 1032,
	0, 88, 1775, 1774, 0, 0, 0, 0, 0, 0,
	1655, 1322, 0, 0, 88, 1029, 88, 1752, 88, 1780,
	0, 88, 1031, 0, 0, 0, 832, 0, 0, 0,
	1512, 0, 0, 0, 88, 0, 0, 88, 0, 0,
	0, 0, 0, 0, 1515, 88, 543, 29, 88, 1133,
	1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133,
	1133, 1133, 1133, 1133, 1133, 1133, 1133, 0, 1133, 1010,
	1032, 0, 29, 0, 1031, 0, 0, 0, 0, 1007,
	1417, 1418, 0, 0, 397, 0, 0, 405, 1258, 0,
	0, 0, 0, 0, 29, 0, 1031, 1700, 1260, 0,
	0, 88, 0, 1317, 1318, 1319, 405, 1316, 1313, 1314,
	1315, 1308, 1309, 1310, 1311, 1312, 0, 65, 0, 1230,
	0, 1711, 1712, 0, 1511, 0, 818, 819, 820, 821,
	822, 1007, 0, 0, 0, 1462, 1463, 1464, 1465, 1466,
	1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476,
	1477, 1478, 1479, 1007, 1483, 0, 0, 0, 1307, 0,
	0, 0, 88, 88, 88, 0, 0, 1031, 0, 0,
	88, 88, 0, 0, 0, 0, 88, 0, 88, 0,
	88, 88, 88, 88, 68, 0, 0, 1234, 0, 0,
	0, 0, 0, 88, 0, 88, 0, 0, 0, 0,
	68, 0, 0, 0, 0, 88, 88, 0, 0, 88,
	815, 73, 833, 834, 835, 88, 88, 1237, 0, 0,
	0, 0, 69, 0, 1007, 1320, 0, 73, 0, 836,
	0, 0, 1232, 0, 375, 0, 0, 817, 69, 0,
	0, 0, 1235, 842, 0, 0, 0, 425, 0, 86,
	0, 502, 0, 384, 0, 1133, 0, 70, 88, 0,
	0, 0, 0, 0, 0, 0, 410, 0, 1233, 816,
	0, 0, 0, 70, 0, 0, 0, 830, 0, 0,
	0, 0, 425, 0, 0, 0, 1562, 72, 0, 0,
	0, 0, 425, 425, 0, 644, 0, 0, 0, 0,
	0, 0, 377, 72, 0, 0, 0, 0, 0, 88,
	0, 88, 0, 88, 0, 0, 0, 0, 0, 0,
	88, 0, 0, 0, 0, 0, 0, 0, 0, 425,
	0, 425, 0, 0, 376, 378, 0, 1133, 815, 0,
	0, 1612, 0, 1236, 88, 86, 0, 425, 86, 19,
	86, 0, 0, 0, 88, 0, 88, 0, 0, 789,
	0, 0, 0, 0, 0, 817, 32, 0, 88, 0,
	88, 842, 0, 0, 0, 1321, 0, 0, 410, 0,
	843, 811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 379, 0, 816, 0, 33,
	0, 0, 841, 0, 0, 830, 0, 0, 0, 0,
	1133, 0, 0, 380, 36, 1561, 838, 0, 0, 0,
	71, 0, 0, 1668, 0, 0, 0, 831, 0, 0,
	0, 88, 88, 0, 0, 88, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 0, 0, 0,
	0, 0, 24, 397, 0, 0, 0, 88, 0, 0,
	0, 0, 837, 0, 0, 0, 25, 0, 1322, 0,
	0, 0, 0, 0, 0, 0, 0, 425, 0, 74,
	0, 88, 88, 88, 0, 88, 0, 26, 0, 0,
	915, 0, 0, 0, 425, 74, 1705, 425, 0, 0,
	0, 425, 88, 944, 86, 0, 86, 0, 843, 947,
	86, 0, 0, 0, 0, 425, 811, 0, 0, 0,
	832, 815, 88, 833, 834, 835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 840, 0, 0,
	836, 0, 0, 0, 838, 0, 0, 0, 817, 0,
	0, 0, 0, 0, 842, 831, 0, 0, 0, 397,
	0, 0, 397, 397, 1316, 1313, 1314, 1315, 1308, 1309,
	1310, 1311, 1312, 0, 0, 0, 0, 0, 0, 0,
	816, 0, 0, 854, 0, 0, 0, 855, 830, 381,
	0, 859, 382, 0, 0, 0, 383, 0, 0, 0,
	0, 0, 1307, 0, 1323, 1324, 1325, 0, 0, 839,
	0, 0, 827, 828, 829, 0, 826, 823, 824, 825,
	818, 819, 820, 821, 822, 0, 0, 0, 0, 0,
	0, 0, 0, 1345, 0, 0, 969, 0, 27, 0,
	34, 0, 425, 915, 0, 0, 0, 0, 832, 0,
	43, 0, 0, 0, 0, 0, 0, 30, 0, 0,
	31, 0, 0, 0, 0, 840, 0, 0, 0, 1320,
	0, 425, 0, 0, 86, 0, 0, 0, 0, 0,
	0, 0, 45, 0, 0, 0, 0, 0, 29, 0,
	0, 843, 0, 0, 0, 0, 35, 0, 0, 0,
	29, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 841, 0, 0, 46, 0, 0, 0,
	0, 0, 0, 0, 0, 41, 0, 838, 0, 0,
	0, 0, 0, 0, 0, 42, 0, 839, 831, 0,
	0, 0, 0, 0, 826, 823, 824, 825, 818, 819,
	820, 821, 822, 40, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 425, 1166, 1167, 0, 0,
	0, 915, 1327, 837, 1172, 0, 0, 0, 0, 0,
	1177, 1178, 1180, 1182, 1183, 0, 1186, 1187, 0, 0,
	0, 0, 0, 425, 1326, 1194, 0, 0, 0, 0,
	0, 425, 0, 0, 0, 0, 0, 0, 0, 969,
	425, 0, 0, 969, 0, 0, 0, 0, 0, 1321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 832, 0, 0, 0, 789, 0, 86, 425, 0,
	1217, 0, 0, 0, 0, 0, 0, 0, 840, 0,
	0, 0, 0, 1226, 0, 0, 0, 0, 1241, 1241,
	1001, 425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 815, 0,
	833, 834, 835, 0, 0, 0, 0, 0, 0, 0,
	1078, 0, 0, 0, 0, 0, 0, 836, 0, 0,
	0, 0, 0, 0, 0, 817, 0, 0, 0, 0,
	0, 842, 1322, 0, 0, 0, 0, 0, 0, 0,
	839, 0, 0, 827, 828, 829, 0, 826, 823, 824,
	825, 818, 819, 820, 821, 822, 0, 816, 0, 0,
	815, 1708, 833, 834, 835, 830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 836,
	0, 0, 0, 0, 0, 0, 0, 817, 815, 0,
	833, 834, 835, 842, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 836, 0, 0,
	0, 0, 0, 0, 0, 817, 0, 0, 0, 816,
	0, 842, 0, 0, 1317, 1318, 1319, 830, 1316, 1313,
	1314, 1315, 1308, 1309, 1310, 1311, 1312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1307, 816, 1323, 1324,
	1325, 0, 811, 0, 0, 830, 0, 0, 0, 0,
	0, 29, 0, 0, 0, 1573, 0, 0, 843, 0,
	1243, 0, 0, 0, 425, 0, 0, 0, 815, 0,
	833, 834, 835, 0, 0, 0, 0, 1386, 0, 915,
	841, 789, 0, 0, 1392, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 838, 817, 0, 425, 0, 0,
	425, 842, 0, 1320, 0, 831, 0, 0, 1409, 0,
	0, 1241, 0, 0, 0, 1307, 0, 1323, 1324, 1325,
	843, 0, 1078, 0, 0, 0, 0, 816, 0, 0,
	0, 0, 0, 0, 1572, 830, 855, 1268, 0, 0,
	837, 0, 841, 0, 0, 0, 0, 0, 843, 1307,
	0, 1323, 1324, 1325, 0, 0, 838, 0, 0, 0,
	0, 0, 0, 0, 1452, 0, 0, 831, 1425, 0,
	841, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1320, 0, 838, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 855, 831, 0, 0, 832, 0,
	0, 0, 837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 840, 1320, 0, 0, 0,
	0, 0, 0, 0, 0, 1501, 1502, 915, 1326, 0,
	837, 0, 0, 811, 811, 0, 0, 0, 843, 1526,
	0, 1527, 0, 425, 1529, 1530, 1531, 0, 0, 0,
	0, 0, 0, 1321, 0, 0, 811, 0, 915, 1543,
	832, 0, 0, 0, 0, 0, 0, 0, 425, 425,
	0, 0, 425, 0, 838, 0, 0, 840, 811, 1241,
	0, 0, 0, 0, 0, 831, 1001, 839, 832, 1001,
	827, 828, 829, 0, 826, 823, 824, 825, 818, 819,
	820, 821, 822, 0, 0, 840, 0, 1326, 1694, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1591, 0, 0, 0, 0, 855, 0, 0, 0,
	0, 0, 1321, 0, 0, 0, 0, 0, 0, 0,
	0, 1326, 0, 0, 0, 0, 1322, 0, 0, 839,
	0, 0, 827, 828, 829, 0, 826, 823, 824, 825,
	818, 819, 820, 821, 822, 0, 1321, 0, 0, 0,
	1672, 0, 915, 0, 1607, 0, 86, 839, 832, 0,
	827, 828, 829, 425, 826, 823, 824, 825, 818, 819,
	820, 821, 822, 0, 0, 840, 0, 0, 1667, 0,
	0, 1543, 0, 0, 0, 0, 0, 811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 425, 0, 1648,
	0, 0, 0, 0, 0, 1322, 0, 0, 0, 0,
	0, 425, 0, 811, 0, 0, 0, 29, 1317, 1318,
	1319, 0, 1316, 1313, 1314, 1315, 1308, 1309, 1310, 1311,
	1312, 0, 0, 0, 0, 0, 0, 1001, 1001, 1322,
	0, 1001, 0, 0, 0, 0, 0, 839, 0, 0,
	827, 828, 829, 0, 826, 823, 824, 825, 818, 819,
	820, 821, 822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1681, 1682, 0, 0, 1686, 0,
	0, 0, 0, 0, 0, 0, 1543, 0, 0, 86,
	0, 0, 0, 0, 0, 0, 0, 1317, 1318, 1319,
	811, 1316, 1313, 1314, 1315, 1308, 1309, 1310, 1311, 1312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 811, 811, 425, 0, 86, 0,
	0, 1317, 1318, 1319, 0, 1316, 1313, 1314, 1315, 1308,
	1309, 1310, 1311, 1312, 1543, 1648, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 425, 0, 0, 0, 0,
	0, 0, 0, 1632, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 855, 0, 0, 693, 0, 0,
	1001, 0, 0, 0, 0, 0, 0, 0, 0, 90,
	91, 92, 93, 94, 95, 96, 698, 97, 98, 99,
	699, 700, 701, 702, 703, 704, 705, 100, 101, 706,
	102, 103, 453, 104, 105, 106, 333, 334, 454, 335,
	0, 336, 337, 707, 107, 338, 108, 109, 110, 111,
	708, 709, 112, 339, 340, 113, 710, 114, 115, 116,
	117, 341, 711, 455, 712, 118, 119, 120, 121, 122,
	855, 456, 123, 124, 125, 713, 126, 127, 128, 129,
	130, 131, 0, 714, 457, 132, 133, 134, 715, 716,
	717, 718, 719, 720, 135, 136, 137, 138, 139, 342,
	140, 141, 343, 344, 142, 721, 143, 722, 144, 145,
	146, 147, 148, 723, 149, 150, 151, 724, 725, 152,
	153, 154, 155, 726, 156, 157, 158, 727, 159, 0,
	160, 728, 161, 162, 345, 163, 164, 165, 346, 729,
	166, 730, 167, 168, 347, 169, 731, 170, 732, 171,
	458, 733, 459, 172, 173, 174, 734, 175, 176, 348,
	735, 349, 177, 736, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 737, 187, 188, 738, 189, 190, 191,
	739, 192, 460, 350, 193, 194, 195, 196, 351, 352,
	353, 740, 354, 741, 197, 461, 198, 462, 199, 200,
	201, 202, 203, 742, 743, 204, 355, 463, 205, 464,
	744, 206, 207, 411, 745, 746, 208, 209, 210, 211,
	0, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 412, 356, 465, 357, 222, 223, 358, 747, 224,
	225, 226, 748, 359, 227, 360, 228, 229, 230, 749,
	231, 750, 751, 232, 233, 752, 753, 234, 361, 466,
	235, 467, 362, 236, 237, 238, 239, 240, 241, 242,
	754, 243, 244, 363, 245, 364, 248, 246, 247, 755,
	249, 250, 251, 252, 253, 254, 255, 256, 365, 257,
	258, 259, 260, 756, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 271, 757, 272, 273, 468, 274,
	275, 366, 276, 0, 277, 278, 279, 280, 281, 758,
	282, 283, 284, 285, 413, 759, 286, 287, 288, 289,
	469, 290, 291, 367, 292, 760, 293, 294, 295, 296,
	297, 298, 299, 300, 368, 301, 0, 369, 761, 302,
	303, 762, 304, 305, 763, 415, 370, 764, 765, 414,
	306, 371, 307, 372, 766, 308, 309, 310, 311, 312,
	313, 314, 767, 768, 315, 316, 317, 318, 319, 769,
	770, 320, 321, 322, 323, 373, 374, 771, 324, 470,
	325, 772, 773, 774, 775, 326, 327, 328, 329, 330,
	331, 332, 0, 0, 693, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 901, 90, 91, 92, 93,
	94, 95, 96, 698, 97, 98, 99, 699, 700, 701,
	702, 703, 704, 705, 100, 101, 706, 102, 103, 453,
	104, 105, 106, 333, 334, 454, 335, 0, 336, 337,
	707, 107, 338, 108, 109, 110, 111, 708, 709, 112,
	339, 340, 113, 710, 114, 115, 116, 117, 341, 711,
	455, 712, 118, 119, 120, 121, 122, 0, 456, 123,
	124, 125, 713, 126, 127, 128, 129, 130, 131, 0,
	714, 457, 132, 133, 134, 715, 716, 717, 718, 719,
	720, 135, 136, 137, 138, 139, 342, 140, 141, 343,
	344, 142, 721, 143, 722, 144, 145, 146, 147, 148,
	723, 149, 150, 151, 724, 725, 152, 153, 154, 155,
	726, 156, 157, 158, 727, 159, 0, 160, 728, 161,
	162, 345, 163, 164, 165, 346, 729, 166, 730, 167,
	168, 347, 169, 731, 170, 732, 171, 458, 733, 459,
	172, 173, 174, 734, 175, 176, 348, 735, 349, 177,
	736, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	737, 187, 188, 738, 189, 190, 191, 739, 192, 460,
	350, 193, 194, 195, 196, 351, 352, 353, 740, 354,
	741, 197, 461, 198, 462, 199, 200, 201, 202, 203,
	742, 743, 204, 355, 463, 205, 464, 744, 206, 207,
	411, 745, 746, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 412, 356,
	465, 357, 222, 223, 358, 747, 224, 225, 226, 748,
	359, 227, 360, 228, 229, 230, 749, 231, 750, 751,
	232, 233, 752, 753, 234, 361, 466, 235, 467, 362,
	236, 237, 238, 239, 240, 241, 242, 754, 243, 244,
	363, 245, 364, 248, 246, 247, 755, 249, 250, 251,
	252, 253, 254, 255, 256, 365, 257, 258, 259, 260,
	756, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 757, 272, 273, 468, 274, 275, 366, 276,
	0, 277, 278, 279, 280, 281, 758, 282, 283, 284,
	285, 413, 759, 286, 287, 288, 289, 469, 290, 291,
	367, 292, 760, 293, 294, 295, 296, 297, 298, 299,
	300, 368, 301, 0, 369, 761, 302, 303, 762, 304,
	305, 763, 415, 370, 764, 765, 414, 306, 371, 307,
	372, 766, 308, 309, 310, 311, 312, 313, 314, 767,
	768, 315, 316, 317, 318, 319, 769, 770, 320, 321,
	322, 323, 373, 374, 771, 324, 470, 325, 772, 773,
	774, 775, 326, 327, 328, 329, 330, 331, 332, 563,
	551, 552, 553, 550, 539, 0, 0, 0, 0, 0,
	0, 90, 91, 92, 93, 94, 95, 96, 1100, 97,
	98, 99, 0, 0, 0, 0, 545, 0, 0, 100,
	101, 0, 102, 103, 453, 104, 105, 106, 333, 590,
	454, 591, 0, 592, 593, 0, 107, 338, 108, 109,
	110, 111, 560, 578, 112, 594, 595, 113, 0, 114,
	115, 116, 117, 586, 0, 571, 0, 118, 119, 120,
	121, 122, 0, 456, 123, 124, 125, 0, 126, 127,
	128, 129, 130, 131, 0, 0, 457, 132, 133, 134,
	0, 572, 574, 0, 573, 575, 135, 136, 137, 138,
	139, 596, 140, 141, 597, 598, 142, 0, 143, 0,
	144, 145, 146, 147, 148, 0, 149, 150, 151, 1101,
	0, 152, 589, 154, 155, 0, 156, 157, 158, 0,
	159, 0, 160, 0, 161, 162, 544, 163, 164, 165,
	579, 558, 166, 0, 167, 168, 599, 169, 0, 170,
	0, 171, 458, 0, 459, 172, 173, 174, 0, 175,
	176, 587, 0, 349, 177, 0, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 0, 187, 188, 0, 189,
	190, 191, 0, 192, 460, 350, 193, 194, 195, 196,
	600, 601, 602, 0, 570, 0, 197, 461, 198, 462,
	199, 200, 201, 202, 203, 0, 0, 204, 588, 463,
	205, 464, 0, 206, 207, 411, 0, 0, 208, 209,
	210, 211, 0, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 412, 356, 465, 357, 222, 223, 358,
	533, 224, 225, 226, 559, 585, 227, 603, 228, 229,
	230, 0, 231, 0, 0, 232, 233, 0, 0, 234,
	361, 466, 235, 467, 580, 236, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 581, 245, 364, 248, 246,
	247, 0, 249, 250, 251, 252, 253, 254, 255, 256,
	604, 257, 258, 259, 260, 0, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 0, 272, 273,
	468, 274, 275, 548, 276, 0, 277, 278, 279, 280,
	281, 0, 282, 283, 284, 285, 413, 576, 286, 287,
	288, 289, 469, 290, 291, 605, 292, 0, 293, 294,
	295, 296, 297, 298, 299, 300, 368, 301, 0, 582,
	0, 302, 303, 0, 304, 305, 0, 415, 606, 0,
	0, 414, 306, 583, 307, 584, 557, 308, 309, 310,
	311, 312, 313, 314, 0, 536, 315, 316, 317, 318,
	319, 577, 0, 320, 321, 322, 323, 373, 607, 1099,
	324, 470, 325, 0, 0, 0, 0, 326, 327, 328,
	329, 330, 331, 332, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 530, 531, 1102, 0, 0,
	0, 532, 0, 0, 540, 1097, 563, 551, 552, 553,
	550, 539, 0, 0, 0, 0, 0, 0, 90, 91,
	92, 93, 94, 95, 96, 0, 97, 98, 99, 0,
	0, 0, 0, 545, 0, 0, 100, 101, 0, 102,
	103, 453, 104, 105, 106, 333, 590, 454, 591, 0,
	592, 593, 0, 107, 338, 108, 109, 110, 111, 560,
	578, 112, 594, 595, 113, 0, 114, 115, 116, 117,
	586, 0, 571, 0, 118, 119, 120, 121, 122, 0,
	456, 123, 124, 125, 0, 126, 127, 128, 129, 130,
	131, 0, 0, 457, 132, 133, 134, 0, 572, 574,
	0, 573, 575, 135, 136, 137, 138, 139, 596, 140,
	141, 597, 598, 142, 0, 143, 0, 144, 145, 146,
	147, 148, 0, 149, 150, 151, 0, 0, 152, 589,
	154, 155, 0, 156, 157, 158, 0, 159, 0, 160,
	0, 161, 162, 544, 163, 164, 165, 579, 558, 166,
	0, 167, 168, 599, 169, 0, 170, 0, 171, 458,
	0, 459, 172, 173, 174, 0, 175, 176, 587, 0,
	349, 177, 0, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 0, 187, 188, 0, 189, 190, 191, 0,
	192, 460, 350, 193, 194, 195, 196, 600, 601, 602,
	0, 570, 0, 197, 461, 198, 462, 199, 200, 201,
	202, 203, 0, 0, 204, 588, 463, 205, 464, 0,
	206, 207, 411, 0, 0, 208, 209, 210, 211, 0,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	412, 356, 465, 357, 222, 223, 358, 533, 224, 225,
	226, 559, 585, 227, 603, 228, 229, 230, 0, 231,
	0, 0, 232, 233, 0, 0, 234, 361, 466, 235,
	467, 580, 236, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 581, 245, 364, 248, 246, 247, 0, 249,
	250, 251, 252, 253, 254, 255, 256, 604, 257, 258,
	259, 260, 0, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 0, 272, 273, 468, 274, 275,
	548, 276, 0, 277, 278, 279, 280, 281, 43, 282,
	283, 284, 285, 413, 576, 286, 287, 288, 289, 469,
	290, 291, 605, 292, 0, 293, 294, 295, 296, 297,
	298, 299, 300, 368, 301, 0, 582, 0, 302, 303,
	45, 304, 305, 0, 415, 606, 0, 0, 414, 306,
	583, 307, 584, 557, 308, 309, 310, 311, 312, 313,
	314, 0, 536, 315, 316, 317, 318, 319, 577, 0,
	320, 321, 322, 323, 452, 607, 0, 324, 470, 325,
	0, 0, 0, 41, 326, 327, 328, 329, 330, 331,
	332, 534, 0, 42, 0, 0, 0, 0, 0, 0,
	0, 0, 530, 531, 0, 0, 0, 0, 532, 0,
	0, 540, 1650, 563, 551, 552, 553, 550, 539, 0,
	0, 0, 0, 0, 0, 90, 91, 92, 93, 94,
	95, 96, 0, 97, 98, 99, 0, 0, 0, 0,
	545, 0, 0, 100, 101, 0, 102, 103, 453, 104,
	105, 106, 333, 590, 454, 591, 0, 592, 593, 0,
	107, 338, 108, 109, 110, 111, 560, 578, 112, 594,
	595, 113, 0, 114, 115, 116, 117, 586, 0, 571,
	0, 118, 119, 120, 121, 122, 0, 456, 123, 124,
	125, 0, 126, 127, 128, 129, 130, 131, 0, 0,
	457, 132, 133, 134, 0, 572, 574, 0, 573, 575,
	135, 136, 137, 138, 139, 596, 140, 141, 597, 598,
	142, 628, 143, 0, 144, 145, 146, 147, 148, 0,
	149, 150, 151, 0, 0, 152, 589, 154, 155, 0,
	156, 157, 158, 0, 159, 0, 160, 0, 161, 162,
	544, 163, 164, 165, 579, 558, 166, 0, 167, 168,
	599, 169, 0, 170, 0, 171, 458, 0, 459, 172,
	173, 174, 0, 175, 176, 587, 0, 349, 177, 0,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 0,
	187, 188, 0, 189, 190, 191, 0, 192, 460, 350,
	193, 194, 195, 196, 600, 601, 602, 0, 570, 0,
	197, 461, 198, 462, 199, 200, 201, 202, 203, 0,
	0, 204, 588, 463, 205, 464, 0, 206, 207, 411,
	0, 0, 208, 209, 210, 211, 0, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 412, 356, 465,
	357, 222, 223, 358, 533, 224, 225, 226, 559, 585,
	227, 603, 228, 229, 230, 0, 231, 0, 0, 232,
	233, 0, 0, 234, 361, 466, 235, 467, 580, 236,
	237, 238, 239, 240, 241, 242, 0, 243, 244, 581,
	245, 364, 248, 246, 247, 0, 249, 250, 251, 252,
	253, 254, 255, 256, 604, 257, 258, 259, 260, 0,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 0, 272, 273, 468, 274, 275, 548, 276, 0,
	277, 278, 279, 280, 281, 43, 282, 283, 284, 285,
	413, 576, 286, 287, 288, 289, 469, 290, 291, 605,
	292, 0, 293, 294, 295, 296, 297, 298, 299, 300,
	368, 301, 0, 582, 0, 302, 303, 45, 304, 305,
	0, 415, 606, 0, 0, 414, 306, 583, 307, 584,
	557, 308, 309, 310, 311, 312, 313, 314, 0, 536,
	315, 316, 317, 318, 319, 577, 0, 320, 321, 322,
	323, 452, 607, 0, 324, 470, 325, 0, 0, 0,
	41, 326, 327, 328, 329, 330, 331, 332, 534, 0,
	42, 0, 0, 0, 0, 0, 0, 0, 0, 530,
	531, 0, 0, 0, 0, 532, 0, 0, 540, 563,
	551, 552, 553, 550, 539, 0, 0, 0, 0, 0,
	0, 90, 91, 92, 93, 94, 95, 96, 0, 97,
	98, 99, 0, 0, 0, 0, 545, 0, 0, 100,
	101, 0, 102, 103, 453, 104, 105, 106, 333, 590,
	454, 591, 0, 592, 593, 0, 107, 338, 108, 109,
	110, 111, 560, 578, 112, 594, 595, 113, 0, 114,
	115, 116, 117, 586, 0, 571, 0, 118, 119, 120,
	121, 122, 0, 456, 123, 124, 125, 0, 126, 127,
	128, 129, 130, 131, 0, 0, 457, 132, 133, 134,
	0, 572, 574, 0, 573, 575, 135, 136, 137, 138,
	139, 596, 140, 141, 597, 598, 142, 0, 143, 0,
	144, 145, 146, 147, 148, 0, 149, 150, 151, 0,
	0, 152, 589, 154, 155, 0, 156, 157, 158, 0,
	159, 0, 160, 0, 161, 162, 544, 163, 164, 165,
	579, 558, 166, 0, 167, 168, 599, 169, 0, 170,
	0, 171, 458, 0, 459, 172, 173, 174, 0, 175,
	176, 587, 0, 349, 177, 0, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 0, 187, 188, 0, 189,
	190, 191, 0, 192, 460, 350, 193, 194, 195, 196,
	600, 601, 602, 0, 570, 0, 197, 461, 198, 462,
	199, 200, 201, 202, 203, 0, 0, 204, 588, 463,
	205, 464, 0, 206, 207, 411, 0, 0, 208, 209,
	210, 211, 0, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 412, 356, 465, 357, 222, 223, 358,
	533, 224, 225, 226, 559, 585, 227, 603, 228, 229,
	230, 0, 231, 0, 0, 232, 233, 0, 0, 234,
	361, 466, 235, 467, 580, 236, 237, 238, 239, 240,
	241, 242, 0, 243, 244, 581, 245, 364, 248, 246,
	247, 0, 249, 250, 251, 252, 253, 254, 255, 256,
	604, 257, 258, 259, 260, 0, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 0, 272, 273,
	468, 274, 275, 548, 276, 0, 277, 278, 279, 280,
	281, 43, 282, 283, 284, 285, 413, 576, 286, 287,
	288, 289, 469, 290, 291, 605, 292, 0, 293, 294,
	295, 296, 297, 298, 299, 300, 368, 301, 0, 582,
	0, 302, 303, 45, 304, 305, 0, 415, 606, 0,
	0, 414, 306, 583, 307, 584, 557, 308, 309, 310,
	311, 312, 313, 314, 0, 536, 315, 316, 317, 318,
	319, 577, 0, 320, 321, 322, 323, 452, 607, 0,
	324, 470, 325, 0, 0, 0, 41, 326, 327, 328,
	329, 330, 331, 332, 534, 0, 42, 0, 0, 0,
	0, 0, 0, 0, 0, 530, 531, 0, 0, 0,
	0, 532, 0, 0, 540, 563, 551, 552, 553, 550,
	539, 0, 0, 0, 0, 0, 0, 90, 91, 92,
	93, 94, 95, 96, 0, 97, 98, 99, 0, 0,
	0, 0, 545, 0, 0, 100, 101, 0, 102, 103,
	453, 104, 105, 106, 333, 590, 454, 591, 0, 592,
	593, 1143, 107, 338, 108, 109, 110, 111, 560, 578,
	112, 594, 595, 113, 0, 114, 115, 116, 117, 586,
	0, 571, 0, 118, 119, 120, 121, 122, 0, 456,
	123, 124, 125, 0, 126, 127, 128, 129, 130, 131,
	0, 0, 457, 132, 133, 134, 0, 572, 574, 0,
	573, 575, 135, 136, 137, 138, 139, 596, 140, 141,
	597, 598, 142, 0, 143, 0, 144, 145, 146, 147,
	148, 0, 149, 150, 151, 0, 0, 152, 589, 154,
	155, 0, 156, 157, 158, 0, 159, 0, 160, 0,
	161, 162, 544, 163, 164, 165, 579, 558, 166, 0,
	167, 168, 599, 169, 0, 170, 0, 171, 458, 1148,
	459, 172, 173, 174, 0, 175, 176, 587, 0, 349,
	177, 0, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 0, 187, 188, 0, 189, 190, 191, 0, 192,
	460, 350, 193, 194, 195, 196, 600, 601, 602, 0,
	570, 0, 197, 461, 198, 462, 199, 200, 201, 202,
	203, 0, 1144, 204, 588, 463, 205, 464, 0, 206,
	207, 411, 0, 0, 208, 209, 210, 211, 0, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 412,
	356, 465, 357, 222, 223, 358, 533, 224, 225, 226,
	559, 585, 227, 603, 228, 229, 230, 0, 231, 0,
	0, 232, 233, 0, 0, 234, 361, 466, 235, 467,
	580, 236, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 581, 245, 364, 248, 246, 247, 0, 249, 250,
	251, 252, 253, 254, 255, 256, 604, 257, 258, 259,
	260, 0, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 0, 272, 273, 468, 274, 275, 548,
	276, 0, 277, 278, 279, 280, 281, 0, 282, 283,
	284, 285, 413, 576, 286, 287, 288, 289, 469, 290,
	291, 605, 292, 0, 293, 294, 295, 296, 297, 298,
	299, 300, 368, 301, 0, 582, 0, 302, 303, 0,
	304, 305, 0, 415, 606, 0, 1145, 414, 306, 583,
	307, 584, 557, 308, 309, 310, 311, 312, 313, 314,
	0, 536, 315, 316, 317, 318, 319, 577, 0, 320,
	321, 322, 323, 373, 607, 0, 324, 470, 325, 0,
	0, 0, 0, 326, 327, 328, 329, 330, 331, 332,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 530, 531, 0, 0, 0, 0, 532, 0, 0,
	540, 563, 551, 552, 553, 550, 539, 0, 0, 0,
	0, 0, 0, 90, 91, 92, 93, 94, 95, 96,
	0, 97, 98, 99, 0, 0, 0, 0, 545, 0,
	0, 100, 101, 0, 102, 103, 453, 104, 105, 106,
	333, 590, 454, 591, 0, 592, 593, 0, 107, 338,
	108, 109, 110, 111, 560, 578, 112, 594, 595, 113,
	0, 114, 115, 116, 117, 586, 0, 571, 0, 118,
	119, 120, 121, 122, 0, 456, 123, 124, 125, 0,
	126, 127, 128, 129, 130, 131, 0, 0, 457, 132,
	133, 134, 0, 572, 574, 0, 573, 575, 135, 136,
	137, 138, 139, 596, 140, 141, 597, 598, 142, 0,
	143, 0, 144, 145, 146, 147, 148, 0, 149, 150,
	151, 0, 0, 152, 589, 154, 155, 0, 156, 157,
	158, 0, 159, 0, 160, 0, 161, 162, 544, 163,
	164, 165, 579, 558, 166, 0, 167, 168, 599, 169,
	0, 170, 0, 171, 458, 0, 459, 172, 173, 174,
	0, 175, 176, 587, 0, 349, 177, 0, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 0, 187, 188,
	0, 189, 190, 191, 0, 192, 460, 350, 193, 194,
	195, 196, 600, 601, 602, 0, 570, 0, 197, 461,
	198, 462, 199, 200, 201, 202, 203, 0, 0, 204,
	588, 463, 205, 464, 0, 206, 207, 411, 0, 0,
	208, 209, 210, 211, 0, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 412, 356, 465, 357, 222,
	223, 358, 533, 224, 225, 226, 559, 585, 227, 603,
	228, 229, 230, 0, 231, 0, 0, 232, 233, 0,
	0, 234, 361, 466, 235, 467, 580, 236, 237, 238,
	239, 240, 241, 242, 0, 243, 244, 581, 245, 364,
	248, 246, 247, 0, 249, 250, 251, 252, 253, 254,
	255, 256, 604, 257, 258, 259, 260, 0, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 270, 271, 0,
	272, 273, 468, 274, 275, 548, 276, 0, 277, 278,
	279, 280, 281, 0, 282, 283, 284, 285, 413, 576,
	286, 287, 288, 289, 469, 290, 291, 605, 292, 0,
	293, 294, 295, 296, 297, 298, 299, 300, 368, 301,
	0, 582, 0, 302, 303, 0, 304, 305, 0, 415,
	606, 0, 0, 414, 306, 583, 307, 584, 557, 308,
	309, 310, 311, 312, 313, 314, 0, 536, 315, 316,
	317, 318, 319, 577, 0, 320, 321, 322, 323, 373,
	607, 0, 324, 470, 325, 0, 0, 0, 0, 326,
	327, 328, 329, 330, 331, 332, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 530, 531, 0,
	0, 0, 0, 532, 0, 0, 540, 1486, 563, 551,
	552, 553, 550, 539, 0, 0, 0, 0, 0, 0,
	90, 91, 92, 93, 94, 95, 96, 0, 97, 98,
	99, 0, 0, 0, 0, 545, 0, 0, 100, 101,
	0, 102, 103, 453, 104, 105, 106, 333, 590, 454,
	591, 0, 592, 593, 0, 107, 338, 108, 109, 110,
	111, 560, 578, 112, 594, 595, 113, 0, 114, 115,
	116, 117, 586, 0, 571, 0, 118, 119, 120, 121,
	122, 0, 456, 123, 124, 125, 0, 126, 127, 128,
	129, 130, 131, 0, 0, 457, 132, 133, 134, 0,
	572, 574, 0, 573, 575, 135, 136, 137, 138, 139,
	596, 140, 141, 597, 598, 142, 0, 143, 0, 144,
	145, 146, 147, 148, 0, 149, 150, 151, 0, 0,
	152, 589, 154, 155, 0, 156, 157, 158, 0, 159,
	0, 160, 0, 161, 162, 544, 163, 164, 165, 579,
	558, 166, 0, 167, 168, 599, 169, 0, 170, 0,
	171, 458, 0, 459, 172, 173, 174, 0, 175, 176,
	587, 0, 349, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 0, 187, 188, 0, 189, 190,
	191, 0, 192, 460, 350, 193, 194, 195, 196, 600,
	601, 602, 0, 570, 0, 197, 461, 198, 462, 199,
	200, 201, 202, 203, 0, 0, 204, 588, 463, 205,
	464, 0, 206, 207, 411, 0, 0, 208, 209, 210,
	211, 0, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 412, 356, 465, 357, 222, 223, 358, 533,
	224, 225, 226, 559, 585, 227, 603, 228, 229, 230,
	0, 231, 0, 0, 232, 233, 0, 0, 234, 361,
	466, 235, 467, 580, 236, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 581, 245, 364, 248, 246, 247,
	0, 249, 250, 251, 252, 253, 254, 255, 256, 604,
	257, 258, 259, 260, 0, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 0, 272, 273, 468,
	274, 275, 548, 276, 0, 277, 278, 279, 280, 281,
	0, 282, 283, 284, 285, 413, 576, 286, 287, 288,
	289, 469, 290, 291, 605, 292, 0, 293, 294, 295,
	296, 297, 298, 299, 300, 368, 301, 0, 582, 0,
	302, 303, 0, 304, 305, 0, 415, 606, 0, 0,
	414, 306, 583, 307, 584, 557, 308, 309, 310, 311,
	312, 313, 314, 0, 536, 315, 316, 317, 318, 319,
	577, 0, 320, 321, 322, 323, 373, 607, 0, 324,
	470, 325, 0, 0, 0, 0, 326, 327, 328, 329,
	330, 331, 332, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 531, 0, 0, 0, 0,
	532, 0, 0, 540, 1429, 563, 551, 552, 553, 550,
	539, 0, 0, 0, 0, 0, 0, 90, 91, 92,
	93, 94, 95, 96, 0, 97, 98, 99, 0, 0,
	0, 0, 545, 0, 0, 100, 101, 0, 102, 103,
	453, 104, 105, 106, 333, 590, 454, 591, 0, 592,
	593, 0, 107, 338, 108, 109, 110, 111, 560, 578,
	112, 594, 595, 113, 0, 114, 115, 116, 117, 586,
	0, 571, 0, 118, 119, 120, 121, 122, 0, 456,
	123, 124, 125, 0, 126, 127, 128, 129, 130, 131,
	0, 0, 457, 132, 133, 134, 0, 572, 574, 0,
	573, 575, 135, 136, 137, 138, 139, 596, 140, 141,
	597, 598, 142, 0, 143, 0, 144, 145, 146, 147,
	148, 0, 149, 150, 151, 0, 0, 152, 589, 154,
	155, 0, 156, 157, 158, 0, 159, 0, 160, 0,
	161, 162, 544, 163, 164, 165, 579, 558, 166, 0,
	167, 168, 599, 169, 0, 170, 0, 171, 458, 0,
	459, 172, 173, 174, 0, 175, 176, 587, 0, 349,
	177, 0, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 0, 187, 188, 0, 189, 190, 191, 0, 192,
	460, 350, 193, 194, 195, 196, 600, 601, 602, 0,
	570, 0, 197, 461, 198, 462, 199, 200, 201, 202,
	203, 0, 0, 204, 588, 463, 205, 464, 0, 206,
	207, 411, 0, 0, 208, 209, 210, 211, 0, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 412,
	356, 465, 357, 222, 223, 358, 533, 224, 225, 226,
	559, 585, 227, 603, 228, 229, 230, 0, 231, 0,
	0, 232, 233, 0, 0, 234, 361, 466, 235, 467,
	580, 236, 237, 238, 239, 240, 241, 242, 0, 243,
	244, 581, 245, 364, 248, 246, 247, 0, 249, 250,
	251, 252, 253, 254, 255, 256, 604, 257, 258, 259,
	260, 0, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 0, 272, 273, 468, 274, 275, 548,
	276, 0, 277, 278, 279, 280, 281, 0, 282, 283,
	284, 285, 413, 576, 286, 287, 288, 289, 469, 290,
	291, 605, 292, 0, 293, 294, 295, 296, 297, 298,
	299, 300, 368, 301, 0, 582, 0, 302, 303, 0,
	304, 305, 0, 415, 606, 0, 0, 414, 306, 583,
	307, 584, 557, 308, 309, 310, 311, 312, 313, 314,
	0, 536, 315, 316, 317, 318, 319, 577, 0, 320,
	321, 322, 323, 373, 607, 0, 324, 470, 325, 0,
	0, 0, 0, 326, 327, 328, 329, 330, 331, 332,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 530, 531, 0, 0, 0, 0, 532, 0, 0,
	540, 1096, 563, 551, 552, 553, 550, 539, 0, 0,
	0, 0, 0, 0, 90, 91, 92, 93, 94, 95,
	96, 0, 97, 98, 99, 0, 0, 0, 0, 545,
	0, 0, 100, 101, 0, 102, 103, 453, 104, 105,
	106, 333, 590, 454, 591, 0, 592, 593, 0, 107,
	338, 108, 109, 110, 111, 560, 578, 112, 594, 595,
	113, 0, 114, 115, 116, 117, 586, 0, 571, 0,
	118, 119, 120, 121, 122, 0, 456, 123, 124, 125,
	0, 126, 127, 128, 129, 130, 131, 0, 0, 457,
	132, 133, 134, 0, 572, 574, 0, 573, 575, 135,
	136, 137, 138, 139, 596, 140, 141, 597, 598, 142,
	0, 143, 0, 144, 145, 146, 147, 148, 0, 149,
	150, 151, 0, 0, 152, 589, 154, 155, 0, 156,
	157, 158, 0, 159, 0, 160, 0, 161, 162, 544,
	163, 164, 165, 579, 558, 166, 0, 167, 168, 599,
	169, 0, 170, 0, 171, 458, 0, 459, 172, 173,
	174, 0, 175, 176, 587, 0, 349, 177, 0, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 0, 187,
	188, 0, 189, 190, 191, 0, 192, 460, 350, 193,
	194, 195, 196, 600, 601, 602, 0, 570, 0, 197,
	461, 198, 462, 199, 200, 201, 202, 203, 0, 0,
	204, 588, 463, 205, 464, 0, 206, 207, 411, 0,
	0, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 412, 356, 465, 357,
	222, 223, 358, 533, 224, 225, 226, 559, 585, 227,
	603, 228, 229, 230, 0, 231, 0, 0, 232, 233,
	0, 0, 234, 361, 466, 235, 467, 580, 236, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 581, 245,
	364, 248, 246, 247, 0, 249, 250, 251, 252, 253,
	254, 255, 256, 604, 257, 258, 259, 260, 0, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
	0, 272, 273, 468, 274, 275, 548, 276, 0, 277,
	278, 279, 280, 281, 0, 282, 283, 284, 285, 413,
	576, 286, 287, 288, 289, 469, 290, 291, 605, 292,
	0, 293, 294, 295, 296, 297, 298, 299, 300, 368,
	301, 0, 582, 0, 302, 303, 0, 304, 305, 0,
	415, 606, 0, 0, 414, 306, 583, 307, 584, 557,
	308, 309, 310, 311, 312, 313, 314, 0, 536, 315,
	316, 317, 318, 319, 577, 0, 320, 321, 322, 323,
	373, 607, 0, 324, 470, 325, 0, 0, 0, 0,
	326, 327, 328, 329, 330, 331, 332, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 531,
	0, 0, 0, 0, 532, 861, 1092, 540, 563, 551,
	552, 553, 550, 539, 0, 0, 0, 0, 0, 0,
	90, 91, 92, 93, 94, 95, 96, 0, 97, 98,
	99, 0, 0, 0, 0, 545, 0, 0, 100, 101,
	0, 102, 103, 453, 104, 105, 106, 333, 590, 454,
	591, 0, 592, 593, 0, 107, 338, 108, 109, 110,
	111, 560, 578, 112, 594, 595, 113, 0, 114, 115,
	116, 117, 586, 0, 571, 0, 118, 119, 120, 121,
	122, 0, 456, 123, 124, 125, 0, 126, 127, 128,
	129, 130, 131, 0, 0, 457, 132, 133, 134, 0,
	572, 574, 0, 573, 575, 135, 136, 137, 138, 139,
	596, 140, 141, 597, 598, 142, 0, 143, 0, 144,
	145, 146, 147, 148, 0, 149, 150, 151, 0, 0,
	152, 589, 154, 155, 0, 156, 157, 158, 0, 159,
	0, 160, 0, 161, 162, 544, 163, 164, 165, 579,
	558, 166, 0, 167, 168, 599, 169, 0, 170, 0,
	171, 458, 0, 459, 172, 173, 174, 0, 175, 176,
	587, 0, 349, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 0, 187, 188, 0, 189, 190,
	191, 0, 192, 460, 350, 193, 194, 195, 196, 600,
	601, 602, 0, 570, 0, 197, 461, 198, 462, 199,
	200, 201, 202, 203, 0, 0, 204, 588, 463, 205,
	464, 0, 206, 207, 411, 0, 0, 208, 209, 210,
	211, 0, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 412, 356, 465, 357, 222, 223, 358, 533,
	224, 225, 226, 559, 585, 227, 603, 228, 229, 230,
	0, 231, 0, 0, 232, 233, 0, 0, 234, 361,
	466, 235, 467, 580, 236, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 581, 245, 364, 248, 246, 247,
	0, 249, 250, 251, 252, 253, 254, 255, 256, 604,
	257, 258, 259, 260, 0, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 0, 272, 273, 468,
	274, 275, 548, 276, 0, 277, 278, 279, 280, 281,
	0, 282, 283, 284, 285, 413, 576, 286, 287, 288,
	289, 469, 290, 291, 605, 292, 0, 293, 294, 295,
	296, 297, 298, 299, 300, 368, 301, 0, 582, 0,
	302, 303, 0, 304, 305, 0, 415, 606, 0, 0,
	414, 306, 583, 307, 584, 557, 308, 309, 310, 311,
	312, 313, 314, 0, 536, 315, 316, 317, 318, 319,
	577, 0, 320, 321, 322, 323, 373, 607, 1435, 324,
	470, 325, 0, 0, 0, 0, 326, 327, 328, 329,
	330, 331, 332, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 531, 0, 0, 0, 0,
	532, 0, 0, 540, 563, 551, 552, 553, 550, 539,
	0, 0, 0, 0, 0, 0, 90, 91, 92, 93,
	94, 95, 96, 0, 97, 98, 99, 0, 0, 0,
	0, 545, 0, 0, 100, 101, 0, 102, 103, 453,
	104, 105, 106, 333, 590, 454, 591, 0, 592, 593,
	0, 107, 338, 108, 109, 110, 111, 560, 578, 112,
	594, 595, 113, 0, 114, 115, 116, 117, 586, 0,
	571, 0, 118, 119, 120, 121, 122, 0, 456, 123,
	124, 125, 0, 126, 127, 128, 129, 130, 131, 0,
	0, 457, 132, 133, 134, 0, 572, 574, 0, 573,
	575, 135, 136, 137, 138, 139, 596, 140, 141, 597,
	598, 142, 628, 143, 0, 144, 145, 146, 147, 148,
	0, 149, 150, 151, 0, 0, 152, 589, 154, 155,
	0, 156, 157, 158, 0, 159, 0, 160, 0, 161,
	162, 544, 163, 164, 165, 579, 558, 166, 0, 167,
	168, 599, 169, 0, 170, 0, 171, 458, 0, 459,
	172, 173, 174, 0, 175, 176, 587, 0, 349, 177,
	0, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	0, 187, 188, 0, 189, 190, 191, 0, 192, 460,
	350, 193, 194, 195, 196, 600, 601, 602, 0, 570,
	0, 197, 461, 198, 462, 199, 200, 201, 202, 203,
	0, 0, 204, 588, 463, 205, 464, 0, 206, 207,
	411, 0, 0, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 412, 356,
	465, 357, 222, 223, 358, 533, 224, 225, 226, 559,
	585, 227, 603, 228, 229, 230, 0, 231, 0, 0,
	232, 233, 0, 0, 234, 361, 466, 235, 467, 580,
	236, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	581, 245, 364, 248, 246, 247, 0, 249, 250, 251,
	252, 253, 254, 255, 256, 604, 257, 258, 259, 260,
	0, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 0, 272, 273, 468, 274, 275, 548, 276,
	0, 277, 278, 279, 280, 281, 0, 282, 283, 284,
	285, 413, 576, 286, 287, 288, 289, 469, 290, 291,
	605, 292, 0, 293, 294, 295, 296, 297, 298, 299,
	300, 368, 301, 0, 582, 0, 302, 303, 0, 304,
	305, 0, 415, 606, 0, 0, 414, 306, 583, 307,
	584, 557, 308, 309, 310, 311, 312, 313, 314, 0,
	536, 315, 316, 317, 318, 319, 577, 0, 320, 321,
	322, 323, 373, 607, 0, 324, 470, 325, 0, 0,
	0, 0, 326, 327, 328, 329, 330, 331, 332, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	530, 531, 0, 0, 0, 0, 532, 0, 0, 540,
	563, 551, 552, 553, 550, 539, 0, 0, 0, 0,
	0, 0, 90, 91, 92, 93, 94, 95, 96, 0,
	97, 98, 99, 0, 0, 0, 0, 545, 0, 0,
	100, 101, 0, 102, 103, 453, 104, 105, 106, 333,
	590, 454, 591, 0, 592, 593, 0, 107, 338, 108,
	109, 110, 111, 560, 578, 112, 594, 595, 113, 0,
	114, 115, 116, 117, 586, 0, 571, 0, 118, 119,
	120, 121, 122, 0, 456, 123, 124, 125, 0, 126,
	127, 128, 129, 130, 131, 0, 0, 457, 132, 133,
	134, 0, 572, 574, 0, 573, 575, 135, 136, 137,
	138, 139, 596, 140, 141, 597, 598, 142, 0, 143,
	0, 144, 145, 146, 147, 148, 0, 149, 150, 151,
	0, 0, 152, 589, 154, 155, 0, 156, 157, 158,
	0, 159, 0, 160, 0, 161, 162, 544, 163, 164,
	165, 579, 558, 166, 0, 167, 168, 599, 169, 0,
	170, 0, 171, 458, 1148, 459, 172, 173, 174, 0,
	175, 176, 587, 0, 349, 177, 0, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 0, 187, 188, 0,
	189, 190, 191, 0, 192, 460, 350, 193, 194, 195,
	196, 600, 601, 602, 0, 570, 0, 197, 461, 198,
	462, 199, 200, 201, 202, 203, 0, 0, 204, 588,
	463, 205, 464, 0, 206, 207, 411, 0, 0, 208,
	209, 210, 211, 0, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 412, 356, 465, 357, 222, 223,
	358, 533, 224, 225, 226, 559, 585, 227, 603, 228,
	229, 230, 0, 231, 0, 0, 232, 233, 0, 0,
	234, 361, 466, 235, 467, 580, 236, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 581, 245, 364, 248,
	246, 247, 0, 249, 250, 251, 252, 253, 254, 255,
	256, 604, 257, 258, 259, 260, 0, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271, 0, 272,
	273, 468, 274, 275, 548, 276, 0, 277, 278, 279,
	280, 281, 0, 282, 283, 284, 285, 413, 576, 286,
	287, 288, 289, 469, 290, 291, 605, 292, 0, 293,
	294, 295, 296, 297, 298, 299, 300, 368, 301, 0,
	582, 0, 302, 303, 0, 304, 305, 0, 415, 606,
	0, 0, 414, 306, 583, 307, 584, 557, 308, 309,
	310, 311, 312, 313, 314, 0, 536, 315, 316, 317,
	318, 319, 577, 0, 320, 321, 322, 323, 373, 607,
	0, 324, 470, 325, 0, 0, 0, 0, 326, 327,
	328, 329, 330, 331, 332, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 530, 531, 0, 0,
	0, 0, 532, 0, 0, 540, 563, 551, 552, 553,
	550, 539, 0, 0, 0, 0, 0, 0, 90, 91,
	92, 93, 94, 95, 96, 0, 97, 98, 99, 0,
	0, 0, 0, 545, 0, 0, 100, 101, 0, 102,
	103, 453, 104, 105, 106, 333, 590, 454, 591, 0,
	592, 593, 0, 107, 338, 108, 109, 110, 111, 560,
	578, 112, 594, 595, 113, 0, 114, 115, 116, 117,
	586, 0, 571, 0, 118, 119, 120, 121, 122, 0,
	456, 123, 124, 125, 0, 126, 127, 128, 129, 130,
	131, 0, 0, 457, 132, 133, 134, 0, 572, 574,
	0, 573, 575, 135, 136, 137, 138, 139, 596, 140,
	141, 597, 598, 142, 0, 143, 0, 144, 145, 146,
	147, 148, 0, 149, 150, 151, 0, 0, 152, 589,
	154, 155, 0, 156, 157, 158, 0, 159, 0, 160,
	0, 161, 162, 544, 163, 164, 165, 579, 558, 166,
	0, 167, 168, 599, 169, 0, 170, 0, 171, 458,
	0, 459, 172, 173, 174, 0, 175, 176, 587, 0,
	349, 177, 0, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 0, 187, 188, 0, 189, 190, 191, 0,
	192, 460, 350, 193, 194, 195, 196, 600, 601, 602,
	0, 570, 0, 197, 461, 198, 462, 199, 200, 201,
	202, 203, 0, 0, 204, 588, 463, 205, 464, 0,
	206, 207, 411, 0, 0, 208, 209, 210, 211, 0,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	412, 356, 465, 357, 222, 223, 358, 533, 224, 225,
	226, 559, 585, 227, 603, 228, 229, 230, 0, 231,
	0, 0, 232, 233, 0, 0, 234, 361, 466, 235,
	467, 580, 236, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 581, 245, 364, 248, 246, 247, 0, 249,
	250, 251, 252, 253, 254, 255, 256, 604, 257, 258,
	259, 260, 0, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 0, 272, 273, 468, 274, 275,
	548, 276, 0, 277, 278, 279, 280, 281, 0, 282,
	283, 284, 285, 413, 576, 286, 287, 288, 289, 469,
	290, 291, 605, 292, 0, 293, 294, 295, 296, 297,
	298, 299, 300, 368, 301, 0, 582, 0, 302, 303,
	0, 304, 305, 0, 415, 606, 0, 0, 414, 306,
	583, 307, 584, 557, 308, 309, 310, 311, 312, 313,
	314, 0, 536, 315, 316, 317, 318, 319, 577, 0,
	320, 321, 322, 323, 373, 607, 0, 324, 470, 325,
	0, 0, 0, 0, 326, 327, 328, 329, 330, 331,
	332, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 530, 531, 528, 0, 0, 0, 532, 0,
	0, 540, 563, 551, 552, 553, 550, 539, 0, 0,
	0, 0, 0, 0, 90, 91, 92, 93, 94, 95,
	96, 796, 97, 98, 99, 0, 0, 0, 0, 545,
	0, 0, 100, 101, 0, 102, 103, 453, 104, 105,
	106, 333, 590, 454, 591, 0, 592, 593, 0, 107,
	338, 108, 109, 110, 111, 560, 578, 112, 594, 595,
	113, 0, 114, 115, 116, 117, 586, 0, 571, 0,
	118, 119, 120, 121, 122, 0, 456, 123, 124, 125,
	0, 126, 127, 128, 129, 130, 131, 0, 0, 457,
	132, 133, 134, 0, 572, 574, 0, 573, 575, 135,
	136, 137, 138, 139, 596, 140, 141, 597, 598, 142,
	0, 143, 0, 144, 145, 146, 147, 148, 0, 149,
	150, 151, 0, 0, 152, 589, 154, 155, 0, 156,
	157, 158, 0, 159, 0, 160, 0, 161, 162, 544,
	163, 164, 165, 579, 558, 166, 0, 167, 168, 599,
	169, 0, 170, 0, 171, 458, 0, 459, 172, 173,
	174, 0, 175, 176, 587, 0, 349, 177, 0, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 0, 187,
	188, 0, 189, 190, 191, 0, 192, 460, 350, 193,
	194, 195, 196, 600, 601, 602, 0, 570, 0, 197,
	461, 198, 462, 199, 200, 201, 202, 203, 0, 0,
	204, 588, 463, 205, 464, 0, 206, 207, 411, 0,
	0, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 412, 356, 465, 357,
	222, 223, 358, 533, 224, 225, 226, 559, 585, 227,
	603, 228, 229, 230, 0, 231, 0, 0, 232, 233,
	0, 0, 234, 361, 466, 235, 467, 580, 236, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 581, 245,
	364, 248, 246, 247, 0, 249, 250, 251, 252, 253,
	254, 255, 256, 604, 257, 258, 259, 260, 0, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
	0, 272, 273, 468, 274, 275, 548, 276, 0, 277,
	278, 279, 280, 281, 0, 282, 283, 284, 285, 413,
	576, 286, 287, 288, 289, 469, 290, 291, 605, 292,
	0, 293, 294, 295, 296, 297, 298, 299, 300, 368,
	301, 0, 582, 0, 302, 303, 0, 304, 305, 0,
	415, 606, 0, 0, 414, 306, 583, 307, 584, 557,
	308, 309, 310, 311, 312, 313, 314, 0, 536, 315,
	316, 317, 318, 319, 577, 0, 320, 321, 322, 323,
	373, 607, 0, 324, 470, 325, 0, 0, 0, 0,
	326, 327, 328, 329, 330, 331, 332, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 531,
	0, 0, 0, 0, 532, 0, 0, 540, 563, 551,
	552, 553, 550, 539, 0, 0, 0, 0, 0, 0,
	90, 91, 92, 93, 94, 95, 96, 0, 97, 98,
	99, 0, 0, 0, 0, 545, 0, 0, 100, 101,
	0, 102, 103, 453, 104, 105, 106, 333, 590, 454,
	591, 0, 592, 593, 0, 107, 338, 108, 109, 110,
	111, 560, 578, 112, 594, 595, 113, 0, 114, 115,
	116, 117, 586, 0, 571, 0, 118, 119, 120, 121,
	122, 0, 456, 123, 124, 125, 0, 126, 127, 128,
	129, 130, 131, 0, 0, 457, 132, 133, 1751, 0,
	572, 574, 0, 573, 575, 135, 136, 137, 138, 139,
	596, 140, 141, 597, 598, 142, 0, 143, 0, 144,
	145, 146, 147, 148, 0, 149, 150, 151, 0, 0,
	152, 589, 154, 155, 0, 156, 157, 158, 0, 159,
	0, 160, 0, 161, 162, 544, 163, 164, 165, 579,
	558, 166, 0, 167, 168, 599, 169, 0, 170, 0,
	171, 458, 0, 459, 172, 173, 174, 0, 175, 176,
	587, 0, 349, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 0, 187, 188, 0, 189, 190,
	191, 0, 192, 460, 350, 193, 194, 195, 196, 600,
	601, 602, 0, 570, 0, 197, 461, 198, 462, 199,
	200, 201, 202, 203, 0, 0, 204, 588, 463, 205,
	464, 0, 206, 207, 411, 0, 0, 208, 209, 210,
	211, 0, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 412, 356, 465, 357, 222, 223, 358, 533,
	224, 225, 226, 559, 585, 227, 603, 228, 229, 230,
	0, 231, 0, 0, 232, 233, 0, 0, 234, 361,
	466, 235, 467, 580, 236, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 581, 245, 364, 248, 246, 247,
	0, 249, 250, 251, 252, 253, 254, 255, 256, 604,
	257, 258, 259, 260, 0, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 0, 272, 273, 468,
	274, 275, 548, 276, 0, 277, 278, 279, 280, 281,
	0, 282, 283, 284, 285, 413, 576, 286, 287, 288,
	289, 469, 290, 291, 605, 292, 0, 293, 294, 295,
	296, 297, 298, 299, 300, 368, 301, 0, 582, 0,
	302, 303, 0, 304, 305, 0, 415, 606, 0, 0,
	414, 306, 583, 307, 584, 557, 308, 309, 310, 311,
	1750, 313, 314, 0, 536, 315, 316, 317, 318, 319,
	577, 0, 320, 321, 322, 323, 373, 607, 0, 324,
	470, 325, 0, 0, 0, 0, 326, 327, 328, 329,
	330, 331, 332, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 531, 0, 0, 0, 0,
	532, 0, 0, 540, 563, 551, 552, 553, 550, 539,
	0, 0, 0, 0, 0, 0, 90, 91, 92, 93,
	94, 95, 96, 0, 97, 98, 99, 0, 0, 0,
	0, 545, 0, 0, 100, 101, 0, 102, 103, 453,
	104, 105, 106, 1749, 590, 454, 591, 0, 592, 593,
	0, 107, 338, 108, 109, 110, 111, 560, 578, 112,
	594, 595, 113, 0, 114, 115, 116, 117, 586, 0,
	571, 0, 118, 119, 120, 121, 122, 0, 456, 123,
	124, 125, 0, 126, 127, 128, 129, 130, 131, 0,
	0, 457, 132, 133, 1751, 0, 572, 574, 0, 573,
	575, 135, 136, 137, 138, 139, 596, 140, 141, 597,
	598, 142, 0, 143, 0, 144, 145, 146, 147, 148,
	0, 149, 150, 151, 0, 0, 152, 589, 154, 155,
	0, 156, 157, 158, 0, 159, 0, 160, 0, 161,
	162, 544, 163, 164, 165, 579, 558, 166, 0, 167,
	168, 599, 169, 0, 170, 0, 171, 458, 0, 459,
	172, 173, 174, 0, 175, 176, 587, 0, 349, 177,
	0, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	0, 187, 188, 0, 189, 190, 191, 0, 192, 460,
	350, 193, 194, 195, 196, 600, 601, 602, 0, 570,
	0, 197, 461, 198, 462, 199, 200, 201, 202, 203,
	0, 0, 204, 588, 463, 205, 464, 0, 206, 207,
	411, 0, 0, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 412, 356,
	465, 357, 222, 223, 358, 533, 224, 225, 226, 559,
	585, 227, 603, 228, 229, 230, 0, 231, 0, 0,
	232, 233, 0, 0, 234, 361, 466, 235, 467, 580,
	236, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	581, 245, 364, 248, 246, 247, 0, 249, 250, 251,
	252, 253, 254, 255, 256, 604, 257, 258, 259, 260,
	0, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 0, 272, 273, 468, 274, 275, 548, 276,
	0, 277, 278, 279, 280, 281, 0, 282, 283, 284,
	285, 413, 576, 286, 287, 288, 289, 469, 290, 291,
	605, 292, 0, 293, 294, 295, 296, 297, 298, 299,
	300, 368, 301, 0, 582, 0, 302, 303, 0, 304,
	305, 0, 415, 606, 0, 0, 414, 306, 583, 307,
	584, 557, 308, 309, 310, 311, 1750, 313, 314, 0,
	536, 315, 316, 317, 318, 319, 577, 0, 320, 321,
	322, 323, 373, 607, 0, 324, 470, 325, 0, 0,
	0, 0, 326, 327, 328, 329, 330, 331, 332, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	530, 531, 0, 0, 0, 0, 532, 0, 0, 540,
	563, 551, 552, 553, 550, 539, 0, 0, 0, 0,
	0, 0, 90, 91, 92, 93, 94, 95, 96, 0,
	97, 98, 99, 0, 0, 0, 0, 545, 0, 0,
	100, 101, 0, 102, 103, 453, 104, 105, 106, 333,
	590, 454, 591, 0, 592, 593, 0, 107, 338, 108,
	109, 110, 111, 560, 578, 112, 594, 595, 113, 0,
	114, 115, 116, 117, 586, 0, 571, 0, 118, 119,
	120, 121, 122, 0, 456, 123, 124, 125, 0, 126,
	127, 128, 129, 130, 131, 0, 0, 457, 132, 133,
	134, 0, 572, 574, 0, 573, 575, 135, 136, 137,
	138, 139, 596, 140, 141, 597, 598, 142, 0, 143,
	0, 144, 145, 146, 147, 148, 0, 149, 150, 151,
	0, 0, 152, 589, 154, 155, 0, 156, 157, 158,
	0, 159, 0, 160, 0, 161, 162, 544, 163, 164,
	165, 579, 558, 166, 0, 167, 168, 599, 169, 0,
	170, 0, 171, 458, 0, 459, 172, 173, 174, 0,
	175, 176, 587, 0, 349, 177, 0, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 0, 187, 188, 0,
	189, 190, 191, 0, 192, 460, 350, 193, 194, 195,
	196, 600, 601, 602, 0, 570, 0, 197, 461, 198,
	462, 199, 200, 201, 202, 203, 0, 0, 204, 588,
	463, 205, 464, 0, 206, 207, 411, 0, 0, 208,
	209, 210, 211, 0, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 412, 356, 465, 357, 222, 223,
	358, 533, 224, 225, 226, 559, 585, 227, 603, 228,
	229, 230, 0, 231, 0, 0, 232, 233, 0, 0,
	234, 361, 466, 235, 467, 580, 236, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 581, 245, 364, 248,
	246, 247, 0, 249, 250, 251, 252, 253, 254, 255,
	256, 604, 257, 258, 259, 260, 0, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271, 0, 272,
	273, 468, 274, 275, 548, 276, 0, 277, 278, 279,
	280, 281, 0, 282, 283, 284, 285, 413, 576, 286,
	287, 288, 289, 469, 290, 291, 605, 292, 0, 293,
	294, 295, 296, 297, 298, 299, 300, 368, 301, 0,
	582, 0, 302, 303, 0, 304, 305, 0, 415, 606,
	0, 0, 414, 306, 583, 307, 584, 557, 308, 309,
	310, 311, 312, 313, 314, 0, 536, 315, 316, 317,
	318, 319, 577, 0, 320, 321, 322, 323, 373, 607,
	0, 324, 470, 325, 0, 0, 0, 0, 326, 327,
	328, 329, 330, 331, 332, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 530, 531, 0, 0,
	0, 0, 532, 0, 0, 540, 563, 551, 552, 553,
	550, 539, 0, 0, 0, 0, 0, 0, 90, 91,
	92, 93, 94, 95, 96, 0, 97, 98, 99, 0,
	0, 0, 0, 545, 0, 0, 100, 101, 0, 102,
	103, 453, 104, 105, 106, 333, 590, 454, 591, 0,
	592, 593, 0, 107, 338, 108, 109, 110, 111, 560,
	578, 112, 594, 595, 113, 0, 114, 115, 116, 117,
	586, 0, 571, 0, 118, 119, 120, 121, 122, 0,
	456, 123, 124, 125, 0, 126, 127, 128, 129, 130,
	131, 0, 0, 457, 132, 133, 134, 0, 572, 574,
	0, 573, 575, 135, 136, 137, 138, 139, 596, 140,
	141, 597, 598, 142, 0, 143, 0, 144, 145, 146,
	147, 148, 0, 149, 150, 151, 0, 0, 152, 589,
	154, 155, 0, 156, 157, 158, 0, 159, 0, 160,
	0, 161, 162, 544, 163, 164, 165, 579, 558, 166,
	0, 167, 168, 599, 169, 0, 170, 0, 171, 458,
	0, 459, 172, 173, 174, 0, 175, 176, 587, 0,
	349, 177, 0, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 0, 187, 188, 0, 189, 190, 191, 0,
	192, 460, 350, 193, 194, 195, 196, 600, 601, 602,
	0, 570, 0, 197, 461, 198, 462, 199, 200, 201,
	202, 203, 0, 0, 204, 588, 463, 205, 464, 0,
	206, 207, 411, 0, 0, 208, 209, 210, 211, 0,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	412, 356, 465, 357, 222, 223, 358, 533, 224, 225,
	226, 559, 585, 227, 603, 228, 229, 230, 0, 231,
	0, 0, 232, 233, 0, 0, 234, 361, 466, 235,
	467, 580, 236, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 581, 245, 364, 248, 246, 247, 0, 249,
	250, 251, 252, 253, 254, 255, 256, 604, 257, 258,
	259, 260, 0, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 0, 272, 273, 468, 274, 275,
	548, 276, 0, 277, 278, 279, 280, 281, 0, 282,
	283, 284, 285, 413, 576, 286, 287, 288, 289, 469,
	290, 291, 605, 292, 0, 293, 294, 295, 296, 297,
	298, 299, 300, 368, 301, 0, 582, 0, 302, 303,
	0, 304, 305, 0, 415, 606, 0, 0, 414, 306,
	583, 307, 584, 557, 308, 309, 310, 311, 312, 313,
	314, 0, 536, 315, 316, 317, 318, 319, 577, 0,
	320, 321, 322, 323, 373, 607, 0, 324, 470, 325,
	0, 0, 0, 0, 326, 327, 328, 329, 330, 331,
	332, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 530, 531, 0, 0, 0, 0, 532, 0,
	0, 1557, 563, 551, 552, 553, 550, 539, 0, 0,
	0, 0, 0, 0, 90, 91, 92, 93, 94, 95,
	96, 0, 97, 98, 99, 0, 0, 0, 0, 545,
	0, 0, 100, 101, 0, 102, 103, 453, 104, 105,
	106, 333, 590, 454, 591, 0, 592, 593, 0, 107,
	338, 108, 109, 110, 111, 560, 578, 112, 594, 595,
	113, 0, 114, 115, 116, 117, 586, 0, 571, 0,
	118, 119, 120, 121, 122, 0, 456, 123, 124, 125,
	0, 126, 127, 128, 129, 130, 131, 0, 0, 457,
	132, 133, 134, 0, 572, 574, 0, 573, 575, 135,
	136, 137, 138, 139, 596, 140, 141, 597, 598, 142,
	0, 143, 0, 144, 145, 146, 147, 148, 0, 149,
	150, 151, 0, 0, 152, 589, 154, 155, 0, 156,
	157, 158, 0, 159, 0, 160, 0, 161, 162, 544,
	163, 164, 165, 579, 558, 166, 0, 167, 168, 599,
	169, 0, 170, 0, 171, 458, 0, 459, 172, 173,
	174, 0, 175, 176, 587, 0, 349, 177, 0, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 0, 187,
	188, 0, 189, 190, 191, 0, 192, 460, 350, 193,
	194, 195, 196, 600, 601, 602, 0, 570, 0, 197,
	461, 198, 462, 199, 200, 201, 202, 203, 0, 0,
	204, 588, 463, 205, 464, 0, 206, 207, 411, 0,
	0, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 412, 356, 465, 357,
	222, 223, 358, 0, 224, 225, 226, 559, 585, 227,
	603, 228, 229, 230, 0, 231, 0, 0, 232, 233,
	0, 0, 234, 361, 466, 235, 467, 580, 236, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 581, 245,
	364, 248, 246, 247, 0, 249, 250, 251, 252, 253,
	254, 255, 256, 604, 257, 258, 259, 260, 0, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
	0, 272, 273, 468, 274, 275, 1138, 276, 0, 277,
	278, 279, 280, 281, 0, 282, 283, 284, 285, 413,
	576, 286, 287, 288, 289, 469, 290, 291, 605, 292,
	0, 293, 294, 295, 296, 297, 298, 299, 300, 368,
	301, 0, 582, 0, 302, 303, 0, 304, 305, 0,
	415, 606, 0, 0, 414, 306, 583, 307, 584, 557,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 315,
	316, 317, 318, 319, 577, 0, 320, 321, 322, 323,
	373, 607, 0, 324, 470, 325, 0, 0, 0, 0,
	326, 327, 328, 329, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1134, 1135,
	0, 0, 0, 0, 1136, 0, 0, 1137, 563, 551,
	552, 553, 550, 539, 0, 0, 0, 0, 0, 0,
	90, 91, 92, 93, 94, 95, 96, 0, 97, 98,
	99, 0, 0, 0, 0, 545, 0, 0, 100, 101,
	0, 102, 103, 453, 104, 105, 106, 0, 590, 454,
	591, 0, 592, 593, 0, 107, 338, 108, 109, 110,
	111, 560, 578, 112, 594, 595, 113, 0, 114, 115,
	116, 117, 586, 0, 571, 0, 118, 119, 120, 121,
	122, 0, 456, 123, 124, 125, 0, 126, 127, 128,
	129, 130, 131, 0, 0, 457, 132, 133, 1751, 0,
	572, 574, 0, 573, 575, 135, 136, 137, 138, 139,
	596, 140, 141, 597, 598, 142, 0, 143, 0, 144,
	145, 146, 147, 148, 0, 149, 150, 151, 0, 0,
	152, 589, 154, 155, 0, 156, 157, 158, 0, 159,
	0, 160, 0, 161, 162, 544, 163, 164, 165, 579,
	558, 166, 0, 167, 168, 599, 169, 0, 170, 0,
	171, 458, 0, 459, 172, 173, 174, 0, 175, 176,
	587, 0, 349, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 0, 187, 188, 0, 189, 190,
	191, 0, 192, 460, 350, 193, 194, 195, 196, 600,
	601, 602, 0, 570, 0, 197, 0, 198, 462, 199,
	200, 201, 202, 203, 0, 0, 204, 588, 463, 205,
	0, 0, 206, 207, 411, 0, 0, 208, 209, 210,
	211, 0, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 412, 356, 465, 357, 222, 223, 358, 533,
	224, 225, 226, 559, 585, 227, 603, 228, 229, 230,
	0, 231, 0, 0, 232, 233, 0, 0, 234, 361,
	466, 235, 467, 580, 236, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 581, 245, 364, 248, 246, 247,
	0, 249, 250, 251, 252, 253, 254, 255, 256, 604,
	257, 258, 259, 260, 0, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 0, 272, 273, 468,
	274, 275, 548, 276, 0, 277, 278, 279, 280, 281,
	0, 282, 283, 284, 285, 413, 576, 286, 287, 288,
	289, 0, 290, 291, 605, 292, 0, 293, 294, 295,
	296, 297, 298, 299, 300, 368, 301, 0, 582, 0,
	302, 303, 0, 304, 305, 0, 415, 606, 0, 0,
	414, 306, 583, 307, 584, 557, 308, 309, 310, 311,
	1750, 313, 314, 0, 536, 315, 316, 317, 318, 319,
	577, 0, 320, 321, 322, 323, 373, 607, 0, 324,
	470, 325, 0, 0, 0, 0, 326, 327, 328, 329,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 563, 0, 530, 531, 0, 0, 0, 0,
	532, 0, 0, 540, 90, 91, 92, 93, 94, 95,
	96, 0, 97, 98, 99, 0, 0, 0, 0, 0,
	0, 0, 100, 101, 0, 102, 103, 453, 104, 105,
	106, 333, 334, 454, 335, 0, 336, 337, 0, 107,
	338, 108, 109, 110, 111, 0, 578, 112, 339, 340,
	113, 0, 114, 115, 116, 117, 586, 0, 571, 0,
	118, 119, 120, 121, 122, 0, 456, 123, 124, 125,
	0, 126, 127, 128, 129, 130, 131, 0, 0, 457,
	132, 133, 134, 0, 572, 574, 0, 573, 575, 135,
	136, 137, 138, 139, 342, 140, 141, 343, 344, 142,
	0, 143, 0, 144, 145, 146, 147, 148, 0, 149,
	150, 151, 0, 0, 152, 153, 154, 155, 0, 156,
	157, 158, 0, 159, 0, 160, 0, 161, 162, 345,
	163, 164, 165, 579, 0, 166, 0, 167, 168, 347,
	169, 0, 170, 0, 171, 458, 0, 459, 172, 173,
	174, 0, 175, 176, 587, 0, 349, 177, 0, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 0, 187,
	188, 0, 189, 190, 191, 0, 192, 460, 350, 193,
	194, 195, 196, 351, 352, 353, 0, 354, 0, 197,
	461, 198, 462, 199, 200, 201, 202, 203, 0, 0,
	204, 588, 463, 205, 464, 0, 206, 207, 411, 0,
	0, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 412, 356, 465, 357,
	222, 223, 358, 0, 224, 225, 226, 0, 585, 227,
	360, 228, 229, 230, 0, 231, 0, 0, 232, 233,
	0, 0, 234, 361, 466, 235, 467, 580, 236, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 581, 245,
	364, 248, 246, 247, 0, 249, 250, 251, 252, 253,
	254, 255, 256, 365, 257, 258, 259, 260, 0, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
	0, 272, 273, 468, 274, 275, 366, 276, 0, 277,
	278, 279, 280, 281, 0, 282, 283, 284, 285, 413,
	576, 286, 287, 288, 289, 469, 290, 291, 367, 292,
	0, 293, 294, 295, 296, 297, 298, 299, 300, 368,
	301, 0, 582, 0, 302, 303, 0, 304, 305, 0,
	415, 370, 0, 0, 414, 306, 583, 307, 584, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 315,
	316, 317, 318, 319, 577, 0, 320, 321, 322, 323,
	373, 374, 0, 324, 470, 325, 0, 0, 448, 0,
	326, 327, 328, 329, 330, 331, 332, 0, 0, 0,
	90, 91, 92, 93, 94, 95, 96, 0, 97, 98,
	99, 0, 0, 0, 0, 0, 0, 1545, 100, 101,
	0, 102, 103, 453, 104, 105, 106, 333, 334, 454,
	335, 0, 336, 337, 0, 107, 338, 108, 109, 110,
	111, 0, 0, 112, 339, 340, 113, 0, 114, 115,
	116, 117, 341, 0, 455, 0, 118, 119, 120, 121,
	122, 0, 456, 123, 124, 125, 0, 126, 127, 128,
	129, 130, 131, 0, 0, 457, 132, 133, 134, 0,
	0, 0, 0, 0, 0, 135, 136, 137, 138, 139,
	342, 140, 141, 343, 344, 142, 0, 143, 0, 144,
	145, 146, 147, 148, 0, 149, 150, 151, 0, 0,
	152, 153, 154, 155, 0, 156, 157, 158, 0, 159,
	0, 160, 0, 161, 162, 345, 163, 164, 165, 346,
	0, 166, 0, 167, 168, 347, 169, 0, 170, 0,
	171, 458, 0, 459, 172, 173, 174, 0, 175, 176,
	348, 0, 349, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 0, 187, 188, 0, 189, 190,
	191, 0, 192, 460, 350, 193, 194, 195, 196, 351,
	352, 353, 0, 354, 0, 197, 461, 198, 462, 199,
	200, 201, 202, 203, 0, 0, 204, 355, 463, 205,
	464, 0, 206, 207, 411, 0, 0, 208, 209, 210,
	211, 0, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 412, 356, 465, 357, 222, 223, 358, 0,
	224, 225, 226, 0, 359, 227, 360, 228, 229, 230,
	0, 231, 0, 0, 232, 233, 0, 0, 234, 361,
	466, 235, 467, 362, 236, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 363, 245, 364, 248, 246, 247,
	0, 249, 250, 251, 252, 253, 254, 255, 256, 365,
	257, 258, 259, 260, 0, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 0, 272, 273, 468,
	274, 275, 366, 276, 0, 277, 278, 279, 280, 281,
	43, 282, 283, 284, 285, 413, 0, 286, 287, 288,
	289, 469, 290, 291, 367, 292, 0, 293, 294, 295,
	296, 297, 298, 299, 300, 368, 301, 0, 369, 0,
	302, 303, 45, 304, 305, 0, 415, 370, 0, 0,
	414, 306, 371, 307, 372, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 315, 316, 317, 318, 319,
	0, 0, 320, 321, 322, 323, 452, 374, 0, 324,
	470, 325, 0, 0, 0, 41, 326, 327, 328, 329,
	330, 331, 332, 0, 0, 42, 0, 0, 0, 0,
	0, 0, 448, 673, 677, 0, 678, 668, 0, 0,
	0, 0, 0, 40, 90, 91, 92, 93, 94, 95,
	96, 0, 97, 98, 99, 0, 0, 0, 0, 0,
	0, 0, 100, 101, 0, 102, 103, 453, 104, 105,
	106, 333, 334, 454, 335, 0, 336, 337, 0, 107,
	338, 108, 109, 110, 111, 0, 0, 112, 339, 340,
	113, 0, 114, 115, 116, 117, 341, 0, 455, 0,
	118, 119, 120, 121, 122, 0, 456, 123, 124, 125,
	0, 126, 127, 128, 129, 130, 131, 0, 0, 457,
	132, 133, 134, 0, 0, 0, 0, 0, 0, 135,
	136, 137, 138, 139, 342, 140, 141, 343, 344, 142,
	681, 143, 0, 144, 145, 146, 147, 148, 0, 149,
	150, 151, 0, 0, 152, 153, 154, 155, 0, 156,
	157, 158, 0, 159, 0, 160, 0, 161, 162, 345,
	163, 164, 165, 346, 670, 166, 0, 167, 168, 347,
	169, 0, 170, 0, 171, 458, 0, 459, 172, 173,
	174, 0, 175, 176, 348, 0, 349, 177, 0, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 0, 187,
	188, 0, 189, 190, 191, 0, 192, 460, 350, 193,
	194, 195, 196, 351, 352, 353, 0, 354, 0, 197,
	461, 198, 462, 199, 200, 201, 202, 203, 0, 0,
	204, 355, 463, 205, 464, 0, 206, 207, 411, 0,
	0, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 412, 356, 465, 357,
	222, 223, 358, 0, 224, 225, 226, 0, 359, 227,
	360, 228, 229, 230, 0, 231, 671, 0, 232, 233,
	0, 0, 234, 361, 466, 235, 467, 362, 236, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 363, 245,
	364, 248, 246, 247, 0, 249, 250, 251, 252, 253,
	254, 255, 256, 365, 257, 258, 259, 260, 0, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
	0, 272, 273, 468, 274, 275, 366, 276, 0, 277,
	278, 279, 280, 281, 0, 282, 283, 284, 285, 413,
	0, 286, 287, 288, 289, 469, 290, 291, 367, 292,
	0, 293, 294, 295, 296, 297, 298, 299, 300, 368,
	301, 0, 369, 0, 302, 303, 0, 304, 305, 0,
	415, 370, 0, 0, 414, 306, 371, 307, 372, 669,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 315,
	316, 317, 318, 319, 0, 0, 320, 321, 322, 323,
	373, 374, 0, 324, 470, 325, 0, 0, 0, 0,
	326, 327, 328, 329, 330, 331, 332, 0, 448, 673,
	677, 0, 678, 668, 0, 0, 0, 0, 679, 674,
	90, 91, 92, 93, 94, 95, 96, 0, 97, 98,
	99, 0, 0, 0, 0, 0, 0, 0, 100, 101,
	0, 102, 103, 453, 104, 105, 106, 333, 334, 454,
	335, 0, 336, 337, 0, 107, 338, 108, 109, 110,
	111, 0, 0, 112, 339, 340, 113, 0, 114, 115,
	116, 117, 341, 0, 455, 0, 118, 119, 120, 121,
	122, 0, 456, 123, 124, 125, 0, 126, 127, 128,
	129, 130, 131, 0, 0, 457, 132, 133, 134, 0,
	0, 0, 0, 0, 0, 135, 136, 137, 138, 139,
	342, 140, 141, 343, 344, 142, 664, 143, 0, 144,
	145, 146, 147, 148, 0, 149, 150, 151, 0, 0,
	152, 153, 154, 155, 0, 156, 157, 158, 0, 159,
	0, 160, 0, 161, 162, 345, 163, 164, 165, 346,
	670, 166, 0, 167, 168, 347, 169, 0, 170, 0,
	171, 458, 0, 459, 172, 173, 174, 0, 175, 176,
	348, 0, 349, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 0, 187, 188, 0, 189, 190,
	191, 0, 192, 460, 350, 193, 194, 195, 196, 351,
	352, 353, 0, 354, 0, 197, 461, 198, 462, 199,
	200, 201, 202, 203, 0, 0, 204, 355, 463, 205,
	464, 0, 206, 207, 411, 0, 0, 208, 209, 210,
	211, 0, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 412, 356, 465, 357, 222, 223, 358, 0,
	224, 225, 226, 0, 359, 227, 360, 228, 229, 230,
	0, 231, 671, 0, 232, 233, 0, 0, 234, 361,
	466, 235, 467, 362, 236, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 363, 245, 364, 248, 246, 247,
	0, 249, 250, 251, 252, 253, 254, 255, 256, 365,
	257, 258, 259, 260, 0, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 0, 272, 273, 468,
	274, 275, 366, 276, 0, 277, 278, 279, 280, 281,
	0, 282, 283, 284, 285, 413, 0, 286, 287, 288,
	289, 469, 290, 291, 367, 292, 0, 293, 294, 295,
	296, 297, 298, 299, 300, 368, 301, 0, 369, 0,
	302, 303, 0, 304, 305, 0, 415, 370, 0, 0,
	414, 306, 371, 307, 372, 669, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 315, 316, 317, 318, 319,
	0, 0, 320, 321, 322, 323, 373, 374, 0, 324,
	470, 325, 0, 0, 0, 0, 326, 327, 328, 329,
	330, 331, 332, 0, 448, 673, 677, 0, 678, 668,
	0, 0, 0, 0, 679, 674, 90, 91, 92, 93,
	94, 95, 96, 0, 97, 98, 99, 0, 0, 0,
	0, 0, 0, 0, 100, 101, 0, 102, 103, 453,
	104, 105, 106, 333, 334, 454, 335, 0, 336, 337,
	0, 107, 338, 108, 109, 110, 111, 0, 0, 112,
	339, 340, 113, 0, 114, 115, 116, 117, 341, 0,
	455, 0, 118, 119, 120, 121, 122, 0, 456, 123,
	124, 125, 0, 126, 127, 128, 129, 130, 131, 0,
	0, 457, 132, 133, 134, 0, 0, 0, 0, 0,
	0, 135, 136, 137, 138, 139, 342, 140, 141, 343,
	344, 142, 0, 143, 0, 144, 145, 146, 147, 148,
	0, 149, 150, 151, 0, 0, 152, 153, 154, 155,
	0, 156, 157, 158, 0, 159, 0, 160, 0, 161,
	162, 345, 163, 164, 165, 346, 670, 166, 0, 167,
	168, 347, 169, 0, 170, 0, 171, 458, 0, 459,
	172, 173, 174, 0, 175, 176, 348, 0, 349, 177,
	0, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	0, 187, 188, 0, 189, 190, 191, 0, 192, 460,
	350, 193, 194, 195, 196, 351, 352, 353, 0, 354,
	0, 197, 461, 198, 462, 199, 200, 201, 202, 203,
	0, 0, 204, 355, 463, 205, 464, 0, 206, 207,
	411, 0, 0, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 412, 356,
	465, 357, 222, 223, 358, 0, 224, 225, 226, 0,
	359, 227, 360, 228, 229, 230, 0, 231, 671, 0,
	232, 233, 0, 0, 234, 361, 466, 235, 467, 362,
	236, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	363, 245, 364, 248, 246, 247, 0, 249, 250, 251,
	252, 253, 254, 255, 256, 365, 257, 258, 259, 260,
	0, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 0, 272, 273, 468, 274, 275, 366, 276,
	0, 277, 278, 279, 280, 281, 0, 282, 283, 284,
	285, 413, 0, 286, 287, 288, 289, 469, 290, 291,
	367, 292, 0, 293, 294, 295, 296, 297, 298, 299,
	300, 368, 301, 0, 369, 0, 302, 303, 0, 304,
	305, 0, 415, 370, 0, 0, 414, 306, 371, 307,
	372, 669, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 315, 316, 317, 318, 319, 0, 0, 320, 321,
	322, 323, 373, 374, 0, 324, 470, 325, 0, 0,
	0, 0, 326, 327, 328, 329, 330, 331, 332, 0,
	87, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	679, 674, 90, 91, 92, 93, 94, 95, 96, 0,
	97, 98, 99, 0, 0, 0, 0, 0, 0, 0,
	100, 101, 0, 102, 103, 0, 104, 105, 106, 333,
	334, 0, 335, 0, 336, 337, 0, 107, 338, 108,
	109, 110, 111, 0, 0, 112, 339, 340, 113, 0,
	114, 115, 116, 117, 341, 0, 0, 0, 118, 119,
	120, 121, 122, 0, 0, 123, 124, 125, 0, 126,
	127, 128, 129, 130, 131, 0, 0, 0, 132, 133,
	134, 0, 0, 0, 0, 0, 0, 135, 136, 137,
	138, 139, 342, 140, 141, 343, 344, 142, 0, 143,
	0, 144, 145, 146, 147, 148, 0, 149, 150, 151,
	0, 0, 152, 153, 154, 155, 0, 156, 157, 158,
	0, 159, 0, 160, 0, 161, 162, 345, 163, 164,
	165, 346, 0, 166, 0, 167, 168, 347, 169, 0,
	170, 0, 171, 0, 0, 0, 172, 173, 174, 0,
	175, 176, 348, 0, 349, 177, 0, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 0, 187, 188, 0,
	189, 190, 191, 0, 192, 0, 350, 193, 194, 195,
	196, 351, 352, 353, 0, 354, 0, 197, 0, 198,
	0, 199, 200, 201, 202, 203, 0, 0, 204, 355,
	0, 205, 0, 0, 206, 207, 411, 0, 0, 208,
	209, 210, 211, 0, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 412, 356, 0, 357, 222, 223,
	358, 0, 224, 225, 226, 0, 359, 227, 360, 228,
	229, 230, 0, 231, 0, 424, 232, 233, 0, 0,
	234, 361, 0, 235, 0, 362, 236, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 363, 245, 364, 248,
	246, 247, 0, 249, 250, 251, 252, 253, 254, 255,
	256, 365, 257, 258, 259, 260, 0, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271, 0, 272,
	273, 0, 274, 275, 366, 276, 0, 277, 278, 279,
	280, 281, 43, 282, 283, 284, 285, 413, 0, 286,
	287, 288, 289, 0, 290, 291, 367, 292, 0, 293,
	294, 295, 296, 297, 298, 299, 300, 368, 301, 0,
	369, 0, 302, 303, 45, 304, 305, 0, 415, 370,
	0, 0, 414, 306, 371, 307, 372, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 315, 316, 317,
	318, 319, 0, 0, 320, 321, 322, 323, 452, 374,
	0, 324, 0, 325, 0, 0, 87, 41, 326, 327,
	328, 329, 330, 331, 332, 0, 0, 42, 90, 91,
	92, 93, 94, 95, 96, 0, 97, 98, 99, 0,
	0, 0, 0, 0, 0, 1003, 100, 101, 0, 102,
	103, 0, 104, 105, 106, 333, 334, 0, 335, 0,
	336, 337, 0, 107, 338, 108, 109, 110, 111, 0,
	0, 112, 339, 340, 113, 0, 114, 115, 116, 117,
	341, 0, 0, 0, 118, 119, 120, 121, 122, 0,
	0, 123, 124, 125, 0, 126, 127, 128, 129, 130,
	131, 0, 0, 0, 132, 133, 134, 0, 0, 0,
	0, 0, 0, 135, 136, 137, 138, 139, 342, 140,
	141, 343, 344, 142, 0, 143, 0, 144, 145, 146,
	147, 148, 0, 149, 150, 151, 0, 0, 152, 153,
	154, 155, 0, 156, 157, 158, 0, 159, 0, 160,
	0, 161, 162, 345, 163, 164, 165, 346, 0, 166,
	0, 167, 168, 347, 169, 0, 170, 0, 171, 0,
	0, 0, 172, 173, 174, 0, 175, 176, 348, 0,
	349, 177, 0, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 0, 187, 188, 0, 189, 190, 191, 0,
	192, 0, 350, 193, 194, 195, 196, 351, 352, 353,
	0, 354, 0, 197, 0, 198, 0, 199, 200, 201,
	202, 203, 0, 0, 204, 355, 0, 205, 0, 0,
	206, 207, 411, 0, 0, 208, 209, 210, 211, 0,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	412, 356, 0, 357, 222, 223, 358, 0, 224, 225,
	226, 0, 359, 227, 360, 228, 229, 230, 0, 231,
	0, 0, 232, 233, 0, 0, 234, 361, 0, 235,
	0, 362, 236, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 363, 245, 364, 248, 246, 247, 0, 249,
	250, 251, 252, 253, 254, 255, 256, 365, 257, 258,
	259, 260, 0, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 0, 272, 273, 0, 274, 275,
	366, 276, 0, 277, 278, 279, 280, 281, 43, 282,
	283, 284, 285, 413, 0, 286, 287, 288, 289, 0,
	290, 291, 367, 292, 0, 293, 294, 295, 296, 297,
	298, 299, 300, 368, 301, 0, 369, 0, 302, 303,
	45, 304, 305, 0, 415, 370, 0, 0, 414, 306,
	371, 307, 372, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 315, 316, 317, 318, 319, 0, 0,
	320, 321, 322, 323, 452, 374, 0, 324, 0, 325,
	0, 0, 87, 41, 326, 327, 328, 329, 330, 331,
	332, 0, 0, 42, 90, 91, 92, 93, 94, 95,
	96, 0, 97, 98, 99, 0, 0, 0, 0, 0,
	1240, 40, 100, 101, 0, 102, 103, 0, 104, 105,
	106, 333, 334, 0, 335, 0, 336, 337, 0, 107,
	338, 108, 109, 110, 111, 0, 0, 112, 339, 340,
	113, 0, 114, 115, 116, 117, 341, 0, 0, 0,
	118, 119, 120, 121, 122, 0, 0, 123, 124, 125,
	0, 126, 127, 128, 129, 130, 131, 0, 0, 0,
	132, 133, 134, 0, 0, 0, 0, 0, 0, 135,
	136, 137, 138, 139, 342, 140, 141, 343, 344, 142,
	0, 143, 0, 144, 145, 146, 147, 148, 0, 149,
	150, 151, 0, 0, 152, 153, 154, 155, 0, 156,
	157, 158, 0, 159, 0, 160, 0, 161, 162, 345,
	163, 164, 165, 346, 0, 166, 0, 167, 168, 347,
	169, 0, 170, 0, 171, 0, 0, 0, 172, 173,
	174, 0, 175, 176, 348, 0, 349, 177, 0, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 0, 187,
	188, 0, 189, 190, 191, 0, 192, 0, 350, 193,
	194, 195, 196, 351, 352, 353, 0, 354, 0, 197,
	0, 198, 0, 199, 200, 201, 202, 203, 0, 0,
	204, 355, 0, 205, 0, 0, 206, 207, 411, 0,
	0, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 412, 356, 0, 357,
	222, 223, 358, 0, 224, 225, 226, 0, 359, 227,
	360, 228, 229, 230, 0, 231, 0, 0, 232, 233,
	0, 0, 234, 361, 0, 235, 0, 362, 236, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 363, 245,
	364, 248, 246, 247, 0, 249, 250, 251, 252, 253,
	254, 255, 256, 365, 257, 258, 259, 260, 0, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
	0, 272, 273, 0, 274, 275, 366, 276, 0, 277,
	278, 279, 280, 281, 0, 282, 283, 284, 285, 413,
	0, 286, 287, 288, 289, 0, 290, 291, 367, 292,
	0, 293, 294, 295, 296, 297, 298, 299, 300, 368,
	301, 0, 369, 0, 302, 303, 0, 304, 305, 0,
	415, 370, 0, 0, 414, 306, 371, 307, 372, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 315,
	316, 317, 318, 319, 0, 0, 320, 321, 322, 323,
	373, 374, 0, 324, 0, 325, 87, 0, 0, 0,
	326, 327, 328, 329, 330, 331, 332, 0, 90, 91,
	92, 93, 94, 95, 96, 0, 97, 98, 99, 0,
	0, 0, 0, 0, 0, 0, 100, 101, 519, 102,
	103, 0, 104, 105, 106, 333, 334, 0, 335, 0,
	336, 337, 0, 107, 338, 108, 109, 110, 111, 0,
	0, 112, 339, 340, 113, 0, 114, 115, 116, 117,
	341, 0, 0, 0, 118, 119, 120, 121, 122, 0,
	0, 123, 124, 125, 0, 126, 127, 128, 129, 130,
	131, 0, 0, 0, 132, 133, 134, 0, 0, 0,
	0, 0, 0, 135, 136, 137, 138, 139, 342, 140,
	141, 343, 344, 142, 0, 143, 0, 144, 145, 146,
	147, 148, 0, 149, 150, 151, 0, 0, 152, 153,
	154, 155, 0, 156, 157, 158, 0, 159, 0, 160,
	0, 161, 162, 345, 163, 164, 165, 346, 0, 166,
	0, 167, 168, 347, 169, 0, 170, 0, 171, 0,
	0, 0, 172, 173, 174, 0, 175, 176, 348, 0,
	349, 177, 0, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 0, 187, 188, 0, 189, 190, 191, 0,
	192, 0, 350, 193, 194, 195, 196, 351, 352, 353,
	0, 354, 0, 197, 0, 198, 0, 199, 200, 201,
	202, 203, 0, 0, 204, 355, 0, 205, 0, 0,
	206, 207, 411, 0, 0, 208, 209, 210, 211, 0,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	412, 356, 0, 357, 222, 223, 358, 0, 224, 225,
	226, 0, 359, 227, 360, 228, 229, 230, 0, 231,
	0, 424, 232, 233, 0, 0, 234, 361, 0, 235,
	0, 362, 236, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 363, 245, 364, 248, 246, 247, 0, 249,
	250, 251, 252, 253, 254, 255, 256, 365, 257, 258,
	259, 260, 0, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 0, 272, 273, 0, 274, 275,
	366, 276, 0, 277, 278, 279, 280, 281, 0, 282,
	283, 284, 285, 413, 0, 286, 287, 288, 289, 0,
	290, 291, 367, 292, 0, 293, 294, 295, 296, 297,
	298, 299, 300, 368, 301, 0, 369, 0, 302, 303,
	0, 304, 305, 0, 415, 370, 0, 0, 414, 306,
	371, 307, 372, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 315, 316, 317, 318, 319, 0, 0,
	320, 321, 322, 323, 373, 374, 0, 324, 0, 325,
	0, 0, 87, 0, 326, 327, 328, 329, 330, 331,
	332, 0, 0, 0, 90, 91, 92, 93, 94, 95,
	96, 0, 97, 98, 99, 0, 0, 0, 0, 0,
	0, 1003, 100, 101, 0, 102, 103, 0, 104, 105,
	106, 333, 334, 0, 335, 0, 336, 337, 0, 107,
	338, 108, 109, 110, 111, 0, 0, 112, 339, 340,
	113, 0, 114, 115, 116, 117, 341, 0, 0, 0,
	118, 119, 120, 121, 122, 0, 0, 123, 124, 125,
	0, 126, 127, 128, 129, 130, 131, 0, 0, 0,
	132, 133, 134, 0, 0, 0, 0, 0, 0, 135,
	136, 137, 138, 139, 342, 140, 141, 343, 344, 142,
	0, 143, 0, 144, 145, 146, 147, 148, 0, 149,
	150, 151, 0, 0, 152, 153, 154, 155, 0, 156,
	157, 158, 0, 159, 0, 160, 0, 161, 162, 345,
	163, 164, 165, 346, 0, 166, 0, 167, 168, 347,
	169, 0, 170, 0, 171, 0, 0, 0, 172, 173,
	174, 0, 175, 176, 348, 0, 349, 177, 0, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 0, 187,
	188, 0, 189, 190, 191, 0, 192, 0, 350, 193,
	194, 195, 196, 351, 352, 353, 0, 354, 0, 197,
	0, 198, 0, 199, 200, 201, 202, 203, 0, 0,
	204, 355, 0, 205, 0, 0, 206, 207, 411, 0,
	0, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 412, 356, 0, 357,
	222, 223, 358, 0, 224, 225, 226, 0, 359, 227,
	360, 228, 229, 230, 0, 231, 0, 0, 232, 233,
	0, 0, 234, 361, 0, 235, 0, 362, 236, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 363, 245,
	364, 248, 246, 247, 0, 249, 250, 251, 252, 253,
	254, 255, 256, 365, 257, 258, 259, 260, 0, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
	0, 272, 273, 0, 274, 275, 366, 276, 0, 277,
	278, 279, 280, 281, 0, 282, 283, 284, 285, 413,
	0, 286, 287, 288, 289, 0, 290, 291, 367, 292,
	0, 293, 294, 295, 296, 297, 298, 299, 300, 368,
	301, 0, 369, 0, 302, 303, 0, 304, 305, 0,
	415, 370, 0, 0, 414, 306, 371, 307, 372, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 315,
	316, 317, 318, 319, 0, 0, 320, 321, 322, 323,
	373, 374, 0, 324, 0, 325, 0, 0, 87, 0,
	326, 327, 328, 329, 330, 331, 332, 0, 0, 0,
	90, 91, 92, 93, 94, 95, 96, 0, 97, 98,
	99, 0, 0, 0, 0, 0, 0, 943, 100, 101,
	0, 102, 103, 0, 104, 105, 106, 333, 334, 0,
	335, 0, 336, 337, 0, 107, 338, 108, 109, 110,
	111, 0, 0, 112, 339, 340, 113, 0, 114, 115,
	116, 117, 341, 0, 0, 0, 118, 119, 120, 121,
	122, 0, 0, 123, 124, 125, 0, 126, 127, 128,
	129, 130, 131, 0, 0, 0, 132, 133, 134, 0,
	0, 0, 0, 0, 0, 135, 136, 137, 138, 139,
	342, 140, 141, 343, 344, 142, 0, 143, 0, 144,
	145, 146, 147, 148, 0, 149, 150, 151, 0, 0,
	152, 153, 154, 155, 0, 156, 157, 158, 0, 159,
	0, 160, 0, 161, 162, 345, 163, 164, 165, 346,
	0, 166, 0, 167, 168, 347, 169, 0, 170, 0,
	171, 0, 0, 0, 172, 173, 174, 0, 175, 176,
	348, 0, 349, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 0, 187, 188, 0, 189, 190,
	191, 0, 192, 0, 350, 193, 194, 195, 196, 351,
	352, 353, 0, 354, 0, 197, 0, 198, 0, 199,
	200, 201, 202, 203, 0, 0, 204, 355, 0, 205,
	0, 0, 206, 207, 411, 0, 0, 208, 209, 210,
	211, 0, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 412, 356, 0, 357, 222, 223, 358, 0,
	224, 225, 226, 0, 359, 227, 360, 228, 229, 230,
	0, 231, 0, 0, 232, 233, 0, 0, 234, 361,
	0, 235, 0, 362, 236, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 363, 245, 364, 248, 246, 247,
	0, 249, 250, 251, 252, 253, 254, 255, 256, 365,
	257, 258, 259, 260, 0, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 0, 272, 273, 0,
	274, 275, 366, 276, 0, 277, 278, 279, 280, 281,
	0, 282, 283, 284, 285, 413, 0, 286, 287, 288,
	289, 0, 290, 291, 367, 292, 0, 293, 294, 295,
	296, 297, 298, 299, 300, 368, 301, 0, 369, 0,
	302, 303, 0, 304, 305, 0, 415, 370, 0, 0,
	414, 306, 371, 307, 372, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 315, 316, 317, 318, 319,
	0, 0, 320, 321, 322, 323, 373, 374, 0, 324,
	0, 325, 0, 0, 87, 0, 326, 327, 328, 329,
	330, 331, 332, 0, 0, 0, 90, 91, 92, 93,
	94, 95, 96, 0, 97, 98, 99, 0, 0, 0,
	0, 0, 0, 1453, 100, 101, 0, 102, 103, 0,
	104, 105, 106, 333, 334, 0, 335, 0, 336, 337,
	0, 107, 338, 108, 109, 110, 111, 0, 0, 112,
	339, 340, 113, 0, 114, 115, 116, 117, 341, 0,
	0, 0, 118, 119, 120, 121, 122, 0, 0, 123,
	124, 125, 0, 126, 127, 128, 129, 130, 131, 0,
	0, 0, 132, 133, 134, 0, 0, 0, 0, 0,
	0, 135, 136, 137, 138, 139, 342, 140, 141, 343,
	344, 142, 0, 143, 0, 144, 145, 146, 147, 148,
	0, 149, 150, 151, 0, 0, 152, 153, 154, 155,
	0, 156, 157, 158, 0, 159, 0, 160, 0, 161,
	162, 345, 163, 164, 165, 346, 0, 166, 0, 167,
	168, 347, 169, 0, 170, 0, 171, 0, 0, 0,
	172, 173, 174, 0, 175, 176, 348, 0, 349, 177,
	0, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	0, 187, 188, 0, 189, 190, 191, 0, 192, 0,
	350, 193, 194, 195, 196, 351, 352, 353, 0, 354,
	0, 197, 0, 198, 0, 199, 200, 201, 202, 203,
	0, 0, 204, 355, 0, 205, 0, 0, 206, 207,
	411, 0, 0, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 412, 356,
	0, 357, 222, 223, 358, 0, 224, 225, 226, 0,
	359, 227, 360, 228, 229, 230, 0, 231, 0, 0,
	232, 233, 0, 0, 234, 361, 0, 235, 0, 362,
	236, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	363, 245, 364, 248, 246, 247, 0, 249, 250, 251,
	252, 253, 254, 255, 256, 365, 257, 258, 259, 260,
	0, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 0, 272, 273, 0, 274, 275, 366, 276,
	0, 277, 278, 279, 280, 281, 0, 282, 283, 284,
	285, 413, 0, 286, 287, 288, 289, 0, 290, 291,
	367, 292, 0, 293, 294, 295, 296, 297, 298, 299,
	300, 368, 301, 0, 369, 0, 302, 303, 0, 304,
	305, 0, 415, 370, 0, 0, 414, 306, 371, 307,
	372, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 315, 316, 317, 318, 319, 0, 0, 320, 321,
	322, 323, 373, 374, 0, 324, 0, 325, 0, 0,
	448, 0, 326, 327, 328, 329, 330, 331, 332, 0,
	0, 0, 90, 91, 92, 93, 94, 95, 96, 0,
	97, 98, 99, 0, 0, 0, 0, 0, 0, 619,
	100, 101, 0, 102, 103, 453, 104, 105, 106, 333,
	334, 454, 335, 0, 336, 337, 0, 107, 338, 108,
	109, 110, 111, 0, 0, 112, 339, 340, 113, 0,
	114, 115, 116, 117, 341, 0, 455, 0, 118, 119,
	120, 121, 122, 0, 456, 123, 124, 125, 0, 126,
	127, 128, 129, 130, 131, 0, 0, 457, 132, 133,
	134, 0, 0, 0, 0, 0, 0, 135, 136, 137,
	138, 139, 342, 140, 141, 343, 344, 142, 0, 143,
	0, 144, 145, 146, 147, 148, 0, 149, 150, 151,
	0, 0, 152, 153, 154, 155, 0, 156, 157, 158,
	0, 159, 0, 160, 0, 161, 162, 345, 163, 164,
	165, 346, 0, 166, 0, 167, 168, 347, 169, 0,
	170, 0, 171, 458, 0, 459, 172, 173, 174, 0,
	175, 176, 348, 0, 349, 177, 0, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 0, 187, 188, 0,
	189, 190, 191, 0, 192, 460, 350, 193, 194, 195,
	196, 351, 352, 353, 0, 354, 0, 197, 461, 198,
	462, 199, 200, 201, 202, 203, 0, 0, 204, 355,
	463, 205, 464, 0, 206, 207, 411, 0, 0, 208,
	209, 210, 211, 0, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 412, 356, 465, 357, 222, 223,
	358, 0, 224, 225, 226, 0, 359, 227, 360, 228,
	229, 230, 0, 231, 0, 0, 232, 233, 0, 0,
	234, 361, 466, 235, 467, 362, 236, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 363, 245, 364, 248,
	246, 247, 0, 249, 250, 251, 252, 253, 254, 255,
	256, 365, 257, 258, 259, 260, 0, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271, 0, 272,
	273, 468, 274, 275, 366, 276, 0, 277, 278, 279,
	280, 281, 0, 282, 283, 284, 285, 413, 0, 286,
	287, 288, 289, 469, 290, 291, 367, 292, 0, 293,
	294, 295, 296, 297, 298, 299, 300, 368, 301, 0,
	369, 0, 302, 303, 0, 304, 305, 0, 415, 370,
	0, 0, 414, 306, 371, 307, 372, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 315, 316, 317,
	318, 319, 0, 0, 320, 321, 322, 323, 373, 374,
	0, 324, 470, 325, 87, 0, 0, 0, 326, 327,
	328, 329, 330, 331, 332, 0, 90, 91, 92, 93,
	94, 95, 96, 0, 97, 98, 99, 0, 0, 0,
	0, 0, 0, 0, 100, 101, 0, 102, 103, 0,
	104, 105, 106, 333, 334, 0, 335, 0, 336, 337,
	0, 107, 338, 108, 109, 110, 111, 0, 0, 112,
	339, 340, 113, 918, 114, 115, 116, 117, 341, 0,
	0, 0, 118, 119, 120, 121, 122, 0, 0, 123,
	124, 125, 916, 126, 127, 128, 129, 130, 131, 0,
	0, 0, 132, 133, 134, 0, 0, 0, 0, 0,
	0, 135, 136, 137, 138, 139, 342, 140, 141, 343,
	344, 142, 0, 143, 0, 144, 145, 146, 147, 148,
	0, 149, 150, 151, 0, 0, 152, 153, 154, 155,
	0, 156, 157, 158, 0, 159, 0, 160, 0, 161,
	162, 345, 163, 164, 165, 346, 0, 166, 0, 167,
	168, 347, 169, 0, 170, 921, 171, 0, 0, 0,
	172, 173, 174, 0, 175, 176, 348, 0, 349, 177,
	0, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	0, 187, 188, 977, 189, 190, 191, 0, 192, 0,
	350, 193, 194, 195, 196, 351, 352, 353, 0, 354,
	0, 197, 0, 198, 0, 199, 200, 201, 202, 203,
	0, 0, 204, 355, 0, 205, 0, 0, 206, 207,
	411, 0, 0, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 412, 356,
	0, 357, 222, 223, 358, 0, 224, 225, 226, 0,
	359, 227, 360, 228, 229, 230, 0, 231, 0, 0,
	232, 233, 0, 0, 234, 361, 0, 235, 0, 362,
	236, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	363, 245, 364, 248, 246, 247, 920, 249, 250, 251,
	252, 253, 254, 255, 256, 365, 257, 258, 259, 260,
	0, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 0, 272, 273, 0, 274, 275, 366, 276,
	0, 277, 278, 279, 280, 281, 0, 282, 283, 284,
	285, 413, 0, 286, 287, 288, 289, 0, 290, 291,
	367, 292, 0, 293, 294, 295, 296, 297, 298, 299,
	300, 368, 301, 0, 369, 0, 302, 303, 0, 304,
	305, 0, 415, 370, 0, 0, 414, 306, 371, 307,
	372, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	978, 315, 316, 317, 318, 319, 0, 0, 320, 321,
	322, 323, 373, 374, 0, 324, 0, 325, 87, 0,
	0, 0, 326, 327, 328, 329, 330, 331, 332, 0,
	90, 91, 92, 93, 94, 95, 96, 0, 97, 98,
	99, 0, 0, 0, 0, 0, 0, 0, 100, 101,
	0, 102, 103, 0, 104, 105, 106, 333, 334, 0,
	335, 0, 336, 337, 0, 107, 338, 108, 109, 110,
	111, 0, 0, 112, 339, 340, 113, 918, 114, 115,
	116, 117, 341, 0, 0, 913, 118, 119, 120, 121,
	122, 0, 0, 123, 124, 125, 916, 126, 127, 128,
	129, 130, 131, 0, 0, 0, 132, 133, 134, 0,
	0, 0, 0, 0, 0, 135, 136, 137, 138, 139,
	342, 140, 141, 343, 344, 142, 0, 143, 0, 144,
	145, 146, 147, 148, 0, 149, 150, 151, 0, 0,
	152, 153, 154, 155, 0, 156, 157, 158, 0, 159,
	0, 160, 0, 161, 162, 345, 163, 164, 165, 346,
	0, 166, 0, 167, 168, 347, 169, 0, 170, 921,
	171, 0, 0, 0, 172, 173, 174, 0, 175, 176,
	348, 0, 349, 177, 0, 178, 179, 180, 181, 912,
	183, 184, 185, 186, 0, 187, 188, 0, 189, 190,
	191, 0, 192, 0, 350, 193, 194, 195, 196, 351,
	352, 353, 0, 354, 0, 197, 0, 198, 0, 199,
	200, 201, 202, 203, 0, 0, 204, 355, 0, 205,
	0, 0, 206, 207, 411, 0, 0, 208, 209, 210,
	211, 0, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 412, 356, 0, 357, 222, 223, 358, 0,
	224, 225, 226, 0, 359, 227, 360, 228, 229, 230,
	0, 231, 0, 0, 232, 233, 0, 0, 234, 361,
	0, 235, 0, 362, 236, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 363, 245, 364, 248, 246, 247,
	920, 249, 250, 251, 252, 253, 254, 255, 256, 365,
	257, 258, 259, 260, 0, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 0, 272, 273, 0,
	274, 275, 366, 276, 0, 277, 278, 279, 280, 281,
	0, 282, 283, 284, 285, 413, 0, 286, 287, 288,
	289, 0, 290, 291, 367, 292, 0, 293, 294, 295,
	296, 297, 298, 299, 300, 368, 301, 0, 369, 0,
	302, 303, 0, 304, 305, 0, 415, 370, 0, 0,
	414, 306, 371, 307, 372, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 919, 315, 316, 317, 318, 319,
	0, 0, 320, 321, 322, 323, 373, 374, 0, 324,
	0, 325, 87, 0, 0, 0, 326, 327, 328, 329,
	330, 331, 332, 0, 90, 91, 92, 93, 94, 95,
	96, 0, 97, 98, 99, 0, 0, 0, 0, 0,
	1240, 0, 100, 101, 0, 102, 103, 0, 104, 105,
	106, 333, 334, 0, 335, 0, 336, 337, 0, 107,
	338, 108, 109, 110, 111, 0, 0, 112, 339, 340,
	113, 0, 114, 115, 116, 117, 341, 0, 0, 0,
	118, 119, 120, 121, 122, 0, 0, 123, 124, 125,
	0, 126, 127, 128, 129, 130, 131, 0, 0, 0,
	132, 133, 134, 0, 0, 0, 0, 0, 0, 135,
	136, 137, 138, 139, 342, 140, 141, 343, 344, 142,
	0, 143, 0, 144, 145, 146, 147, 148, 0, 149,
	150, 151, 0, 0, 152, 153, 154, 155, 0, 156,
	157, 158, 0, 159, 0, 160, 0, 161, 162, 345,
	163, 164, 165, 346, 0, 166, 0, 167, 168, 347,
	169, 0, 170, 0, 171, 0, 0, 0, 172, 173,
	174, 0, 175, 176, 348, 0, 349, 177, 0, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 0, 187,
	188, 0, 189, 190, 191, 0, 192, 0, 350, 193,
	194, 195, 196, 351, 352, 353, 0, 354, 0, 197,
	0, 198, 0, 199, 200, 201, 202, 203, 0, 0,
	204, 355, 0, 205, 0, 0, 206, 207, 411, 0,
	0, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 412, 356, 0, 357,
	222, 223, 358, 0, 224, 225, 226, 0, 359, 227,
	360, 228, 229, 230, 0, 231, 0, 0, 232, 233,
	0, 0, 234, 361, 0, 235, 0, 362, 236, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 363, 245,
	364, 248, 246, 247, 0, 249, 250, 251, 252, 253,
	254, 255, 256, 365, 257, 258, 259, 260, 0, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
	0, 272, 273, 0, 274, 275, 366, 276, 0, 277,
	278, 279, 280, 281, 0, 282, 283, 284, 285, 413,
	0, 286, 287, 288, 289, 0, 290, 291, 367, 292,
	0, 293, 294, 295, 296, 297, 298, 299, 300, 368,
	301, 0, 369, 0, 302, 303, 0, 304, 305, 0,
	415, 370, 0, 0, 414, 306, 371, 307, 372, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 315,
	316, 317, 318, 319, 0, 0, 320, 321, 322, 323,
	373, 374, 0, 324, 0, 325, 87, 0, 0, 0,
	326, 327, 328, 329, 330, 331, 332, 0, 90, 91,
	92, 93, 94, 95, 96, 0, 97, 98, 99, 0,
	0, 0, 0, 0, 0, 0, 100, 101, 0, 102,
	103, 0, 104, 105, 106, 333, 334, 0, 335, 0,
	336, 337, 0, 107, 338, 108, 109, 110, 111, 0,
	0, 112, 339, 340, 113, 0, 114, 115, 116, 117,
	341, 0, 0, 0, 118, 119, 120, 121, 122, 0,
	0, 123, 124, 125, 0, 126, 127, 128, 129, 130,
	131, 0, 0, 0, 132, 133, 134, 0, 0, 0,
	0, 0, 0, 135, 136, 137, 138, 139, 342, 140,
	141, 343, 344, 142, 0, 143, 0, 144, 145, 146,
	147, 148, 0, 149, 150, 151, 0, 0, 152, 153,
	154, 155, 0, 156, 157, 158, 0, 159, 0, 160,
	0, 161, 162, 345, 163, 164, 165, 346, 0, 166,
	0, 167, 168, 347, 169, 0, 170, 0, 171, 0,
	0, 0, 172, 173, 174, 0, 175, 176, 348, 0,
	349, 177, 0, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 0, 187, 188, 0, 189, 190, 191, 0,
	192, 0, 350, 193, 194, 195, 196, 351, 352, 353,
	0, 354, 0, 197, 0, 198, 0, 199, 200, 201,
	202, 203, 0, 0, 204, 355, 0, 205, 0, 0,
	206, 207, 411, 0, 0, 208, 209, 210, 211, 0,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	412, 356, 0, 357, 222, 223, 358, 0, 224, 225,
	226, 0, 359, 227, 360, 228, 229, 230, 0, 231,
	0, 424, 232, 233, 0, 0, 234, 361, 0, 235,
	0, 362, 236, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 363, 245, 364, 248, 246, 247, 0, 249,
	250, 251, 252, 253, 254, 255, 256, 365, 257, 258,
	259, 260, 0, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 0, 272, 273, 0, 274, 275,
	366, 276, 0, 277, 278, 279, 280, 281, 0, 282,
	283, 284, 285, 413, 0, 286, 287, 288, 289, 0,
	290, 291, 367, 292, 0, 293, 294, 295, 296, 297,
	298, 299, 300, 368, 301, 0, 369, 0, 302, 303,
	0, 304, 305, 0, 415, 370, 0, 0, 414, 306,
	371, 307, 372, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 315, 316, 317, 318, 319, 0, 0,
	320, 321, 322, 323, 373, 374, 0, 324, 0, 325,
	87, 0, 0, 0, 326, 327, 328, 329, 330, 331,
	332, 0, 90, 91, 92, 93, 94, 95, 96, 0,
	97, 98, 99, 0, 0, 0, 0, 0, 0, 0,
	100, 101, 0, 102, 103, 0, 104, 105, 106, 333,
	334, 0, 335, 0, 336, 337, 0, 107, 338, 108,
	109, 110, 111, 0, 0, 112, 339, 340, 113, 0,
	114, 115, 116, 117, 341, 0, 0, 0, 118, 119,
	120, 121, 122, 0, 0, 123, 124, 125, 0, 126,
	127, 128, 129, 130, 131, 0, 0, 0, 132, 133,
	134, 0, 0, 0, 0, 0, 0, 135, 136, 137,
	658, 139, 342, 140, 141, 343, 344, 142, 0, 143,
	0, 144, 145, 146, 147, 148, 0, 149, 150, 151,
	0, 0, 152, 153, 154, 155, 0, 156, 157, 158,
	0, 159, 0, 160, 0, 161, 162, 345, 163, 164,
	165, 346, 0, 166, 0, 167, 168, 347, 169, 0,
	170, 0, 171, 0, 0, 0, 172, 173, 174, 0,
	175, 176, 348, 0, 349, 177, 0, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 0, 187, 188, 0,
	189, 190, 191, 0, 192, 0, 350, 193, 194, 195,
	196, 351, 352, 353, 0, 354, 0, 197, 0, 198,
	0, 199, 200, 201, 202, 203, 0, 0, 204, 355,
	0, 205, 0, 0, 206, 207, 411, 0, 0, 208,
	209, 210, 211, 0, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 412, 356, 0, 357, 222, 223,
	358, 0, 224, 225, 226, 0, 359, 227, 360, 228,
	229, 230, 0, 231, 0, 0, 232, 233, 0, 0,
	234, 361, 0, 235, 0, 362, 236, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 363, 245, 364, 248,
	246, 247, 0, 249, 250, 251, 252, 253, 254, 255,
	256, 365, 257, 258, 259, 260, 0, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271, 0, 272,
	273, 0, 274, 275, 366, 276, 0, 277, 278, 279,
	280, 281, 0, 282, 283, 284, 285, 413, 0, 286,
	287, 288, 289, 0, 290, 291, 367, 292, 0, 293,
	294, 295, 296, 297, 298, 299, 300, 368, 301, 0,
	369, 0, 302, 303, 657, 304, 305, 0, 415, 370,
	0, 0, 414, 306, 371, 307, 372, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 315, 316, 317,
	318, 319, 0, 0, 320, 321, 322, 323, 373, 374,
	0, 324, 0, 325, 87, 0, 0, 0, 326, 327,
	328, 329, 330, 331, 332, 0, 90, 91, 92, 93,
	94, 95, 96, 0, 97, 98, 99, 0, 0, 0,
	0, 0, 0, 0, 100, 101, 0, 102, 103, 0,
	104, 105, 106, 333, 334, 0, 335, 0, 336, 337,
	0, 107, 338, 108, 109, 110, 111, 0, 0, 112,
	339, 340, 113, 0, 114, 115, 116, 117, 341, 0,
	0, 0, 118, 119, 120, 121, 122, 0, 0, 123,
	124, 125, 0, 126, 127, 128, 129, 130, 131, 0,
	0, 0, 132, 133, 134, 0, 0, 0, 0, 0,
	0, 135, 136, 137, 138, 139, 342, 140, 141, 343,
	344, 142, 0, 143, 0, 144, 145, 146, 147, 148,
	0, 149, 150, 151, 0, 0, 152, 153, 154, 155,
	0, 156, 157, 158, 0, 159, 0, 160, 0, 161,
	162, 345, 163, 164, 165, 346, 0, 166, 0, 167,
	168, 347, 169, 0, 170, 0, 171, 0, 0, 0,
	172, 173, 174, 0, 175, 176, 348, 0, 349, 177,
	0, 178, 179, 180, 181, 430, 183, 184, 185, 186,
	0, 187, 188, 0, 189, 190, 191, 0, 192, 0,
	350, 193, 194, 195, 196, 351, 352, 353, 0, 354,
	0, 197, 0, 198, 0, 199, 200, 201, 202, 203,
	0, 0, 204, 355, 0, 205, 0, 0, 206, 207,
	411, 0, 0, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 412, 356,
	0, 357, 222, 223, 358, 0, 224, 225, 226, 0,
	359, 227, 360, 228, 229, 230, 0, 231, 0, 424,
	232, 233, 0, 0, 234, 361, 0, 235, 0, 362,
	236, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	363, 245, 364, 248, 246, 247, 0, 249, 250, 251,
	252, 253, 254, 255, 256, 365, 257, 258, 259, 260,
	0, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 0, 272, 273, 0, 274, 275, 366, 276,
	0, 277, 278, 279, 280, 281, 0, 282, 283, 284,
	285, 413, 0, 286, 287, 288, 289, 0, 290, 291,
	367, 292, 0, 293, 294, 295, 296, 297, 298, 299,
	300, 368, 301, 0, 369, 0, 302, 303, 0, 304,
	305, 0, 415, 370, 0, 0, 414, 306, 371, 307,
	372, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 315, 316, 317, 318, 319, 0, 0, 320, 321,
	322, 323, 373, 374, 0, 324, 0, 325, 87, 0,
	0, 0, 326, 327, 328, 329, 330, 331, 332, 0,
	90, 91, 92, 93, 94, 95, 96, 0, 97, 98,
	99, 0, 0, 0, 0, 0, 0, 0, 100, 101,
	0, 102, 103, 0, 104, 105, 106, 333, 334, 0,
	335, 0, 336, 337, 0, 107, 338, 108, 109, 110,
	111, 0, 0, 112, 339, 340, 113, 0, 114, 115,
	116, 117, 341, 0, 0, 0, 118, 119, 120, 121,
	122, 0, 0, 123, 124, 125, 0, 126, 127, 128,
	129, 130, 131, 0, 0, 0, 132, 133, 134, 0,
	0, 0, 0, 0, 0, 135, 136, 137, 138, 139,
	342, 140, 141, 343, 344, 142, 0, 143, 0, 144,
	145, 146, 147, 148, 0, 149, 150, 151, 0, 0,
	152, 153, 154, 155, 0, 156, 157, 158, 0, 159,
	0, 160, 0, 161, 162, 345, 163, 164, 165, 346,
	0, 166, 0, 167, 168, 347, 169, 0, 170, 0,
	171, 0, 0, 0, 172, 173, 174, 0, 175, 176,
	348, 0, 349, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 0, 187, 188, 0, 189, 190,
	191, 0, 192, 0, 350, 193, 194, 195, 196, 351,
	352, 353, 0, 354, 0, 197, 0, 198, 0, 199,
	200, 201, 202, 203, 0, 0, 204, 355, 0, 205,
	0, 0, 206, 207, 411, 0, 0, 208, 209, 210,
	211, 0, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 412, 356, 0, 357, 222, 223, 358, 0,
	224, 225, 226, 0, 359, 227, 360, 228, 229, 230,
	0, 231, 0, 0, 232, 233, 0, 0, 234, 361,
	0, 235, 0, 362, 236, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 363, 245, 364, 248, 246, 247,
	0, 249, 250, 251, 252, 253, 254, 255, 256, 365,
	257, 258, 259, 260, 0, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 0, 272, 273, 0,
	274, 275, 366, 276, 0, 277, 278, 279, 280, 281,
	0, 282, 283, 284, 285, 413, 0, 286, 287, 288,
	289, 0, 290, 291, 367, 292, 0, 293, 294, 295,
	296, 297, 298, 299, 300, 368, 301, 0, 369, 0,
	302, 303, 0, 304, 305, 0, 415, 370, 0, 0,
	414, 306, 371, 307, 372, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 315, 316, 317, 318, 319,
	0, 0, 320, 321, 322, 323, 373, 374, 0, 324,
	0, 325, 87, 0, 0, 0, 326, 327, 328, 329,
	330, 331, 332, 0, 90, 91, 92, 93, 94, 95,
	96, 0, 97, 98, 99, 0, 0, 0, 0, 0,
	0, 0, 100, 101, 0, 102, 103, 0, 104, 105,
	106, 333, 334, 0, 335, 0, 336, 337, 0, 107,
	338, 108, 109, 110, 111, 0, 0, 112, 339, 340,
	113, 0, 114, 115, 116, 117, 341, 0, 0, 0,
	118, 119, 120, 121, 122, 0, 0, 123, 124, 125,
	0, 126, 127, 128, 129, 130, 131, 0, 0, 0,
	132, 133, 134, 0, 0, 0, 0, 0, 0, 135,
	136, 137, 138, 139, 342, 140, 141, 343, 344, 142,
	0, 143, 0, 144, 145, 146, 147, 148, 0, 149,
	150, 151, 0, 0, 152, 153, 154, 155, 0, 156,
	157, 158, 0, 159, 0, 160, 0, 161, 162, 345,
	163, 164, 165, 346, 0, 166, 0, 167, 168, 347,
	169, 0, 170, 0, 171, 0, 0, 0, 172, 173,
	174, 0, 175, 176, 348, 0, 349, 177, 0, 178,
	179, 180, 181, 1181, 183, 184, 185, 186, 0, 187,
	188, 0, 189, 190, 191, 0, 192, 0, 350, 193,
	194, 195, 196, 351, 352, 353, 0, 354, 0, 197,
	0, 198, 0, 199, 200, 201, 202, 203, 0, 0,
	204, 355, 0, 205, 0, 0, 206, 207, 411, 0,
	0, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 412, 356, 0, 357,
	222, 223, 358, 0, 224, 225, 226, 0, 359, 227,
	360, 228, 229, 230, 0, 231, 0, 0, 232, 233,
	0, 0, 234, 361, 0, 235, 0, 362, 236, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 363, 245,
	364, 248, 246, 247, 0, 249, 250, 251, 252, 253,
	254, 255, 256, 365, 257, 258, 259, 260, 0, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
	0, 272, 273, 0, 274, 275, 366, 276, 0, 277,
	278, 279, 280, 281, 0, 282, 283, 284, 285, 413,
	0, 286, 287, 288, 289, 0, 290, 291, 367, 292,
	0, 293, 294, 295, 296, 297, 298, 299, 300, 368,
	301, 0, 369, 0, 302, 303, 0, 304, 305, 0,
	415, 370, 0, 0, 414, 306, 371, 307, 372, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 315,
	316, 317, 318, 319, 0, 0, 320, 321, 322, 323,
	373, 374, 0, 324, 0, 325, 87, 0, 0, 0,
	326, 327, 328, 329, 330, 331, 332, 0, 90, 91,
	92, 93, 94, 95, 96, 0, 97, 98, 99, 0,
	0, 0, 0, 0, 0, 0, 100, 101, 0, 102,
	103, 0, 104, 105, 106, 333, 334, 0, 335, 0,
	336, 337, 0, 107, 338, 108, 109, 110, 111, 0,
	0, 112, 339, 340, 113, 0, 114, 115, 116, 117,
	341, 0, 0, 0, 118, 119, 120, 121, 122, 0,
	0, 123, 124, 125, 0, 126, 127, 128, 129, 130,
	131, 0, 0, 0, 132, 133, 134, 0, 0, 0,
	0, 0, 0, 135, 136, 137, 138, 139, 342, 140,
	141, 343, 344, 142, 0, 143, 0, 144, 145, 146,
	147, 148, 0, 149, 150, 151, 0, 0, 152, 153,
	154, 155, 0, 156, 157, 158, 0, 159, 0, 160,
	0, 161, 162, 345, 163, 164, 165, 346, 0, 166,
	0, 167, 168, 347, 169, 0, 170, 0, 171, 0,
	0, 0, 172, 173, 174, 0, 175, 176, 348, 0,
	349, 177, 0, 178, 179, 180, 181, 1179, 183, 184,
	185, 186, 0, 187, 188, 0, 189, 190, 191, 0,
	192, 0, 350, 193, 194, 195, 196, 351, 352, 353,
	0, 354, 0, 197, 0, 198, 0, 199, 200, 201,
	202, 203, 0, 0, 204, 355, 0, 205, 0, 0,
	206, 207, 411, 0, 0, 208, 209, 210, 211, 0,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	412, 356, 0, 357, 222, 223, 358, 0, 224, 225,
	226, 0, 359, 227, 360, 228, 229, 230, 0, 231,
	0, 0, 232, 233, 0, 0, 234, 361, 0, 235,
	0, 362, 236, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 363, 245, 364, 248, 246, 247, 0, 249,
	250, 251, 252, 253, 254, 255, 256, 365, 257, 258,
	259, 260, 0, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 0, 272, 273, 0, 274, 275,
	366, 276, 0, 277, 278, 279, 280, 281, 0, 282,
	283, 284, 285, 413, 0, 286, 287, 288, 289, 0,
	290, 291, 367, 292, 0, 293, 294, 295, 296, 297,
	298, 299, 300, 368, 301, 0, 369, 0, 302, 303,
	0, 304, 305, 0, 415, 370, 0, 0, 414, 306,
	371, 307, 372, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 315, 316, 317, 318, 319, 0, 0,
	320, 321, 322, 323, 373, 374, 0, 324, 0, 325,
	87, 0, 0, 0, 326, 327, 328, 329, 330, 331,
	332, 0, 90, 91, 92, 93, 94, 95, 96, 0,
	97, 98, 99, 0, 0, 0, 0, 0, 0, 0,
	100, 101, 0, 102, 103, 0, 104, 105, 106, 333,
	334, 0, 335, 0, 336, 337, 0, 107, 338, 108,
	109, 110, 111, 0, 0, 112, 339, 340, 113, 0,
	114, 115, 116, 117, 341, 0, 0, 0, 118, 119,
	120, 121, 122, 0, 0, 123, 124, 125, 0, 126,
	127, 128, 129, 130, 131, 0, 0, 0, 132, 133,
	134, 0, 0, 0, 0, 0, 0, 135, 136, 137,
	138, 139, 342, 140, 141, 343, 344, 142, 0, 143,
	0, 144, 145, 146, 147, 148, 0, 149, 150, 151,
	0, 0, 152, 153, 154, 155, 0, 156, 157, 158,
	0, 159, 0, 160, 0, 161, 162, 345, 163, 164,
	165, 346, 0, 166, 0, 167, 168, 347, 169, 0,
	170, 0, 171, 0, 0, 0, 172, 173, 174, 0,
	175, 176, 348, 0, 349, 177, 0, 178, 179, 180,
	181, 1170, 183, 184, 185, 186, 0, 187, 188, 0,
	189, 190, 191, 0, 192, 0, 350, 193, 194, 195,
	196, 351, 352, 353, 0, 354, 0, 197, 0, 198,
	0, 199, 200, 201, 202, 203, 0, 0, 204, 355,
	0, 205, 0, 0, 206, 207, 411, 0, 0, 208,
	209, 210, 211, 0, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 412, 356, 0, 357, 222, 223,
	358, 0, 224, 225, 226, 0, 359, 227, 360, 228,
	229, 230, 0, 231, 0, 0, 232, 233, 0, 0,
	234, 361, 0, 235, 0, 362, 236, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 363, 245, 364, 248,
	246, 247, 0, 249, 250, 251, 252, 253, 254, 255,
	256, 365, 257, 258, 259, 260, 0, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271, 0, 272,
	273, 0, 274, 275, 366, 276, 0, 277, 278, 279,
	280, 281, 0, 282, 283, 284, 285, 413, 0, 286,
	287, 288, 289, 0, 290, 291, 367, 292, 0, 293,
	294, 295, 296, 297, 298, 299, 300, 368, 301, 0,
	369, 0, 302, 303, 0, 304, 305, 0, 415, 370,
	0, 0, 414, 306, 371, 307, 372, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 315, 316, 317,
	318, 319, 0, 0, 320, 321, 322, 323, 373, 374,
	0, 324, 0, 325, 87, 0, 0, 0, 326, 327,
	328, 329, 330, 331, 332, 0, 90, 91, 92, 93,
	94, 95, 96, 0, 97, 98, 99, 0, 0, 0,
	0, 0, 0, 0, 100, 101, 0, 102, 103, 0,
	104, 105, 106, 333, 334, 0, 335, 0, 336, 337,
	0, 107, 338, 108, 109, 110, 111, 0, 0, 112,
	339, 340, 113, 0, 114, 115, 116, 117, 341, 0,
	0, 0, 118, 119, 120, 121, 122, 0, 0, 123,
	124, 125, 0, 126, 127, 128, 129, 130, 131, 0,
	0, 0, 132, 133, 134, 0, 0, 0, 0, 0,
	0, 135, 136, 137, 138, 139, 342, 140, 141, 343,
	344, 142, 0, 143, 0, 144, 145, 146, 147, 148,
	0, 149, 150, 151, 0, 0, 152, 153, 154, 155,
	0, 156, 157, 158, 0, 159, 0, 160, 0, 161,
	162, 345, 163, 164, 165, 346, 0, 166, 0, 167,
	168, 347, 169, 0, 170, 0, 171, 0, 0, 0,
	172, 173, 174, 0, 175, 176, 348, 0, 349, 177,
	0, 178, 179, 180, 181, 788, 183, 184, 185, 186,
	0, 187, 188, 0, 189, 190, 191, 0, 192, 0,
	350, 193, 194, 195, 196, 351, 352, 353, 0, 354,
	0, 197, 0, 198, 0, 199, 200, 201, 202, 203,
	0, 0, 204, 355, 0, 205, 0, 0, 206, 207,
	411, 0, 0, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 412, 356,
	0, 357, 222, 223, 358, 0, 224, 225, 226, 0,
	359, 227, 360, 228, 229, 230, 0, 231, 0, 0,
	232, 233, 0, 0, 234, 361, 0, 235, 0, 362,
	236, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	363, 245, 364, 248, 246, 247, 0, 249, 250, 251,
	252, 253, 254, 255, 256, 365, 257, 258, 259, 260,
	0, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 0, 272, 273, 0, 274, 275, 366, 276,
	0, 277, 278, 279, 280, 281, 0, 282, 283, 284,
	285, 413, 0, 286, 287, 288, 289, 0, 290, 291,
	367, 292, 0, 293, 294, 295, 296, 297, 298, 299,
	300, 368, 301, 0, 369, 0, 302, 303, 0, 304,
	305, 0, 415, 370, 0, 0, 414, 306, 371, 307,
	372, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 315, 316, 317, 318, 319, 0, 0, 320, 321,
	322, 323, 373, 374, 0, 324, 0, 325, 87, 0,
	0, 0, 326, 327, 328, 329, 330, 331, 332, 0,
	90, 91, 92, 93, 94, 95, 96, 0, 97, 98,
	99, 0, 0, 0, 0, 0, 645, 0, 100, 101,
	0, 102, 103, 0, 104, 105, 106, 333, 334, 0,
	335, 0, 336, 337, 0, 107, 338, 108, 109, 110,
	111, 0, 0, 112, 339, 340, 113, 0, 114, 115,
	116, 117, 341, 0, 0, 0, 118, 119, 120, 121,
	122, 0, 0, 123, 124, 125, 0, 126, 127, 128,
	129, 130, 131, 0, 0, 0, 132, 133, 134, 0,
	0, 0, 0, 0, 0, 135, 136, 137, 138, 139,
	342, 140, 141, 343, 344, 142, 0, 143, 0, 144,
	145, 146, 147, 148, 0, 149, 150, 151, 0, 0,
	152, 153, 154, 155, 0, 156, 157, 158, 0, 159,
	0, 160, 0, 161, 162, 345, 163, 164, 165, 346,
	0, 166, 0, 167, 168, 347, 169, 0, 170, 0,
	171, 0, 0, 0, 172, 173, 174, 0, 175, 176,
	348, 0, 349, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 0, 187, 188, 0, 189, 190,
	191, 0, 192, 0, 350, 193, 194, 195, 196, 351,
	352, 353, 0, 354, 0, 197, 0, 198, 0, 199,
	200, 201, 202, 203, 0, 0, 204, 355, 0, 205,
	0, 0, 206, 207, 411, 0, 0, 208, 209, 210,
	211, 0, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 412, 356, 0, 357, 222, 223, 358, 0,
	224, 225, 226, 0, 359, 227, 360, 228, 229, 230,
	0, 231, 0, 0, 232, 233, 0, 0, 234, 361,
	0, 235, 0, 362, 236, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 363, 245, 364, 248, 246, 247,
	0, 249, 250, 251, 252, 253, 254, 255, 256, 365,
	257, 258, 259, 260, 0, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 0, 272, 273, 0,
	274, 275, 366, 276, 0, 277, 278, 279, 280, 281,
	0, 282, 283, 284, 285, 413, 0, 0, 287, 288,
	289, 0, 290, 291, 367, 292, 0, 293, 294, 295,
	296, 297, 298, 299, 300, 368, 301, 0, 369, 0,
	302, 303, 0, 304, 305, 0, 415, 370, 0, 0,
	414, 306, 371, 307, 372, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 315, 316, 317, 318, 319,
	0, 0, 320, 321, 322, 323, 373, 374, 0, 324,
	0, 325, 87, 0, 0, 0, 326, 327, 328, 329,
	330, 331, 332, 0, 90, 91, 92, 93, 94, 95,
	96, 0, 97, 98, 99, 0, 0, 0, 0, 0,
	0, 0, 100, 101, 0, 102, 103, 0, 104, 105,
	106, 333, 334, 0, 335, 0, 336, 337, 0, 107,
	338, 108, 109, 110, 111, 0, 0, 112, 339, 340,
	113, 0, 114, 115, 116, 117, 341, 0, 0, 0,
	118, 119, 120, 121, 122, 0, 0, 123, 124, 125,
	0, 126, 127, 128, 129, 130, 131, 0, 0, 0,
	132, 133, 134, 0, 0, 0, 0, 0, 0, 135,
	136, 137, 138, 139, 342, 140, 141, 343, 344, 142,
	0, 143, 0, 144, 145, 146, 147, 148, 0, 149,
	150, 151, 0, 0, 152, 153, 154, 155, 0, 156,
	157, 158, 0, 159, 0, 160, 0, 161, 162, 345,
	163, 164, 165, 346, 0, 166, 0, 167, 168, 347,
	169, 0, 170, 0, 171, 0, 0, 0, 172, 173,
	174, 0, 175, 176, 348, 0, 349, 177, 0, 178,
	179, 180, 181, 503, 183, 184, 185, 186, 0, 187,
	188, 0, 189, 190, 191, 0, 192, 0, 350, 193,
	194, 195, 196, 351, 352, 353, 0, 354, 0, 197,
	0, 198, 0, 199, 200, 201, 202, 203, 0, 0,
	204, 355, 0, 205, 0, 0, 206, 207, 411, 0,
	0, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 412, 356, 0, 357,
	222, 223, 358, 0, 224, 225, 226, 0, 359, 227,
	360, 228, 229, 230, 0, 231, 0, 0, 232, 233,
	0, 0, 234, 361, 0, 235, 0, 362, 236, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 363, 245,
	364, 248, 246, 247, 0, 249, 250, 251, 252, 253,
	254, 255, 256, 365, 257, 258, 259, 260, 0, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
	0, 272, 273, 0, 274, 275, 366, 276, 0, 277,
	278, 279, 280, 281, 0, 282, 283, 284, 285, 413,
	0, 286, 287, 288, 289, 0, 290, 291, 367, 292,
	0, 293, 294, 295, 296, 297, 298, 299, 300, 368,
	301, 0, 369, 0, 302, 303, 0, 304, 305, 0,
	415, 370, 0, 0, 414, 306, 371, 307, 372, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 315,
	316, 317, 318, 319, 0, 0, 320, 321, 322, 323,
	373, 374, 0, 324, 0, 325, 87, 0, 0, 0,
	326, 327, 328, 329, 330, 331, 332, 0, 90, 91,
	92, 93, 94, 95, 96, 0, 97, 98, 99, 0,
	0, 0, 0, 0, 0, 0, 100, 101, 0, 102,
	103, 0, 104, 105, 106, 333, 334, 0, 335, 0,
	336, 337, 0, 107, 338, 108, 109, 110, 111, 0,
	0, 112, 339, 340, 113, 0, 114, 115, 116, 117,
	341, 0, 0, 0, 118, 119, 120, 121, 122, 0,
	0, 123, 124, 125, 0, 126, 127, 128, 129, 130,
	131, 0, 0, 0, 132, 133, 134, 0, 0, 0,
	0, 0, 0, 135, 136, 137, 138, 139, 342, 140,
	141, 343, 344, 142, 0, 143, 0, 144, 145, 146,
	147, 148, 0, 149, 150, 151, 0, 0, 152, 153,
	154, 155, 0, 156, 157, 158, 0, 159, 0, 160,
	0, 161, 162, 345, 163, 164, 165, 346, 0, 166,
	0, 167, 168, 347, 169, 0, 170, 0, 171, 0,
	0, 0, 172, 173, 174, 0, 175, 176, 348, 0,
	349, 177, 0, 178, 179, 180, 181, 500, 183, 184,
	185, 186, 0, 187, 188, 0, 189, 190, 191, 0,
	192, 0, 350, 193, 194, 195, 196, 351, 352, 353,
	0, 354, 0, 197, 0, 198, 0, 199, 200, 201,
	202, 203, 0, 0, 204, 355, 0, 205, 0, 0,
	206, 207, 411, 0, 0, 208, 209, 210, 211, 0,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	412, 356, 0, 357, 222, 223, 358, 0, 224, 225,
	226, 0, 359, 227, 360, 228, 229, 230, 0, 231,
	0, 0, 232, 233, 0, 0, 234, 361, 0, 235,
	0, 362, 236, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 363, 245, 364, 248, 246, 247, 0, 249,
	250, 251, 252, 253, 254, 255, 256, 365, 257, 258,
	259, 260, 0, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 0, 272, 273, 0, 274, 275,
	366, 276, 0, 277, 278, 279, 280, 281, 0, 282,
	283, 284, 285, 413, 0, 286, 287, 288, 289, 0,
	290, 291, 367, 292, 0, 293, 294, 295, 296, 297,
	298, 299, 300, 368, 301, 0, 369, 0, 302, 303,
	0, 304, 305, 0, 415, 370, 0, 0, 414, 306,
	371, 307, 372, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 315, 316, 317, 318, 319, 0, 0,
	320, 321, 322, 323, 373, 374, 0, 324, 0, 325,
	87, 0, 0, 0, 326, 327, 328, 329, 330, 331,
	332, 0, 90, 91, 92, 93, 94, 95, 96, 0,
	97, 98, 99, 0, 0, 0, 0, 0, 0, 0,
	100, 101, 0, 102, 103, 0, 104, 105, 106, 333,
	334, 0, 335, 0, 336, 337, 0, 107, 338, 108,
	109, 110, 111, 0, 0, 112, 339, 340, 113, 0,
	114, 115, 116, 117, 341, 0, 0, 0, 118, 119,
	120, 121, 122, 0, 0, 123, 124, 125, 0, 126,
	127, 128, 129, 130, 131, 0, 0, 0, 132, 133,
	134, 0, 0, 0, 0, 0, 0, 135, 136, 137,
	138, 139, 342, 140, 141, 343, 344, 142, 0, 143,
	0, 144, 145, 146, 147, 148, 0, 149, 150, 151,
	0, 0, 152, 153, 154, 155, 0, 156, 157, 158,
	0, 159, 0, 160, 0, 161, 162, 345, 163, 164,
	165, 346, 0, 166, 0, 167, 168, 347, 169, 0,
	170, 0, 171, 0, 0, 0, 172, 173, 174, 0,
	175, 176, 348, 0, 349, 177, 0, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 0, 187, 188, 0,
	189, 190, 191, 0, 192, 0, 350, 193, 194, 195,
	196, 351, 352, 353, 0, 354, 0, 197, 0, 198,
	0, 199, 200, 201, 202, 203, 0, 0, 204, 355,
	0, 205, 0, 0, 206, 207, 411, 0, 0, 208,
	209, 210, 211, 0, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 84, 356, 0, 357, 222, 223,
	358, 0, 224, 225, 226, 0, 359, 227, 360, 228,
	229, 230, 0, 231, 0, 0, 232, 233, 0, 0,
	234, 361, 0, 235, 0, 362, 236, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 363, 245, 364, 248,
	246, 247, 0, 249, 250, 251, 252, 253, 254, 255,
	256, 365, 257, 258, 259, 260, 0, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271, 0, 272,
	273, 0, 274, 275, 366, 276, 0, 277, 278, 279,
	280, 281, 0, 282, 283, 284, 285, 413, 0, 286,
	287, 288, 289, 0, 290, 291, 367, 292, 0, 293,
	294, 295, 296, 297, 298, 299, 300, 368, 301, 0,
	369, 0, 302, 303, 0, 304, 305, 0, 83, 370,
	0, 0, 79, 306, 371, 307, 372, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 315, 316, 317,
	318, 319, 0, 0, 320, 321, 322, 323, 373, 374,
	0, 324, 0, 325, 87, 0, 0, 0, 326, 327,
	328, 329, 330, 331, 332, 0, 90, 91, 92, 93,
	94, 95, 96, 0, 97, 98, 99, 0, 0, 0,
	0, 0, 0, 0, 100, 101, 0, 102, 103, 0,
	104, 105, 106, 333, 334, 0, 335, 0, 336, 337,
	0, 107, 338, 108, 109, 110, 111, 0, 0, 112,
	339, 340, 113, 0, 114, 115, 116, 117, 341, 0,
	0, 0, 118, 119, 120, 121, 122, 0, 0, 123,
	124, 125, 0, 126, 127, 128, 129, 130, 131, 0,
	0, 0, 132, 133, 134, 0, 0, 0, 0, 0,
	0, 135, 136, 137, 138, 139, 342, 140, 141, 343,
	344, 142, 0, 143, 0, 144, 145, 146, 147, 148,
	0, 149, 150, 151, 0, 0, 152, 153, 154, 155,
	0, 156, 157, 158, 0, 159, 0, 160, 0, 161,
	162, 345, 163, 164, 165, 346, 0, 166, 0, 167,
	168, 347, 169, 0, 170, 0, 171, 0, 0, 0,
	172, 173, 174, 0, 175, 176, 348, 0, 349, 177,
	0, 178, 179, 180, 181, 444, 183, 184, 185, 186,
	0, 187, 188, 0, 189, 190, 191, 0, 192, 0,
	350, 193, 194, 195, 196, 351, 352, 353, 0, 354,
	0, 197, 0, 198, 0, 199, 200, 201, 202, 203,
	0, 0, 204, 355, 0, 205, 0, 0, 206, 207,
	411, 0, 0, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 412, 356,
	0, 357, 222, 223, 358, 0, 224, 225, 226, 0,
	359, 227, 360, 228, 229, 230, 0, 231, 0, 0,
	232, 233, 0, 0, 234, 361, 0, 235, 0, 362,
	236, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	363, 245, 364, 248, 246, 247, 0, 249, 250, 251,
	252, 253, 254, 255, 256, 365, 257, 258, 259, 260,
	0, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 0, 272, 273, 0, 274, 275, 366, 276,
	0, 277, 278, 279, 280, 281, 0, 282, 283, 284,
	285, 413, 0, 286, 287, 288, 289, 0, 290, 291,
	367, 292, 0, 293, 294, 295, 296, 297, 298, 299,
	300, 368, 301, 0, 369, 0, 302, 303, 0, 304,
	305, 0, 415, 370, 0, 0, 414, 306, 371, 307,
	372, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 315, 316, 317, 318, 319, 0, 0, 320, 321,
	322, 323, 373, 374, 0, 324, 0, 325, 87, 0,
	0, 0, 326, 327, 328, 329, 330, 331, 332, 0,
	90, 91, 92, 93, 94, 95, 96, 0, 97, 98,
	99, 0, 0, 0, 0, 0, 0, 0, 100, 101,
	0, 102, 103, 0, 104, 105, 106, 333, 334, 0,
	335, 0, 336, 337, 0, 107, 338, 108, 109, 110,
	111, 0, 0, 112, 339, 340, 113, 0, 114, 115,
	116, 117, 341, 0, 0, 0, 118, 119, 120, 121,
	122, 0, 0, 123, 124, 125, 0, 126, 127, 128,
	129, 130, 131, 0, 0, 0, 132, 133, 134, 0,
	0, 0, 0, 0, 0, 135, 136, 137, 138, 139,
	342, 140, 141, 343, 344, 142, 0, 143, 0, 144,
	145, 146, 147, 148, 0, 149, 150, 151, 0, 0,
	152, 153, 154, 155, 0, 156, 157, 158, 0, 159,
	0, 160, 0, 161, 162, 345, 163, 164, 165, 346,
	0, 166, 0, 167, 168, 347, 169, 0, 170, 0,
	171, 0, 0, 0, 172, 173, 174, 0, 175, 176,
	348, 0, 349, 177, 0, 178, 179, 180, 181, 442,
	183, 184, 185, 186, 0, 187, 188, 0, 189, 190,
	191, 0, 192, 0, 350, 193, 194, 195, 196, 351,
	352, 353, 0, 354, 0, 197, 0, 198, 0, 199,
	200, 201, 202, 203, 0, 0, 204, 355, 0, 205,
	0, 0, 206, 207, 411, 0, 0, 208, 209, 210,
	211, 0, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 412, 356, 0, 357, 222, 223, 358, 0,
	224, 225, 226, 0, 359, 227, 360, 228, 229, 230,
	0, 231, 0, 0, 232, 233, 0, 0, 234, 361,
	0, 235, 0, 362, 236, 237, 238, 239, 240, 241,
	242, 0, 243, 244, 363, 245, 364, 248, 246, 247,
	0, 249, 250, 251, 252, 253, 254, 255, 256, 365,
	257, 258, 259, 260, 0, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 0, 272, 273, 0,
	274, 275, 366, 276, 0, 277, 278, 279, 280, 281,
	0, 282, 283, 284, 285, 413, 0, 286, 287, 288,
	289, 0, 290, 291, 367, 292, 0, 293, 294, 295,
	296, 297, 298, 299, 300, 368, 301, 0, 369, 0,
	302, 303, 0, 304, 305, 0, 415, 370, 0, 0,
	414, 306, 371, 307, 372, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 315, 316, 317, 318, 319,
	0, 0, 320, 321, 322, 323, 373, 374, 0, 324,
	0, 325, 87, 0, 0, 0, 326, 327, 328, 329,
	330, 331, 332, 0, 90, 91, 92, 93, 94, 95,
	96, 0, 97, 98, 99, 0, 0, 0, 0, 0,
	0, 0, 100, 101, 0, 102, 103, 0, 104, 105,
	106, 333, 334, 0, 335, 0, 336, 337, 0, 107,
	338, 108, 109, 110, 111, 0, 0, 112, 339, 340,
	113, 0, 114, 115, 116, 117, 341, 0, 0, 0,
	118, 119, 120, 121, 122, 0, 0, 123, 124, 125,
	0, 126, 127, 128, 129, 130, 131, 0, 0, 0,
	132, 133, 134, 0, 0, 0, 0, 0, 0, 135,
	136, 137, 138, 139, 342, 140, 141, 343, 344, 142,
	0, 143, 0, 144, 145, 146, 147, 148, 0, 149,
	150, 151, 0, 0, 152, 153, 154, 155, 0, 156,
	157, 158, 0, 159, 0, 160, 0, 161, 162, 345,
	163, 164, 165, 346, 0, 166, 0, 167, 168, 347,
	169, 0, 170, 0, 171, 0, 0, 0, 172, 173,
	174, 0, 175, 176, 348, 0, 349, 177, 0, 178,
	179, 180, 181, 438, 183, 184, 185, 186, 0, 187,
	188, 0, 189, 190, 191, 0, 192, 0, 350, 193,
	194, 195, 196, 351, 352, 353, 0, 354, 0, 197,
	0, 198, 0, 199, 200, 201, 202, 203, 0, 0,
	204, 355, 0, 205, 0, 0, 206, 207, 411, 0,
	0, 208, 209, 210, 211, 0, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 412, 356, 0, 357,
	222, 223, 358, 0, 224, 225, 226, 0, 359, 227,
	360, 228, 229, 230, 0, 231, 0, 0, 232, 233,
	0, 0, 234, 361, 0, 235, 0, 362, 236, 237,
	238, 239, 240, 241, 242, 0, 243, 244, 363, 245,
	364, 248, 246, 247, 0, 249, 250, 251, 252, 253,
	254, 255, 256, 365, 257, 258, 259, 260, 0, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
	0, 272, 273, 0, 274, 275, 366, 276, 0, 277,
	278, 279, 280, 281, 0, 282, 283, 284, 285, 413,
	0, 286, 287, 288, 289, 0, 290, 291, 367, 292,
	0, 293, 294, 295, 296, 297, 298, 299, 300, 368,
	301, 0, 369, 0, 302, 303, 0, 304, 305, 0,
	415, 370, 0, 0, 414, 306, 371, 307, 372, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 315,
	316, 317, 318, 319, 0, 0, 320, 321, 322, 323,
	373, 374, 0, 324, 0, 325, 87, 0, 0, 0,
	326, 327, 328, 329, 330, 331, 332, 0, 90, 91,
	92, 93, 94, 95, 96, 0, 97, 98, 99, 0,
	0, 0, 0, 0, 0, 0, 100, 101, 0, 102,
	103, 0, 104, 105, 106, 333, 334, 0, 335, 0,
	336, 337, 0, 107, 338, 108, 109, 110, 111, 0,
	0, 112, 339, 340, 113, 0, 114, 115, 116, 117,
	341, 0, 0, 0, 118, 119, 120, 121, 122, 0,
	0, 123, 124, 125, 0, 126, 127, 128, 129, 130,
	131, 0, 0, 0, 132, 133, 134, 0, 0, 0,
	0, 0, 0, 135, 136, 137, 138, 139, 342, 140,
	141, 343, 344, 142, 0, 143, 0, 144, 145, 146,
	147, 148, 0, 149, 150, 151, 0, 0, 152, 153,
	154, 155, 0, 156, 157, 158, 0, 159, 0, 160,
	0, 161, 162, 345, 163, 164, 165, 346, 0, 166,
	0, 167, 168, 347, 169, 0, 170, 0, 171, 0,
	0, 0, 172, 173, 174, 0, 175, 176, 348, 0,
	349, 177, 0, 178, 179, 180, 181, 433, 183, 184,
	185, 186, 0, 187, 188, 0, 189, 190, 191, 0,
	192, 0, 350, 193, 194, 195, 196, 351, 352, 353,
	0, 354, 0, 197, 0, 198, 0, 199, 200, 201,
	202, 203, 0, 0, 204, 355, 0, 205, 0, 0,
	206, 207, 411, 0, 0, 208, 209, 210, 211, 0,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	412, 356, 0, 357, 222, 223, 358, 0, 224, 225,
	226, 0, 359, 227, 360, 228, 229, 230, 0, 231,
	0, 0, 232, 233, 0, 0, 234, 361, 0, 235,
	0, 362, 236, 237, 238, 239, 240, 241, 242, 0,
	243, 244, 363, 245, 364, 248, 246, 247, 0, 249,
	250, 251, 252, 253, 254, 255, 256, 365, 257, 258,
	259, 260, 0, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 0, 272, 273, 0, 274, 275,
	366, 276, 0, 277, 278, 279, 280, 281, 0, 282,
	283, 284, 285, 413, 0, 286, 287, 288, 289, 0,
	290, 291, 367, 292, 0, 293, 294, 295, 296, 297,
	298, 299, 300, 368, 301, 0, 369, 0, 302, 303,
	0, 304, 305, 0, 415, 370, 0, 0, 414, 306,
	371, 307, 372, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 315, 316, 317, 318, 319, 0, 0,
	320, 321, 322, 323, 373, 374, 0, 324, 0, 325,
	87, 0, 0, 0, 326, 327, 328, 329, 330, 331,
	332, 0, 90, 91, 92, 93, 94, 95, 96, 0,
	97, 98, 99, 0, 0, 0, 0, 0, 0, 0,
	100, 101, 0, 102, 103, 0, 104, 105, 106, 333,
	334, 0, 335, 0, 336, 337, 0, 107, 338, 108,
	109, 110, 111, 0, 0, 112, 339, 340, 113, 0,
	114, 115, 116, 117, 341, 0, 0, 0, 118, 119,
	120, 121, 122, 0, 0, 123, 124, 125, 0, 126,
	127, 128, 129, 130, 131, 0, 0, 0, 132, 133,
	134, 0, 0, 0, 0, 0, 0, 135, 136, 137,
	138, 139, 342, 140, 141, 343, 344, 142, 0, 143,
	0, 144, 145, 146, 147, 148, 0, 149, 150, 151,
	0, 0, 152, 153, 154, 155, 0, 156, 157, 158,
	0, 159, 0, 160, 0, 161, 162, 345, 163, 164,
	165, 346, 0, 166, 0, 167, 168, 347, 169, 0,
	170, 0, 171, 0, 0, 0, 172, 173, 174, 0,
	175, 176, 348, 0, 349, 177, 0, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 0, 187, 188, 0,
	189, 190, 191, 0, 192, 0, 350, 193, 194, 195,
	196, 351, 352, 353, 0, 354, 0, 197, 0, 198,
	0, 199, 200, 201, 202, 203, 0, 0, 204, 355,
	0, 205, 0, 0, 206, 207, 411, 0, 0, 208,
	209, 210, 211, 0, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 412, 356, 0, 357, 222, 223,
	358, 0, 224, 225, 226, 0, 359, 227, 360, 228,
	229, 230, 0, 231, 0, 0, 232, 233, 0, 0,
	234, 361, 0, 235, 0, 362, 236, 237, 238, 239,
	240, 241, 242, 0, 243, 244, 363, 245, 364, 248,
	246, 247, 0, 249, 250, 251, 252, 253, 254, 255,
	256, 365, 257, 258, 408, 260, 0, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271, 0, 272,
	273, 0, 274, 275, 366, 276, 0, 277, 278, 279,
	280, 281, 0, 282, 283, 284, 285, 413, 0, 286,
	287, 288, 289, 0, 290, 291, 367, 292, 0, 293,
	294, 295, 296, 297, 298, 299, 300, 368, 301, 0,
	369, 0, 302, 303, 0, 304, 305, 0, 415, 370,
	0, 0, 414, 306, 371, 307, 372, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 315, 316, 317,
	318, 319, 0, 0, 320, 321, 322, 323, 373, 374,
	0, 324, 0, 325, 87, 0, 0, 0, 326, 327,
	328, 329, 330, 331, 332, 0, 90, 91, 92, 93,
	94, 95, 96, 0, 97, 98, 99, 0, 0, 0,
	0, 0, 0, 0, 100, 101, 0, 102, 103, 0,
	104, 105, 106, 333, 334, 0, 335, 0, 336, 337,
	0, 107, 338, 108, 109, 110, 111, 0, 0, 112,
	339, 340, 113, 0, 114, 115, 116, 117, 341, 0,
	0, 0, 118, 119, 120, 121, 122, 0, 0, 123,
	124, 125, 0, 126, 127, 128, 129, 130, 131, 0,
	0, 0, 132, 133, 134, 0, 0, 0, 0, 0,
	0, 135, 136, 137, 138, 139, 342, 140, 141, 343,
	344, 142, 0, 143, 0, 144, 145, 146, 147, 148,
	0, 149, 150, 151, 0, 0, 152, 153, 154, 155,
	0, 156, 157, 158, 0, 159, 0, 160, 0, 161,
	162, 345, 163, 164, 165, 346, 0, 166, 0, 167,
	168, 347, 169, 0, 170, 0, 171, 0, 0, 0,
	172, 173, 174, 0, 175, 176, 348, 0, 349, 177,
	0, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	0, 187, 188, 0, 189, 190, 191, 0, 192, 0,
	350, 193, 194, 195, 196, 351, 352, 353, 0, 354,
	0, 197, 0, 198, 0, 199, 200, 201, 202, 203,
	0, 0, 204, 355, 0, 205, 0, 0, 206, 207,
	77, 0, 0, 208, 209, 210, 211, 0, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 84, 356,
	0, 357, 222, 223, 358, 0, 224, 225, 226, 0,
	359, 227, 360, 228, 229, 230, 0, 231, 0, 0,
	232, 233, 0, 0, 234, 361, 0, 235, 0, 362,
	236, 237, 238, 239, 240, 241, 242, 0, 243, 244,
	363, 245, 364, 248, 246, 247, 0, 249, 250, 251,
	252, 253, 254, 255, 256, 365, 257, 258, 259, 260,
	0, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 0, 272, 273, 0, 274, 275, 366, 276,
	0, 277, 278, 279, 280, 281, 0, 282, 283, 284,
	285, 78, 0, 286, 287, 288, 289, 0, 290, 291,
	367, 292, 0, 293, 294, 295, 296, 297, 298, 299,
	300, 368, 301, 0, 369, 0, 302, 303, 0, 304,
	305, 0, 83, 370, 0, 0, 79, 306, 371, 307,
	372, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 315, 316, 317, 318, 319, 0, 0, 320, 321,
	322, 323, 373, 374, 0, 324, 0, 325, 87, 0,
	0, 0, 326, 327, 328, 329, 330, 331, 332, 0,
	90, 91, 92, 93, 94, 95, 96, 0, 97, 98,
	99, 0, 0, 0, 0, 0, 0, 0, 100, 101,
	0, 102, 103, 0, 104, 105, 106, 333, 334, 0,
	335, 0, 336, 337, 0, 107, 338, 108, 109, 110,
	111, 0, 0, 112, 339, 340, 113, 0, 114, 115,
	116, 117, 341, 0, 0, 0, 118, 119, 120, 121,
	122, 0, 0, 123, 124, 125, 0, 126, 127, 128,
	129, 130, 131, 0, 0, 0, 132, 133, 134, 0,
	0, 0, 0, 0, 0, 135, 136, 137, 138, 139,
	342, 140, 141, 343, 344, 142, 0, 143, 0, 144,
	145, 146, 147, 148, 0, 149, 150, 151, 0, 0,
	152, 153, 154, 155, 0, 156, 157, 158, 0, 159,
	0, 160, 0, 161, 162, 345, 163, 164, 165, 346,
	0, 166, 0, 167, 168, 347, 169, 0, 170, 0,
	171, 0, 0, 0, 172, 173, 174, 0, 175, 176,
	348, 0, 349, 177, 0, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 0, 187, 188, 0, 189, 190,
	191, 0, 192, 0, 350, 193, 194, 195, 196, 351,
	352, 353, 0, 354, 0, 197, 0, 198, 0, 199,
	200, 201, 202, 203, 0, 0, 204, 355, 0, 205,
	0, 0, 206, 207, 411, 0, 0, 208, 209, 210,
	211, 0, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 412, 356, 0, 357, 222, 223, 358, 0,
	224, 225, 226, 0, 359, 227, 360, 228, 229, 230,
	0, 231, 0, 0, 232, 233, 0, 0, 234, 361,
	0, 235, 0, 362, 236, 237, 238, 239, 0, 241,
	242, 0, 243, 244, 363, 245, 364, 248, 246, 247,
	0, 249, 250, 251, 252, 253, 254, 0, 256, 365,
	257, 258, 259, 260, 0, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 0, 272, 273, 0,
	274, 275, 366, 0, 0, 277, 278, 279, 280, 281,
	0, 282, 283, 284, 285, 413, 0, 286, 287, 288,
	289, 0, 290, 291, 367, 292, 0, 293, 294, 295,
	296, 297, 298, 299, 300, 368, 301, 0, 369, 0,
	302, 303, 0, 304, 305, 0, 415, 370, 0, 0,
	414, 306, 371, 307, 372, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 315, 316, 317, 318, 319,
	0, 0, 320, 321, 322, 323, 373, 374, 0, 324,
	815, 325, 833, 834, 835, 0, 326, 327, 328, 329,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 836,
	815, 0, 833, 834, 835, 0, 0, 817, 0, 0,
	0, 0, 0, 842, 0, 0, 0, 0, 0, 836,
	0, 0, 0, 0, 0, 0, 0, 817, 0, 0,
	0, 0, 0, 842, 0, 0, 0, 0, 0, 816,
	0, 815, 0, 833, 834, 835, 0, 830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 816,
	836, 0, 0, 0, 0, 0, 0, 830, 817, 0,
	0, 0, 0, 0, 842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 815, 0, 833, 834, 835,
	816, 0, 0, 0, 0, 0, 0, 0, 830, 0,
	0, 0, 0, 0, 836, 0, 0, 0, 0, 0,
	0, 0, 817, 0, 0, 0, 0, 0, 842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 815,
	843, 833, 834, 835, 816, 0, 0, 0, 0, 0,
	0, 0, 830, 0, 0, 0, 0, 0, 836, 0,
	843, 0, 841, 0, 0, 0, 817, 0, 0, 0,
	0, 0, 842, 0, 0, 0, 838, 0, 0, 0,
	0, 0, 841, 0, 0, 0, 0, 831, 0, 0,
	0, 0, 0, 0, 0, 0, 838, 0, 816, 0,
	0, 843, 0, 0, 0, 0, 830, 831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 837, 841, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 838, 0, 0,
	0, 0, 837, 0, 0, 0, 0, 0, 831, 0,
	0, 0, 0, 0, 815, 843, 833, 834, 835, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 836, 0, 0, 0, 841, 0, 0,
	832, 817, 0, 837, 0, 0, 0, 842, 0, 0,
	0, 838, 0, 0, 0, 0, 0, 840, 0, 0,
	832, 0, 831, 0, 0, 0, 0, 0, 0, 843,
	0, 0, 0, 816, 0, 0, 0, 840, 0, 0,
	0, 830, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 841, 0, 0, 0, 0, 0, 837, 0, 0,
	0, 832, 0, 0, 0, 838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 831, 0, 840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 839,
	0, 0, 827, 828, 829, 0, 826, 823, 824, 825,
	818, 819, 820, 821, 822, 0, 0, 0, 0, 839,
	1663, 837, 827, 828, 829, 832, 826, 823, 824, 825,
	818, 819, 820, 821, 822, 0, 0, 0, 0, 0,
	1603, 0, 840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 843, 0, 0, 0, 0, 0,
	839, 0, 0, 827, 828, 829, 0, 826, 823, 824,
	825, 818, 819, 820, 821, 822, 841, 0, 0, 832,
	0, 1580, 0, 815, 0, 833, 834, 835, 0, 0,
	838, 0, 0, 0, 0, 0, 840, 0, 0, 0,
	0, 831, 836, 0, 0, 0, 0, 0, 0, 0,
	817, 0, 0, 0, 839, 0, 842, 827, 828, 829,
	0, 826, 823, 824, 825, 818, 819, 820, 821, 822,
	0, 0, 0, 0, 0, 1516, 837, 815, 0, 833,
	834, 835, 816, 0, 0, 0, 0, 0, 0, 0,
	830, 0, 0, 0, 0, 0, 836, 0, 0, 0,
	0, 0, 0, 0, 817, 0, 0, 0, 839, 0,
	842, 827, 828, 829, 0, 826, 823, 824, 825, 818,
	819, 820, 821, 822, 0, 0, 0, 0, 815, 1456,
	833, 834, 835, 0, 832, 0, 816, 0, 0, 0,
	0, 0, 0, 0, 830, 0, 815, 836, 833, 834,
	835, 840, 0, 0, 0, 817, 0, 0, 0, 0,
	0, 842, 0, 0, 0, 836, 0, 0, 0, 0,
	0, 0, 0, 817, 0, 0, 0, 0, 0, 842,
	0, 0, 0, 0, 0, 0, 0, 816, 0, 0,
	0, 0, 0, 843, 0, 830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 816, 0, 0, 0, 0,
	0, 0, 0, 830, 0, 841, 0, 0, 0, 0,
	0, 0, 0, 839, 0, 0, 827, 828, 829, 838,
	826, 823, 824, 825, 818, 819, 820, 821, 822, 0,
	831, 0, 0, 0, 1431, 0, 0, 843, 0, 0,
	0, 0, 0, 0, 815, 0, 833, 834, 835, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 841,
	0, 0, 0, 836, 0, 837, 0, 0, 0, 0,
	0, 817, 1307, 838, 1323, 1324, 1325, 842, 1768, 0,
	0, 0, 0, 0, 831, 0, 0, 0, 843, 0,
	0, 1424, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 816, 0, 0, 843, 0, 0, 0,
	841, 830, 0, 0, 0, 0, 0, 0, 0, 837,
	0, 0, 0, 832, 838, 0, 0, 0, 841, 0,
	0, 0, 0, 0, 0, 831, 0, 0, 0, 1320,
	840, 0, 838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	837, 0, 0, 0, 0, 0, 0, 832, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1337, 837, 0,
	0, 0, 1336, 0, 840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1767, 0, 0,
	0, 0, 839, 0, 843, 827, 828, 829, 0, 826,
	823, 824, 825, 818, 819, 820, 821, 822, 832, 0,
	0, 0, 0, 1394, 0, 0, 841, 0, 0, 0,
	0, 0, 0, 0, 0, 840, 832, 0, 0, 0,
	838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 831, 0, 840, 1326, 0, 839, 0, 0, 827,
	828, 829, 0, 826, 823, 824, 825, 818, 819, 820,
	821, 822, 0, 0, 0, 0, 0, 1088, 0, 1321,
	0, 0, 0, 0, 0, 0, 837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 839, 0, 0,
	827, 828, 829, 0, 826, 823, 824, 825, 818, 819,
	820, 821, 822, 0, 0, 839, 1500, 0, 827, 828,
	829, 0, 826, 823, 824, 825, 818, 819, 820, 821,
	822, 0, 0, 815, 832, 833, 834, 835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 840, 836, 0, 0, 0, 992, 0, 0, 0,
	817, 0, 1322, 0, 0, 0, 842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 846, 0, 0, 0,
	0, 0, 815, 0, 833, 834, 835, 0, 0, 0,
	0, 0, 816, 0, 0, 0, 0, 0, 0, 0,
	830, 836, 0, 0, 845, 0, 0, 0, 0, 817,
	0, 0, 0, 0, 0, 842, 0, 0, 0, 0,
	0, 0, 0, 839, 0, 0, 827, 828, 829, 0,
	826, 823, 824, 825, 818, 819, 820, 821, 822, 0,
	0, 816, 0, 993, 0, 0, 0, 0, 815, 830,
	833, 834, 835, 0, 1317, 1318, 1319, 0, 1316, 1313,
	1314, 1315, 1308, 1309, 1310, 1311, 1312, 836, 0, 0,
	0, 0, 0, 0, 0, 817, 0, 0, 0, 0,
	0, 842, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 815, 0, 833,
	834, 835, 0, 843, 0, 0, 0, 816, 0, 0,
	0, 0, 0, 0, 0, 830, 836, 0, 0, 0,
	0, 0, 0, 0, 817, 841, 0, 0, 0, 0,
	842, 0, 0, 0, 0, 0, 0, 0, 0, 838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	831, 0, 843, 0, 0, 0, 816, 0, 0, 0,
	0, 0, 0, 815, 830, 833, 834, 835, 0, 0,
	0, 0, 0, 0, 841, 0, 0, 0, 0, 0,
	0, 0, 836, 0, 0, 837, 0, 0, 838, 0,
	817, 0, 0, 0, 0, 0, 842, 0, 0, 831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 815, 843, 833,
	834, 835, 816, 0, 0, 0, 0, 0, 0, 0,
	830, 0, 0, 0, 837, 0, 836, 0, 0, 1338,
	841, 0, 0, 832, 817, 0, 0, 0, 0, 0,
	842, 0, 0, 1307, 838, 1323, 1324, 1325, 0, 0,
	840, 0, 0, 0, 0, 831, 0, 843, 0, 0,
	0, 815, 0, 833, 834, 835, 816, 0, 0, 0,
	0, 0, 0, 0, 830, 0, 0, 0, 0, 841,
	836, 0, 832, 0, 0, 0, 0, 0, 817, 0,
	837, 403, 0, 838, 842, 0, 0, 0, 0, 840,
	0, 1343, 0, 0, 831, 0, 0, 0, 0, 0,
	1320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	816, 0, 839, 843, 0, 827, 828, 829, 830, 826,
	823, 824, 825, 818, 819, 820, 821, 822, 0, 837,
	0, 0, 0, 0, 0, 841, 0, 0, 832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 838,
	0, 0, 0, 0, 0, 840, 0, 0, 0, 0,
	831, 839, 0, 0, 827, 828, 829, 843, 826, 823,
	824, 825, 818, 819, 820, 821, 822, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 832, 0, 841,
	0, 0, 0, 0, 0, 837, 815, 0, 833, 834,
	835, 0, 0, 838, 840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 831, 836, 0, 0, 1300, 0,
	0, 843, 0, 817, 0, 1326, 0, 839, 1450, 842,
	827, 828, 829, 0, 826, 823, 824, 825, 818, 819,
	820, 821, 822, 841, 0, 0, 0, 0, 0, 837,
	1321, 0, 0, 832, 0, 816, 0, 838, 0, 0,
	0, 0, 0, 830, 0, 0, 0, 0, 831, 0,
	840, 0, 0, 0, 0, 0, 839, 0, 0, 827,
	828, 829, 0, 826, 823, 824, 825, 818, 819, 820,
	821, 822, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 837, 0, 0, 0, 832, 815, 0,
	833, 834, 835, 0, 0, 0, 0, 0, 1305, 0,
	0, 0, 0, 0, 840, 0, 0, 836, 0, 0,
	0, 0, 0, 0, 0, 817, 0, 0, 0, 0,
	0, 842, 839, 1322, 0, 827, 828, 829, 0, 826,
	823, 824, 825, 818, 819, 820, 821, 822, 0, 0,
	815, 832, 833, 834, 835, 0, 843, 816, 0, 0,
	0, 0, 0, 0, 0, 830, 0, 0, 840, 0,
	0, 0, 0, 0, 0, 0, 0, 817, 841, 0,
	0, 0, 0, 842, 0, 0, 839, 0, 0, 827,
	828, 829, 838, 826, 823, 824, 825, 818, 819, 820,
	821, 822, 0, 831, 0, 0, 0, 0, 0, 816,
	0, 0, 0, 0, 0, 0, 0, 830, 0, 0,
	0, 0, 0, 0, 0, 1317, 1318, 1319, 0, 1316,
	1313, 1314, 1315, 1308, 1309, 1310, 1311, 1312, 837, 0,
	839, 0, 0, 827, 828, 829, 0, 826, 823, 824,
	825, 818, 819, 820, 821, 822, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 843, 0,
	0, 1020, 0, 1035, 1012, 1028, 1027, 0, 0, 1013,
	0, 0, 0, 0, 0, 0, 0, 1037, 1036, 0,
	841, 0, 0, 0, 0, 0, 832, 0, 0, 0,
	0, 0, 0, 0, 838, 0, 0, 0, 0, 0,
	0, 0, 0, 840, 0, 831, 0, 0, 0, 0,
	843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1033, 0, 0, 1025, 1024, 0, 0,
	0, 0, 841, 0, 0, 0, 0, 0, 0, 0,
	837, 0, 0, 0, 1023, 0, 838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1022, 0,
	0, 0, 0, 0, 0, 839, 0, 0, 827, 828,
	829, 0, 826, 823, 824, 825, 818, 819, 820, 821,
	822, 0, 0, 0, 0, 0, 0, 0, 832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1016, 1017, 1018, 840, 690, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 840, 0, 1026,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 839, 0, 0,
	827, 828, 829, 0, 826, 823, 824, 825, 818, 819,
	820, 821, 822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1021, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 839,
	0, 0, 827, 828, 829, 0, 826, 823, 824, 825,
	818, 819, 820, 821, 822, 0, 0, 1019, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1015, 0,
	0, 0, 0, 0, 0, 0, 0, 1014, 0, 0,
	1034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1038,
}
var sqlPact = [...]int{

	2084, -1000, -182, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 371,
	-1000, -1000, -1000, 291, 368, -109, 1854, 1854, -1000, -1000,
	25760, 1990, 37, 37, 37, 110, 343, -78, -1000, 398,
	-165, 25366, 20244, 937, -186, 19062, -61, 2084, 19850, 20244,
	24972, 739, 528, 19062, 24578, 24184, 23790, -1000, -1000, 13084,
	-1000, -1000, -1000, -1000, 364, -1000, -189, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 347, -1000, 23396, 23396, 489,
	-1000, -1000, 221, -23, 928, -1000, -179, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 736, -1000, 340,
	732, 730, -26, 522, -1000, 489, -1000, -1000, -1000, 19062,
	-1000, 23002, 560, 22608, -1000, 398, -1000, -1000, -1000, 424,
	936, 936, 936, 927, -132, -133, -78, -190, 20244, -1000,
	-60, -1000, -1000, -1000, -1000, -1000, -190, 9292, 9292, -1000,
	329, -61, -1000, -45, 17090, -305, -1000, 8440, -1000, 877,
	786, 202, 197, 785, 19062, 20244, 149, 22214, 783, 70,
	-1000, -1000, 782, -196, 781, -202, -1000, -1000, -1000, -1000,
	-1000, -1000, -61, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 19456, 1870, 19456, -1000, -1000, -1000, 447, 13904, 13498,
	843, 490, -1000, -1000, -1000, -180, 3770, 20244, 747, 19456,
	20244, -1000, 20244, -1000, 442, -1000, -1000, 81, -1000, -62,
	410, 21820, -1000, 408, -1000, 424, -1000, 296, 510, 9718,
	701, 10996, -78, -1000, -1000, -78, -78, 10996, -1000, -1000,
	20244, -190, 951, 20244, 727, -192, -1000, 27612, -1000, -1000,
	10996, 10996, 10996, 10996, 10996, 262, -63, -1000, -1000, -1000,
	5455, -1000, -1000, -305, -63, -55, -1000, -1000, -64, -305,
	-1000, -1000, -1000, -1000, -65, 1078, 290, -1000, -1000, -1000,
	10996, -14, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 745, -1000, -1000, -1000, -1000, -1000, -1000, -66, -67,
	-68, -72, -76, -77, -79, -80, -81, -82, -83, 245,
	-1000, 1, -1000, -1000, 1, 1, -1000, -92, -92, -91,
	-1000, -1000, -1000, -92, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -84, -2, -85, -1000, -1000, -1000, 20244,
	-305, -1000, 3363, 3770, 10996, -208, -1000, 28158, -1000, -203,
	415, -1000, 18274, 882, 870, 879, 19062, 102, 97, 20244,
	-6, 29, 950, 16298, -1000, 20244, 20244, -1000, 20244, -1000,
	-1000, 20244, 20244, -165, 17486, 96, -198, 20244, 20244, -1000,
	-1000, 726, 215, -193, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 996, -1000, -1000, -1000, -1000, 1063,
	-193, -1000, -1000, -1000, -1000, -1000, 288, -1000, -1000, -1000,
	-1000, 3770, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 20244, -1000,
	-1000, -1000, -1000, -1000, 19062, 17880, 780, 312, 406, -1000,
	778, -1000, -1000, -1000, -1000, 28158, -1000, 249, -1000, -1000,
	28158, 173, 534, -1000, 534, -194, -1000, 27563, -1000, -86,
	-212, -1000, -6, 15902, 9292, 28297, 20244, 72, 10996, 10996,
	10996, 10996, 10996, 10996, 10996, 10996, 10996, 10996, 10996, 10996,
	10996, 10996, 10996, 10996, 10996, 10996, 10996, 10996, 10996, 829,
	95, 860, 488, -93, 523, 3770, -1000, -1000, 986, 986,
	986, 28210, 28210, -25, -1000, -307, 27077, -195, -305, -1000,
	-1000, 7588, 7161, -305, 4175, -1000, 315, 1062, -3, 28158,
	754, 594, -87, 10996, 935, 10996, 11848, 10996, 10996, 5881,
	10996, 10996, 10996, 10996, -1000, -88, -1000, -1000, -1000, -1000,
	1060, -1000, -1000, 1054, -1000, 1042, -6, 10996, -139, -1000,
	-1000, -1000, -1000, 436, 8440, -1000, 401, 20244, 20244, 20244,
	-1000, -1000, 404, 21426, -1000, 28297, 20244, -1000, -89, -90,
	479, 472, 20244, 20244, 21032, 20638, 20244, 864, 20244, 20244,
	188, -1000, 10996, 309, -1000, 15112, 6, 20244, -8, -1000,
	-1000, -1000, -36, 20244, -1000, 70, -1000, -1000, -196, -1000,
	-1000, 20244, 20244, -198, -199, 20244, -1000, 334, 229, -1000,
	-1000, 14310, -1000, -1000, -1000, 315, 1026, -1000, -204, -1000,
	-1000, -140, -200, -1000, -1000, -1000, -1000, 20244, 82, 20244,
	20244, 777, 20244, 173, -1000, 10996, 1017, -1000, -1000, -1000,
	10996, -1000, -1000, -1000, -165, 20244, -1000, 590, -201, 1086,
	18668, 18668, -1000, 14716, -1000, -1000, 954, -1000, -1000, -1000,
	-1000, 10, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -91, 245, -92, -92, -92, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1, 1, 1, -1000, -1000,
	-28, 387, 387, 980, 980, 980, 771, 771, 1466, 157,
	2088, 2088, 2088, 738, 285, 285, 2088, 2088, 2088, 28210,
	346, 376, 10996, 93, 451, -93, 10996, -1000, 1477, -1000,
	-1000, -1000, 719, -94, 11848, 11848, -1000, -1000, -1000, 5455,
	-96, -1000, -1000, -1000, -1000, -1000, -97, 10996, -1000, 10996,
	-213, -214, -1000, 28158, -1000, -217, -1000, -1000, -130, 10996,
	10996, 10996, -141, -1000, 91, -1000, 87, 79, 71, -1000,
	-98, -142, 276, -1000, 10996, 271, -99, -100, 10996, 28046,
	-143, 717, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -144,
	27901, -145, 2352, -1000, 11848, 11848, 11848, 5455, -101, -146,
	27254, -285, 27847, 8866, 8866, 8866, -148, 27793, 10996, -285,
	1960, -221, -222, -223, 1015, -227, -149, -151, 590, -228,
	-1000, -1000, 10996, -1000, -1000, -1000, 69, 65, 776, -1000,
	395, -1000, 351, 10996, 20244, -102, -103, 342, -1000, 775,
	461, 774, 461, -1000, -203, 356, -1000, -1000, 48, 28158,
	-1000, 886, -232, -1000, -1000, -6, 16298, 8440, -233, -1000,
	-204, -1000, -204, -1000, -1000, -1000, -1000, -1000, -152, 20244,
	-1000, 17880, -104, 20244, -105, -106, 20244, -1000, 284, 27023,
	-1000, -153, -1000, -1000, -1000, -1000, -1000, 576, 925, 15902,
	512, 511, 15902, 818, 274, 274, 274, -1000, -1000, -1000,
	20244, -108, -1000, 15508, -154, 1086, -53, -54, -1000, 1008,
	10996, 376, 10996, 11848, 11848, -1000, 376, -1000, -1000, -1000,
	-1000, 715, -111, 10996, 28297, 27282, 2889, -234, -1000, 5455,
	6734, -209, 26824, 10996, -1000, -1000, -55, -1000, -155, 8014,
	-1000, 27678, -125, -125, -1000, 411, 418, 258, 159, 1005,
	1076, 795, -1000, 10996, 27727, -1000, 16694, -5, 279, 26709,
	28297, -1000, 10996, -1000, 658, 10996, -1000, 28297, 11848, 11848,
	11848, 11848, 11848, 11848, 11848, 11848, 11848, 11848, 11848, 11848,
	11848, 11848, 11848, 11848, 11848, 11848, 445, 11848, 985, 985,
	985, -210, 6307, -1000, 733, 658, 10996, 10996, 28297, -156,
	-157, -158, -1000, 10996, -285, 10996, -1000, -1000, -1000, -160,
	-1000, 1002, -1000, -1000, 576, -1000, 27128, 20244, 20244, 20244,
	765, 1053, -1000, 26655, -238, 20244, 20244, -1000, 569, 533,
	28, 20244, -1000, 20244, -1000, 20244, 20244, 20244, 20244, 13,
	-165, -1000, -1000, -1000, -110, 1074, -1000, -1000, 20244, -112,
	17880, 12688, 307, -1000, -1000, -1000, -10, 10996, 11422, 1086,
	15902, 15902, 1788, 491, 15902, -1000, -1000, -1000, -1000, -113,
	20244, 18668, 311, 989, -161, 1004, 376, 2855, 2776, 10996,
	28297, 2808, -242, -1000, 10996, 10996, -1000, 26601, -244, -1000,
	10996, -1000, 28158, -1000, 1070, 10996, -162, -163, -164, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -167, -1000, -1000, 28158,
	10996, -1000, -1000, 26154, 10996, -168, -1000, -169, 28158, 733,
	28158, -1000, 444, 444, 985, 985, 985, 728, 728, 527,
	366, 1908, 1908, 1908, 894, 381, 381, 1908, 1908, 1908,
	622, 468, -114, 27883, 10996, -246, -1000, -1000, -1000, 28158,
	28158, -170, -1000, -1000, -1000, -285, 26560, -1000, -171, -10,
	-1000, -1000, -1000, -1000, 20244, -1000, 20244, -1000, 20244, 385,
	-1000, -1000, 467, -117, 11848, 20244, -1000, 382, -248, -253,
	360, -1000, 319, 10996, -1000, 28297, 461, 461, -1000, 43,
	41, -1000, 805, 12688, 856, -1000, -118, -1000, -254, 20244,
	-172, -258, -1000, 47, 900, 10996, -1000, -1000, -119, 20244,
	-1000, 20244, 28158, -243, -1000, 28158, -1000, 4602, -1000, 1788,
	-1000, -120, 10996, 15902, -1000, 20244, -259, -1000, -1000, -57,
	-58, -1000, 10996, 10996, 2808, -260, -1000, 28297, 376, 376,
	-1000, -1000, 26540, -1000, 27678, -1000, -1000, -1000, -1000, 28158,
	254, -1000, 2718, -1000, -1000, -1000, 11848, 616, -122, 28297,
	2690, -1000, -1000, -1000, -1000, -1000, -1000, 1504, -1000, -1000,
	-1000, 10996, 27883, -129, -1000, -123, -1000, -1000, -1000, 219,
	-1000, -1000, 28158, 901, -1000, -1000, 20244, 20244, 154, -264,
	20244, -1000, -1000, 5029, 382, -268, -1000, 382, 12688, 898,
	-305, 20244, 898, 2628, 4175, -124, -255, -1000, 949, 11422,
	-1000, -1000, 20244, 28158, -1000, -278, -1000, -1000, -1000, 376,
	376, -1000, -1000, -1000, -175, 279, 921, -1000, 1451, 11848,
	28297, -284, -1000, -1000, 2271, 427, 20244, 20244, 20244, 12,
	20244, -1000, -1000, 143, -1000, -6, -1000, -1000, 382, -1000,
	-1000, -1000, -1000, -1000, 900, -130, 12688, 20244, -128, -1000,
	-286, -1000, -1000, 196, 10996, 1451, -288, -1000, -1000, 287,
	310, -293, -298, -129, -1000, 10996, -1000, 16298, -1000, -1000,
	898, -176, -299, -1000, -1000, -1000, -177, 10570, 10570, -285,
	-1000, -1000, 302, 299, 294, -1000, -1000, -1000, -1000, -1000,
	427, 28158, -269, -1000, -1000, 382, -1000, -1000, -1000, 12274,
	373, 167, 27146, -1000, -1000, 815, -1000, 16, 885, 885,
	287, -1000, -1000, 959, -1000, -1000, -1000, -1000, -1000, -1000,
	976, -1000, -1000, 492, -1000, -1000, 10144, -1000, -1000, -1000,
	-1000,
}
var sqlPgo = [...]int{

	0, 1352, 1351, 979, 1348, 1345, 1340, 1335, 1333, 86,
	1328, 1325, 98, 1323, 83, 1322, 1321, 1320, 58, 1319,
	1309, 1308, 1307, 82, 40, 1806, 115, 113, 1305, 1304,
	1299, 11, 80, 87, 1292, 57, 1289, 432, 1617, 51,
	1288, 17, 24, 27, 1287, 1286, 1282, 1281, 39, 1279,
	1278, 1277, 10, 45, 13, 1276, 15, 204, 1273, 1272,
	89, 1271, 75, 44, 100, 30, 1269, 1268, 299, 1261,
	12, 55, 1258, 38, 1255, 22, 56, 105, 1249, 1248,
	19, 1247, 467, 48, 21, 49, 1246, 1244, 1243, 61,
	67, 43, 1242, 37, 35, 1237, 53, 1236, 1235, 103,
	119, 1234, 1233, 72, 1232, 1230, 1228, 1226, 1225, 968,
	1221, 5, 32, 50, 4, 23, 0, 586, 500, 1220,
	59, 42, 47, 29, 1212, 91, 1209, 1203, 1202, 1199,
	1189, 60, 1186, 1185, 52, 107, 36, 63, 68, 31,
	33, 65, 114, 128, 92, 1183, 95, 1181, 46, 1180,
	1178, 313, 69, 1176, 1175, 1171, 256, 159, 158, 26,
	1164, 1153, 104, 28, 1143, 1142, 64, 93, 1141, 110,
	1140, 106, 90, 1139, 94, 1137, 77, 1136, 564, 121,
	79, 1134, 97, 54, 1130, 1126, 1120, 25, 1, 8,
	7, 6, 3, 16, 14, 1117, 1113, 102, 70, 1111,
	437, 1107, 1106, 34, 1104, 1103, 20, 1099, 18, 1098,
	9, 2, 1097, 143, 1095, 74, 1093, 993, 1092, 111,
	1087, 1086, 1089, 62,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 4, 33, 33, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 29,
	29, 35, 35, 35, 34, 34, 30, 30, 5, 5,
	5, 9, 10, 10, 10, 10, 10, 10, 98, 64,
	64, 63, 63, 67, 67, 11, 11, 12, 12, 12,
	12, 147, 147, 146, 13, 17, 213, 213, 213, 217,
	217, 218, 218, 219, 219, 219, 219, 219, 219, 219,
	215, 215, 19, 19, 19, 109, 109, 108, 108, 108,
	108, 110, 110, 110, 110, 171, 169, 169, 176, 176,
	176, 46, 46, 46, 46, 46, 168, 168, 168, 168,
	177, 177, 177, 177, 177, 177, 177, 47, 47, 47,
	175, 175, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 170, 170, 214, 214, 216, 216, 8, 8,
	48, 48, 49, 49, 113, 113, 113, 112, 185, 185,
	186, 186, 186, 187, 187, 187, 187, 187, 187, 187,
	184, 184, 182, 182, 183, 183, 183, 183, 220, 220,
	111, 111, 52, 52, 190, 190, 190, 190, 188, 188,
	188, 188, 188, 191, 189, 192, 192, 192, 192, 192,
	135, 135, 135, 22, 7, 7, 95, 95, 56, 56,
	139, 139, 139, 42, 42, 31, 31, 31, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 96, 96, 97,
	97, 21, 21, 21, 222, 222, 36, 36, 37, 6,
	6, 14, 44, 44, 105, 105, 105, 107, 107, 107,
	106, 106, 106, 23, 70, 70, 71, 71, 145, 72,
	72, 18, 18, 25, 25, 24, 24, 24, 24, 24,
	24, 26, 26, 27, 27, 27, 27, 27, 27, 27,
	198, 198, 198, 200, 200, 197, 15, 15, 15, 15,
	199, 199, 221, 221, 82, 82, 82, 50, 50, 51,
	51, 54, 54, 53, 55, 55, 138, 77, 77, 77,
	77, 99, 99, 100, 100, 101, 101, 102, 102, 102,
	103, 103, 104, 104, 76, 76, 79, 79, 80, 80,
	81, 121, 121, 28, 28, 60, 60, 61, 61, 140,
	140, 140, 140, 141, 141, 141, 141, 141, 141, 136,
	136, 136, 136, 137, 137, 85, 85, 85, 85, 83,
	83, 84, 84, 142, 142, 142, 142, 78, 78, 143,
	143, 143, 114, 114, 148, 148, 148, 59, 59, 59,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	150, 150, 150, 150, 152, 152, 152, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	153, 153, 160, 160, 161, 161, 162, 163, 154, 154,
	155, 155, 156, 157, 164, 164, 164, 166, 166, 158,
	158, 159, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 91, 91, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 193, 193, 193, 193, 193, 193, 193, 195,
	195, 196, 196, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 201, 201, 202, 202, 203, 203,
	204, 204, 206, 207, 207, 207, 208, 212, 212, 205,
	205, 209, 209, 209, 210, 210, 211, 211, 211, 211,
	211, 125, 125, 125, 126, 126, 127, 133, 133, 133,
	45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 40, 40, 40, 65,
	65, 123, 123, 122, 122, 122, 124, 124, 66, 165,
	165, 165, 165, 165, 165, 165, 86, 86, 92, 87,
	87, 88, 88, 88, 88, 88, 88, 93, 94, 89,
	89, 89, 120, 120, 128, 132, 132, 131, 130, 130,
	129, 129, 115, 115, 115, 115, 115, 73, 73, 223,
	223, 134, 134, 74, 74, 75, 69, 69, 68, 68,
	144, 144, 144, 144, 62, 62, 43, 43, 57, 57,
	58, 58, 41, 41, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 167, 167, 167, 38, 38,
	38, 39, 39, 173, 173, 173, 174, 174, 174, 174,
	172, 172, 172, 172, 172, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181,
}
var sqlR2 = [...]int{

	0, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	4, 6, 1, 3, 2, 5, 3, 6, 4, 6,
	6, 6, 4, 8, 2, 3, 3, 6, 4, 3,
	2, 1, 1, 0, 2, 0, 2, 0, 1, 1,
	1, 5, 6, 4, 3, 5, 3, 5, 1, 1,
	3, 1, 2, 2, 3, 2, 5, 1, 1, 1,
	1, 1, 3, 1, 6, 6, 1, 2, 2, 1,
	1, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 2, 3, 3, 2, 1, 3, 3, 3,
	3, 1, 3, 3, 2, 1, 1, 3, 1, 1,
	1, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 0,
	1, 1, 2, 2, 4, 2, 4, 4, 3, 3,
	4, 2, 2, 0, 2, 0, 2, 0, 6, 9,
	1, 0, 1, 3, 1, 1, 1, 3, 2, 0,
	3, 1, 2, 2, 1, 1, 2, 4, 2, 5,
	6, 7, 3, 1, 4, 5, 5, 10, 1, 1,
	4, 0, 3, 0, 2, 2, 2, 0, 1, 1,
	2, 2, 0, 3, 3, 2, 1, 1, 2, 2,
	1, 2, 1, 4, 10, 13, 1, 0, 1, 3,
	3, 3, 5, 2, 0, 1, 1, 0, 6, 6,
	8, 6, 8, 8, 10, 8, 10, 1, 0, 2,
	0, 3, 2, 2, 1, 0, 1, 0, 3, 3,
	6, 6, 1, 3, 1, 4, 2, 8, 5, 0,
	4, 3, 0, 7, 1, 3, 1, 1, 3, 5,
	5, 1, 1, 3, 3, 1, 2, 3, 2, 3,
	4, 1, 1, 8, 8, 1, 2, 4, 4, 4,
	2, 2, 3, 1, 3, 6, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 3, 1, 3, 2, 2, 2, 1,
	1, 2, 5, 2, 3, 1, 1, 1, 3, 0,
	1, 1, 1, 1, 3, 0, 1, 3, 1, 1,
	2, 2, 0, 2, 3, 2, 0, 1, 3, 2,
	2, 1, 4, 3, 4, 5, 4, 5, 4, 5,
	2, 4, 1, 1, 0, 2, 2, 2, 1, 1,
	0, 4, 2, 1, 2, 2, 4, 1, 3, 1,
	2, 3, 2, 0, 2, 5, 2, 3, 4, 0,
	1, 1, 1, 1, 2, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 0, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	3, 0, 1, 1, 1, 1, 5, 2, 1, 1,
	1, 1, 4, 1, 2, 2, 1, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 0, 1, 4, 1, 3,
	3, 5, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 4, 4,
	5, 3, 4, 3, 3, 4, 3, 4, 3, 4,
	5, 6, 6, 7, 6, 7, 6, 7, 3, 4,
	4, 6, 2, 1, 3, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 5, 6, 6, 7,
	1, 1, 1, 3, 1, 1, 1, 2, 2, 2,
	1, 1, 3, 5, 6, 8, 6, 6, 4, 4,
	1, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	6, 4, 4, 4, 4, 6, 5, 5, 5, 4,
	6, 4, 4, 4, 5, 0, 5, 0, 2, 0,
	1, 3, 3, 2, 2, 0, 6, 1, 0, 3,
	0, 2, 2, 0, 1, 4, 2, 2, 2, 2,
	2, 4, 3, 5, 4, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	3, 1, 3, 3, 3, 2, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 4, 3, 2, 3,
	0, 3, 3, 2, 2, 1, 0, 2, 2, 3,
	2, 1, 1, 3, 5, 1, 2, 4, 2, 0,
	1, 0, 2, 2, 2, 3, 5, 1, 2, 1,
	0, 1, 1, 1, 3, 3, 1, 0, 1, 3,
	3, 2, 1, 1, 1, 3, 1, 2, 1, 3,
	3, 0, 1, 2, 1, 1, 1, 1, 6, 2,
	3, 5, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}
var sqlChk = [...]int{

	-1000, -1, -2, -3, -4, -5, -9, -10, -11, -13,
	-14, -16, -17, -18, -19, -20, -21, -22, -23, 25,
	-6, -7, -8, -199, 128, 142, 163, 314, -24, -25,
	333, 336, 42, 75, 316, 372, 90, -198, -27, -26,
	429, 401, 411, 326, -28, 358, 392, 432, 358, 104,
	183, 117, 193, 385, -98, 104, 358, 183, -12, 429,
	-18, -14, -23, -9, -217, 23, -218, -219, 90, 128,
	163, 326, 193, 117, 385, -217, -109, 220, 331, 366,
	-110, -108, -171, 362, 238, -63, -38, 4, -178, -180,
	16, 17, 18, 19, 20, 21, 22, 24, 25, 26,
	34, 35, 37, 38, 40, 41, 42, 51, 53, 54,
	55, 56, 59, 62, 64, 65, 66, 67, 72, 73,
	74, 75, 76, 79, 80, 81, 83, 84, 85, 86,
	87, 88, 92, 93, 94, 101, 102, 103, 104, 105,
	107, 108, 111, 113, 115, 116, 117, 118, 119, 121,
	122, 123, 126, 127, 128, 129, 131, 132, 133, 135,
	137, 139, 140, 142, 143, 144, 147, 149, 150, 152,
	154, 156, 160, 161, 162, 164, 165, 169, 171, 172,
	173, 174, 175, 176, 177, 178, 179, 181, 182, 184,
	185, 186, 188, 191, 192, 193, 194, 201, 203, 205,
	206, 207, 208, 209, 212, 215, 218, 219, 223, 224,
	225, 226, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 242, 243, 246, 247, 248, 251, 253, 254,
	255, 257, 260, 261, 264, 267, 270, 271, 272, 273,
	274, 275, 276, 278, 279, 281, 284, 285, 283, 287,
	288, 289, 290, 291, 292, 293, 294, 296, 297, 298,
	299, 301, 302, 303, 304, 305, 306, 307, 308, 309,
	310, 311, 313, 314, 316, 317, 319, 321, 322, 323,
	324, 325, 327, 328, 329, 330, 333, 334, 335, 336,
	338, 339, 341, 343, 344, 345, 346, 347, 348, 349,
	350, 352, 356, 357, 359, 360, 367, 369, 372, 373,
	374, 375, 376, 377, 378, 381, 382, 383, 384, 385,
	388, 389, 390, 391, 395, 397, 402, 403, 404, 405,
	406, 407, 408, 43, 44, 46, 48, 49, 52, 60,
	61, 68, 106, 109, 110, 141, 145, 151, 166, 168,
	190, 195, 196, 197, 199, 213, 239, 241, 244, 250,
	252, 265, 269, 280, 282, 295, 318, 340, 351, 354,
	363, 368, 370, 392, 393, 4, 104, 72, 105, 165,
	183, 359, 362, 366, 23, -222, 366, -222, -222, -221,
	358, 358, -95, 104, 380, -26, -27, -25, -53, -54,
	379, 198, 138, 263, -24, -25, -198, -200, 298, -197,
	-38, 220, 238, 331, 366, 362, -200, -51, -50, 23,
	124, 433, -142, -43, 259, -38, -75, 429, -3, -142,
	175, -38, -43, 175, 158, 200, -143, -142, 175, -64,
	-63, -38, 175, -64, 175, -147, -146, -174, 4, -178,
	-180, -179, 392, 39, 45, 70, 78, 91, 157, 159,
	189, 202, 204, 214, 216, 240, 266, 268, 315, 337,
	396, 258, 433, 258, -109, -109, -37, 203, 364, 414,
	158, 408, -47, 6, 112, -67, 431, 158, -214, 258,
	158, -170, 158, 408, 203, -36, -37, -78, -142, -63,
	175, 183, -38, 175, -53, -54, -77, -99, -100, 217,
	148, 256, -82, 23, 124, -82, -82, 51, 430, 430,
	433, -200, -58, 429, -69, -68, -144, -116, 422, -118,
	420, 421, 426, 245, 409, -125, 380, -43, -119, 9,
	429, -128, -195, -25, 141, 31, -126, -127, 318, -38,
	8, 5, 6, 7, -41, -150, -159, 371, 146, 249,
	57, -193, -194, 4, -178, -173, -151, -161, -155, -158,
	199, 70, 96, 99, 97, 100, 332, 386, 58, 145,
	269, 280, 354, 368, 370, 250, 68, 166, 213, 127,
	44, 46, 48, 49, 60, 61, 106, 109, 110, 151,
	195, 196, 197, 252, 295, 340, 363, 393, -179, -162,
	-163, -156, -157, -164, -68, 258, -75, 422, -43, 429,
	-73, -115, 431, 434, 427, -74, -134, -116, 112, -33,
	305, -32, 19, 25, 128, 390, 141, 305, 305, 141,
	-143, -44, -43, 333, -38, 32, 141, -35, 433, 55,
	311, 141, 141, 430, 433, -213, -62, 358, 104, -43,
	-219, -213, 215, -169, 112, -176, -168, -135, 9, 371,
	146, 258, -175, 5, 421, -167, -174, 6, 8, 420,
	-169, 112, 94, -177, 6, 4, -159, -135, 112, 220,
	199, 431, -172, 4, -178, -180, -179, -181, 23, 27,
	28, 29, 30, 31, 32, 33, 36, 50, 57, 58,
	63, 69, 71, 82, 90, 95, 96, 97, 98, 99,
	100, 112, 114, 120, 124, 125, 130, 134, 138, 146,
	148, 153, 155, 158, 163, 167, 170, 180, 183, 187,
	198, 200, 210, 211, 217, 221, 222, 245, 249, 256,
	258, 259, 262, 263, 277, 286, 300, 312, 326, 332,
	342, 355, 358, 361, 364, 365, 371, 379, 380, 386,
	387, 394, 398, 399, 400, 401, -171, -216, 153, -213,
	-171, -171, 215, -35, 433, 429, 245, -39, 175, -38,
	245, -77, -100, -99, -101, -116, 23, -104, 150, 242,
	-116, -118, -26, -26, -26, -55, -138, -116, -197, 32,
	-57, -38, -60, 158, 433, 10, 69, 37, 420, 421,
	422, 423, 424, 417, 418, 419, 416, 412, 413, 414,
	77, 227, 320, 12, 13, 14, 29, 262, 216, 409,
	337, 202, 43, 180, -40, 32, 4, -45, -116, -116,
	-116, -116, -116, 268, -25, -25, -116, -65, -73, -25,
	-122, 427, 429, -73, 429, 6, 6, 429, -129, -116,
	-201, 402, 153, 429, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 282, -166, 395, -166, -166, -152,
	429, -152, -153, 429, -152, 429, -60, 429, -43, -115,
	-172, 422, -172, -116, 433, 430, 433, 364, -96, 82,
	71, -112, 175, 71, -182, -38, 82, -183, 63, 380,
	286, 155, -96, 82, -96, 82, 82, -142, 364, 364,
	-43, -114, 399, -105, -18, 429, 112, 32, -70, -71,
	-145, -72, -43, 429, -38, -64, -63, -38, -64, -12,
	-146, 364, 433, -62, -57, 158, -46, 294, 306, 341,
	329, 433, 5, 8, 8, 6, 429, -172, -215, -38,
	-142, -48, -49, -113, -112, -184, -182, 183, 380, 141,
	258, 245, 141, -102, -167, 429, 421, -103, 318, 319,
	433, -31, 33, 120, 429, 433, 430, -114, -61, -140,
	-142, -25, -141, 429, -144, -148, -149, -151, -160, -154,
	-158, -159, 47, 52, 360, 351, 195, 196, 197, 340,
	44, 295, 151, 127, 110, 109, 252, 49, 48, -162,
	-163, -156, -157, 106, 363, 46, 61, 60, 393, -63,
	362, -116, -116, -116, -116, -116, -116, -116, -116, -116,
	-116, -116, -116, -116, -116, -116, -116, -116, -116, -116,
	-116, -116, 216, 337, 43, 180, 364, 249, 245, 371,
	146, 381, 124, 254, -223, 355, 36, -120, -25, 429,
	-133, 30, 342, 23, -172, -125, 318, 429, 430, 433,
	-65, -124, 428, -116, -122, -65, 430, 430, -65, 394,
	23, 124, 422, -90, 406, 235, 107, 173, 232, -91,
	324, 8, -132, -131, 398, -202, 149, 167, 429, -116,
	-66, -165, 4, 406, 235, 107, 173, 232, 324, -86,
	-116, -87, -117, -118, 420, 421, 426, 429, 318, -88,
	-116, -65, -116, 50, 211, 365, -89, -116, 158, -65,
	-116, -65, -65, -65, 429, 8, 8, 8, -114, -65,
	430, 428, 435, -134, -32, -43, -38, -38, 245, -112,
	175, -148, -38, 429, 429, 205, 205, -38, -38, 175,
	-38, 175, -38, -38, -33, 305, -38, -38, 305, -116,
	-107, 258, -62, 392, -38, -60, 433, 414, -62, -35,
	-215, -43, -215, 377, 76, 294, -176, -90, 8, 433,
	430, 433, -39, 183, -63, -43, 141, -38, -103, -116,
	-138, -15, -18, -14, -23, -9, -38, -76, 167, 433,
	91, -85, 204, 240, 159, 214, 315, 189, -137, -136,
	32, -38, -137, -25, -141, -140, -59, 31, -90, 429,
	408, -116, 364, -223, 355, -120, -116, 249, 371, 146,
	381, 124, 254, 158, 429, -117, -117, -65, -25, 429,
	429, -65, -116, 433, 428, 428, 433, 430, -54, 433,
	-53, -116, -65, -65, 430, 364, 364, 364, 364, 429,
	430, -130, -131, 130, -116, -207, 267, 429, 429, -116,
	32, 430, 158, 430, -92, 277, 430, 10, 420, 421,
	422, 423, 424, 417, 418, 419, 416, 412, 413, 414,
	77, 227, 320, 12, 13, 14, 202, 180, -117, -117,
	-117, -65, 429, 430, -93, -94, 158, 153, 32, -89,
	-89, -89, 430, 158, -65, 433, 430, 430, 430, 8,
	430, 433, 430, 430, -76, 430, -116, 364, 364, 141,
	245, -185, -183, -116, -57, 429, 429, -29, 128, 333,
	-97, 141, -35, 141, -35, 364, -96, 82, 364, 80,
	430, -114, -71, -134, 430, 430, -38, -113, 429, -39,
	429, 429, -38, 259, 430, 430, -121, 170, 51, -140,
	204, 204, -140, -85, 204, -83, 266, -83, -83, -38,
	429, 430, 427, 427, 8, -116, -116, -117, -117, 158,
	429, -116, -123, -148, 29, 29, 430, -116, -65, 430,
	433, 430, -116, -122, 430, 394, -54, -54, -54, 235,
	173, 232, -91, 232, -91, -91, 8, 6, 134, -116,
	361, -208, -38, 429, 399, -53, 430, -148, -116, -93,
	-116, -148, -117, -117, -117, -117, -117, -117, -117, -117,
	-117, -117, -117, -117, -117, -117, -117, -117, -117, -117,
	124, 245, 254, -117, 433, -65, 430, -94, -93, -116,
	-116, -148, 430, 430, 430, -65, -116, 430, 8, -121,
	428, -38, -38, -112, 141, -186, 82, -187, 69, 245,
	249, 380, 286, 63, 112, 300, 430, 430, -57, -57,
	245, 112, 245, 112, 103, 374, -38, -38, -43, -38,
	-38, -38, -106, 429, 258, -18, 414, 6, -57, 429,
	-48, -56, -139, -38, -196, 429, -193, -194, -41, 258,
	-203, 400, -116, -79, -80, -116, -81, 429, -140, -140,
	-84, 387, 258, 204, -140, 429, -57, -136, 428, 8,
	8, 430, 29, 29, -116, -123, 430, 433, -116, -116,
	430, 430, -116, 6, -116, 430, 430, 430, 430, -116,
	-212, -38, -116, 430, 430, -94, 158, 124, 254, 429,
	-116, 430, 430, 430, 430, -203, -112, -38, -63, 249,
	205, 429, -117, -43, -111, -220, 89, 353, 430, 430,
	249, 249, -116, -148, -35, -35, 364, 364, 125, -56,
	82, -75, -25, 429, 430, -57, 430, 430, 433, -42,
	-73, 69, -42, -116, 429, -43, -204, -206, -38, 433,
	430, -84, 429, -116, -140, -57, 430, 428, 428, -116,
	-116, 430, -148, 430, -54, -205, 274, 430, -117, 158,
	429, -123, 430, -187, -116, -52, 429, 429, 300, -34,
	69, -38, -38, 385, 246, 430, -38, -111, 430, -111,
	-139, -31, -63, -31, 430, -65, 429, 433, 32, -80,
	-57, 430, 430, -54, 51, -117, -123, 430, 430, -190,
	229, -57, -57, -43, -30, 387, -63, 333, -114, -111,
	-42, -54, -56, -206, -208, 430, -209, 293, 319, -65,
	430, -188, -191, -189, 258, 159, 273, 338, 430, 430,
	-52, -116, -70, -31, 430, 430, 430, -210, -211, 43,
	376, 94, -116, -210, -189, 258, -191, 258, 385, 117,
	-190, -114, -111, -211, 281, 152, 318, 281, 152, -192,
	243, 311, 55, 333, -192, -188, 29, 18, 249, 112,
	-211,
}
var sqlDef = [...]int{

	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 0,
	48, 49, 50, 0, 0, 291, 0, 0, 261, -2,
	0, 0, 235, 235, 235, 293, 207, 290, -2, 302,
	0, 0, 0, 300, 275, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 58, 65, 0,
	67, 68, 69, 70, 0, 79, 80, 81, 83, 84,
	85, 86, 87, 88, 89, 0, 92, 853, 933, 954,
	96, 101, 0, 1019, -2, 105, 61, 718, 719, 720,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	795, 796, 797, 798, 799, 800, 801, 802, 803, 804,
	805, 806, 807, 808, 809, 810, 811, 812, 813, 814,
	815, 816, 817, 818, 819, 820, 821, 822, 823, 824,
	825, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 854, 855,
	856, 857, 858, 859, 860, 861, 862, 863, 864, 865,
	866, 867, 869, 870, 871, 872, 873, 874, 875, 876,
	877, 878, 879, 880, 881, 882, 883, 884, 885, 886,
	887, 888, 889, 890, 891, 892, 893, 894, 895, 896,
	897, 898, 899, 900, 901, 902, 903, 904, 905, 906,
	907, 908, 909, 910, 911, 912, 913, 914, 915, 916,
	917, 918, 919, 920, 921, 922, 923, 924, 925, 926,
	927, 928, 929, 930, 931, 932, 934, 935, 936, 937,
	938, 939, 940, 941, 942, 943, 944, 945, 946, 947,
	948, 949, 950, 951, 952, 953, 955, 956, 957, 958,
	959, 960, 961, 962, 963, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1020, 1021, 1022, 1023, 1024, 132, 133, 0, 135, 145,
	0, 143, 0, 0, 141, 237, 234, 232, 233, 0,
	292, 0, 0, 0, 206, -2, 271, 272, -2, 0,
	296, 296, 296, 0, 0, 272, 0, 280, 906, 283,
	701, 853, 868, 933, 954, 1019, 281, 687, 0, 299,
	297, 0, 276, 363, 0, 696, 333, 0, 2, 0,
	827, 0, 0, 827, 0, 0, 0, 369, 827, 43,
	59, 54, 827, 56, 827, 0, 71, 73, 726, 727,
	728, 729, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 0, 0, 0, 93, 94, 95, 0, 0, 0,
	0, 0, 104, 127, 128, 62, 0, 0, 147, 0,
	0, 138, 0, 139, 0, 231, 236, 43, 367, 0,
	827, 722, 239, 827, -2, 0, 267, 309, 310, 0,
	0, 0, 0, 294, 295, 0, 0, 0, 263, 264,
	0, 282, 0, 0, 336, 686, 688, 692, 693, 448,
	0, 0, 0, 0, 0, 0, 0, 530, 531, 532,
	0, 534, 535, 536, 994, 0, 540, 541, 1015, 696,
	704, 705, 706, 707, 0, 0, 0, 712, 713, 714,
	671, 575, 550, -2, -2, 702, 390, 391, 392, 393,
	-2, 1027, 554, 555, 556, 557, 558, 559, 0, 995,
	1011, 1012, 1018, 1021, 1022, 1008, 990, 997, 1004, 798,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 725, 414,
	415, 420, 421, 423, 336, 0, 334, 364, 365, 0,
	697, 677, 0, 0, 0, 0, 683, 681, 682, 20,
	228, 22, 0, 228, 228, 0, 0, 0, 0, 0,
	373, 0, 242, 0, 370, 0, 0, 53, 0, 41,
	42, 0, 0, 291, 0, 0, 76, 0, 783, 694,
	82, 0, 0, 97, 99, 106, 108, 109, 110, 116,
	117, 118, 119, 200, 0, 202, 130, 131, 715, 0,
	98, 100, 102, 103, 120, 121, 0, 124, 125, 126,
	431, 0, 63, 730, 731, 732, 733, 734, 1043, 1044,
	1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054,
	1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064,
	1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074,
	1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084,
	1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094,
	1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104,
	1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114,
	1115, 1116, 1117, 1118, 1119, 1120, 134, 136, 0, 144,
	137, 142, 140, 203, 0, 151, 0, 0, 827, 721,
	0, 270, 307, 308, 311, 315, 316, 319, 322, 323,
	313, 448, 277, 278, 279, 303, 304, 217, 284, 0,
	0, 698, 373, 0, 0, 0, 0, 0, 610, 611,
	612, 613, 614, 617, 618, 615, 616, 619, 620, 621,
	622, 0, 0, 623, 624, 625, 0, 0, 627, 0,
	0, 0, 680, 0, 0, 0, 691, 626, 452, 453,
	454, 475, 476, 0, 502, -2, 629, 0, 537, 538,
	539, 0, 0, -2, 0, 709, 445, 0, 0, 670,
	577, 0, 0, 0, 0, 0, 650, 656, 0, 0,
	0, 0, 0, 0, 404, 417, 427, 425, 424, 406,
	0, 405, 403, 0, 407, 0, 373, 0, 0, 678,
	672, 673, 674, 0, 0, 685, 0, 0, 0, 0,
	227, 24, 827, 0, 34, 0, 0, 173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 51, 0, 249, 244, 0, 0, 0, 336, 254,
	256, 257, 0, 0, 371, 43, 60, 55, 57, 66,
	72, 0, 0, 77, 78, 0, 238, 0, 0, 114,
	115, 0, 201, 717, 716, 445, 0, 64, 146, 90,
	368, 0, 150, 152, 154, 155, 156, 722, 0, 0,
	0, 0, 0, 0, 317, 0, 0, 314, 320, 321,
	0, 306, 215, 216, 291, 0, 700, 325, 335, 337,
	354, 354, 341, 0, 689, 449, 379, 380, 381, 382,
	383, 445, 386, 387, 388, 389, 397, 398, 399, 400,
	401, 402, 411, 0, 396, 396, 396, 408, 409, 412,
	413, 418, 419, 429, 430, 428, 428, 428, 426, 450,
	0, 455, 456, 457, 458, 459, 460, 461, 462, 463,
	-2, -2, -2, 467, 468, 469, -2, -2, -2, 473,
	474, -2, 628, 0, 680, 0, 0, 481, 0, 484,
	486, 488, 0, 0, 0, 0, 679, 498, 662, 0,
	0, 607, 608, 609, 690, 483, 0, 0, 533, 0,
	0, 0, 635, 629, 636, 0, -2, 542, 302, 0,
	0, 0, 0, 710, 432, 433, 434, 435, 436, 437,
	446, 0, 669, 665, 0, 585, 0, 0, 0, 0,
	0, 0, 639, 640, 641, 642, 643, 644, 645, 0,
	0, 0, 0, 503, 0, 0, 0, 0, 1015, 0,
	629, 655, 0, 0, 0, 0, 0, 629, 0, 661,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	366, 675, 0, 684, 23, 219, 0, 0, 0, 26,
	827, 159, 0, 0, 0, 0, 0, 230, 35, 827,
	43, 827, 43, 36, 21, 228, 218, 221, 0, 372,
	241, 0, 0, 246, 243, 373, 0, 0, 0, 52,
	74, 695, 75, 111, 112, 113, 107, 122, 0, 0,
	148, 0, 0, 722, 0, 0, 0, 240, 0, 0,
	305, 0, 286, 287, 288, 289, 699, 332, 0, 0,
	0, 0, 0, 0, 360, 360, 360, 358, 339, 353,
	0, 352, 340, -2, 341, 0, 374, 376, 384, 0,
	0, -2, 0, 0, 0, 499, -2, 482, 485, 487,
	489, 0, 0, 0, 0, 0, 0, 0, 500, 0,
	0, 0, 630, 0, 633, 634, 0, -2, 0, 0,
	301, 302, 302, 302, 548, 0, 0, 0, 0, 0,
	0, 0, 666, 0, 0, 549, 0, 0, 0, 0,
	0, 561, 0, 562, 0, 0, 563, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 505, 506,
	507, 0, 0, 564, 653, 654, 0, 0, 0, 0,
	0, 0, 569, 0, 660, 0, 571, 572, 573, 0,
	394, 0, 410, 422, 332, 298, 0, 0, 0, 0,
	0, 157, 172, 0, 0, 0, 0, 28, 0, 0,
	0, 0, 32, 0, 38, 0, 0, 0, 0, 252,
	0, 253, 255, 258, 0, 0, 91, 153, 0, 0,
	151, 0, 0, 312, 318, 285, 579, 0, 0, 338,
	0, 0, 0, 0, 0, 355, 359, 356, 357, 350,
	0, 343, 0, 0, 0, 451, -2, 0, 0, 0,
	0, -2, 0, 631, 0, 0, 663, 0, 0, 602,
	0, -2, 630, 637, 543, 0, 0, 0, 0, 438,
	439, 440, 441, 442, 443, 444, 0, 711, 664, 668,
	0, 583, 584, 588, 0, 0, 553, 0, 638, 647,
	648, 504, 508, 509, 510, 511, 512, 513, 514, 515,
	516, -2, -2, -2, 520, 521, 522, -2, -2, -2,
	0, 0, 0, 649, 0, 0, 605, 651, 652, 657,
	658, 0, 566, 567, 568, 659, 0, 416, 0, 579,
	676, 223, 225, 25, 0, 158, 0, 161, 0, 0,
	164, 165, 0, 0, 0, 0, 174, 181, 0, 0,
	0, 40, 0, 0, 229, 0, 43, 43, 220, 0,
	0, 222, 0, 0, 0, 245, 0, 123, 0, 0,
	0, 0, 208, 214, 214, 0, 551, 552, 0, 0,
	273, 0, 331, 324, 326, 328, 329, 0, 344, 0,
	346, 0, 0, 0, 348, 0, 0, 342, 377, 0,
	0, 385, 0, 0, -2, 0, 492, 0, -2, -2,
	501, 601, 630, 708, 302, 544, 546, 547, 447, 667,
	590, 587, 0, 574, 560, 646, 0, 0, 0, 0,
	630, 604, 565, 570, 395, 274, 27, 0, 162, 163,
	166, 0, 168, 183, 175, 0, 178, 179, 176, 0,
	29, 30, 39, 45, 31, 37, 0, 0, 0, 0,
	0, 259, 260, 0, 181, 0, 149, 181, 0, 217,
	703, 0, 217, 0, 0, 0, 578, 580, 0, 0,
	330, 345, 0, 362, 347, 0, 351, 378, 375, -2,
	-2, 493, 632, 603, 0, 302, 0, 576, -2, 0,
	0, 0, 606, 160, 0, 187, 0, 0, 0, 47,
	0, 224, 226, 0, 248, 373, 251, 170, 181, 204,
	209, 210, 213, 211, 214, 302, 0, 0, 0, 327,
	0, 349, 545, 593, 0, -2, 0, 528, 167, 192,
	0, 0, 0, 183, 33, 0, 44, 0, 250, 171,
	217, 0, 0, 581, 582, 361, 0, 0, 0, 589,
	529, 169, 188, 189, 0, 184, 185, 186, 182, 180,
	187, 46, 373, 212, 543, 181, 586, 591, 594, -2,
	961, 779, 0, 592, 190, 0, 191, 0, 0, 0,
	192, 247, 205, 0, 596, 597, 598, 599, 600, 193,
	0, 196, 197, 0, 194, 177, 0, 195, 198, 199,
	595,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 418, 3, 424, 419, 3,
	429, 430, 422, 420, 433, 421, 431, 423, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 435, 432,
	412, 414, 413, 3, 434, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 427, 3, 428, 417, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 416, 3, 426,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 415,
	57755, 425, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lookahead func() int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.lookahead()
}

func sqlNewParser() sqlParser {
	p := &sqlParserImpl{
		lookahead: func() int { return -1 },
	}
	return p
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqllval sqlSymType
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := make([]sqlSymType, sqlMaxDepth)

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlchar := -1
	sqltoken := -1 // sqlchar translated into internal numbering
	sqlrcvr.lookahead = func() int { return sqlchar }
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlchar = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlchar < 0 {
		sqlchar, sqltoken = sqllex1(sqllex, &sqllval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlchar = -1
		sqltoken = -1
		sqlVAL = sqllval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlchar < 0 {
			sqlchar, sqltoken = sqllex1(sqllex, &sqllval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlchar = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:441
		{
			sqllex.(*scanner).stmts = sqlDollar[1].stmts
		}
	case 2:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:447
		{
			if sqlDollar[3].stmt != nil {
				sqlVAL.stmts = append(sqlDollar[1].stmts, sqlDollar[3].stmt)
			}
		}
	case 3:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:453
		{
			if sqlDollar[1].stmt != nil {
				sqlVAL.stmts = []Statement{sqlDollar[1].stmt}
			} else {
				sqlVAL.stmts = nil
			}
		}
	case 13:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:472
		{
			sqlVAL.stmt = sqlDollar[1].selectStmt
		}
	case 19:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:481
		{
			sqlVAL.stmt = nil
		}
	case 20:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:487
		{
			sqlVAL.stmt = &AlterTable{Table: sqlDollar[3].qname, IfExists: false, Cmds: sqlDollar[4].alterTableCmds}
		}
	case 21:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:491
		{
			sqlVAL.stmt = &AlterTable{Table: sqlDollar[5].qname, IfExists: true, Cmds: sqlDollar[6].alterTableCmds}
		}
	case 22:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:497
		{
			sqlVAL.alterTableCmds = AlterTableCmds{sqlDollar[1].alterTableCmd}
		}
	case 23:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:501
		{
			sqlVAL.alterTableCmds = append(sqlDollar[1].alterTableCmds, sqlDollar[3].alterTableCmd)
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:508
		{
			sqlVAL.alterTableCmd = &AlterTableAddColumn{columnKeyword: false, IfNotExists: false, ColumnDef: sqlDollar[2].colDef}
		}
	case 25:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:513
		{
			sqlVAL.alterTableCmd = &AlterTableAddColumn{columnKeyword: false, IfNotExists: true, ColumnDef: sqlDollar[5].colDef}
		}
	case 26:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:518
		{
			sqlVAL.alterTableCmd = &AlterTableAddColumn{columnKeyword: true, IfNotExists: false, ColumnDef: sqlDollar[3].colDef}
		}
	case 27:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:523
		{
			sqlVAL.alterTableCmd = &AlterTableAddColumn{columnKeyword: true, IfNotExists: true, ColumnDef: sqlDollar[6].colDef}
		}
	case 28:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:527
		{
		}
	case 29:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:529
		{
		}
	case 30:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:531
		{
		}
	case 31:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:533
		{
		}
	case 32:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:535
		{
		}
	case 33:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:538
		{
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:541
		{
			sqlVAL.alterTableCmd = &AlterTableAddConstraint{ConstraintDef: sqlDollar[2].constraintDef}
		}
	case 35:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:545
		{
		}
	case 36:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:547
		{
		}
	case 37:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:549
		{
		}
	case 38:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:551
		{
		}
	case 39:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:554
		{
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:555
		{
		}
	case 41:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:558
		{
		}
	case 42:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:559
		{
		}
	case 43:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:560
		{
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:563
		{
		}
	case 45:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:564
		{
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:567
		{
		}
	case 47:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:568
		{
		}
	case 51:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:579
		{
			sqlVAL.stmt = &Delete{Table: sqlDollar[4].tblExpr, Where: newWhere(astWhere, sqlDollar[5].expr)}
		}
	case 52:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:586
		{
			sqlVAL.stmt = nil
		}
	case 53:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:590
		{
			sqlVAL.stmt = nil
		}
	case 54:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:594
		{
			sqlVAL.stmt = &DropDatabase{Name: Name(sqlDollar[3].str), IfExists: false}
		}
	case 55:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:598
		{
			sqlVAL.stmt = &DropDatabase{Name: Name(sqlDollar[5].str), IfExists: true}
		}
	case 56:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:602
		{
			sqlVAL.stmt = &DropTable{Names: sqlDollar[3].qnames, IfExists: false}
		}
	case 57:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:606
		{
			sqlVAL.stmt = &DropTable{Names: sqlDollar[5].qnames, IfExists: true}
		}
	case 58:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:611
		{
		}
	case 59:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:615
		{
			sqlVAL.qnames = QualifiedNames{sqlDollar[1].qname}
		}
	case 60:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:619
		{
			sqlVAL.qnames = append(sqlDollar[1].qnames, sqlDollar[3].qname)
		}
	case 61:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:625
		{
			sqlVAL.qname = &QualifiedName{Base: Name(sqlDollar[1].str)}
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:629
		{
			sqlVAL.qname = &QualifiedName{Base: Name(sqlDollar[1].str), Indirect: sqlDollar[2].indirect}
		}
	case 63:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:635
		{
			sqlVAL.indirect = Indirection{NameIndirection(sqlDollar[2].str)}
		}
	case 64:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:639
		{
			sqlVAL.indirect = append(sqlDollar[1].indirect, NameIndirection(sqlDollar[3].str))
		}
	case 65:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:646
		{
			sqlVAL.stmt = &Explain{Statement: sqlDollar[2].stmt}
		}
	case 66:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:650
		{
			sqlVAL.stmt = &Explain{Options: sqlDollar[3].strs, Statement: sqlDollar[5].stmt}
		}
	case 67:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:656
		{
			sqlVAL.stmt = sqlDollar[1].selectStmt
		}
	case 71:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:665
		{
			sqlVAL.strs = []string{sqlDollar[1].str}
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:669
		{
			sqlVAL.strs = append(sqlDollar[1].strs, sqlDollar[3].str)
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:679
		{
			sqlVAL.stmt = &Grant{Privileges: sqlDollar[2].privilegeList, Grantees: NameList(sqlDollar[6].strs), Targets: sqlDollar[4].targetList}
		}
	case 75:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:686
		{
			sqlVAL.stmt = &Revoke{Privileges: sqlDollar[2].privilegeList, Grantees: NameList(sqlDollar[6].strs), Targets: sqlDollar[4].targetList}
		}
	case 76:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:693
		{
			sqlVAL.targetList = TargetList{Tables: QualifiedNames(sqlDollar[1].qnames)}
		}
	case 77:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:697
		{
			// TODO(marc): this is postgres' grammar, but do we really need
			// both "x" and "TABLE X"?
			sqlVAL.targetList = TargetList{Tables: QualifiedNames(sqlDollar[2].qnames)}
		}
	case 78:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:703
		{
			sqlVAL.targetList = TargetList{Databases: NameList(sqlDollar[2].strs)}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:710
		{
			sqlVAL.privilegeList = privilege.List{privilege.ALL}
		}
	case 80:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:713
		{
		}
	case 81:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:717
		{
			sqlVAL.privilegeList = privilege.List{sqlDollar[1].privilegeType}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:721
		{
			sqlVAL.privilegeList = append(sqlDollar[1].privilegeList, sqlDollar[3].privilegeType)
		}
	case 83:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:728
		{
			sqlVAL.privilegeType = privilege.CREATE
		}
	case 84:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:732
		{
			sqlVAL.privilegeType = privilege.DROP
		}
	case 85:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:736
		{
			sqlVAL.privilegeType = privilege.GRANT
		}
	case 86:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:740
		{
			sqlVAL.privilegeType = privilege.SELECT
		}
	case 87:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:744
		{
			sqlVAL.privilegeType = privilege.INSERT
		}
	case 88:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:748
		{
			sqlVAL.privilegeType = privilege.DELETE
		}
	case 89:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:752
		{
			sqlVAL.privilegeType = privilege.UPDATE
		}
	case 90:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:760
		{
			sqlVAL.strs = []string{sqlDollar[1].str}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:764
		{
			sqlVAL.strs = append(sqlDollar[1].strs, sqlDollar[3].str)
		}
	case 92:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:772
		{
			sqlVAL.stmt = sqlDollar[2].stmt
		}
	case 93:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:776
		{
			sqlVAL.stmt = sqlDollar[3].stmt
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:780
		{
			sqlVAL.stmt = sqlDollar[3].stmt
		}
	case 95:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:786
		{
			sqlVAL.stmt = &SetTransaction{Isolation: sqlDollar[2].isoLevel}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:793
		{
			sqlVAL.stmt = &Set{Name: sqlDollar[1].qname, Values: sqlDollar[3].exprs}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:797
		{
			sqlVAL.stmt = &Set{Name: sqlDollar[1].qname, Values: sqlDollar[3].exprs}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:801
		{
			sqlVAL.stmt = &Set{Name: sqlDollar[1].qname}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:805
		{
			sqlVAL.stmt = &Set{Name: sqlDollar[1].qname}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:812
		{
		}
	case 103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:814
		{
		}
	case 104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:815
		{
		}
	case 106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:822
		{
			sqlVAL.exprs = []Expr{sqlDollar[1].expr}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:826
		{
			sqlVAL.exprs = append(sqlDollar[1].exprs, sqlDollar[3].expr)
		}
	case 110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:834
		{
			sqlVAL.expr = ValArg(sqlDollar[1].str)
		}
	case 111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:840
		{
			// Mapped to the closest supported isolation level.
			sqlVAL.isoLevel = SnapshotIsolation
		}
	case 112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:845
		{
			// Mapped to the closest supported isolation level.
			sqlVAL.isoLevel = SnapshotIsolation
		}
	case 113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:850
		{
			// Mapped to the closest supported isolation level.
			sqlVAL.isoLevel = SnapshotIsolation
		}
	case 114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:855
		{
			sqlVAL.isoLevel = SnapshotIsolation
		}
	case 115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:859
		{
			sqlVAL.isoLevel = SerializableIsolation
		}
	case 116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:865
		{
			sqlVAL.expr = DBool(true)
		}
	case 117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:869
		{
			sqlVAL.expr = DBool(false)
		}
	case 118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:873
		{
			sqlVAL.expr = DString(sqlDollar[1].str)
		}
	case 120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:889
		{
		}
	case 121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:890
		{
		}
	case 122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:891
		{
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:892
		{
		}
	case 124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:893
		{
		}
	case 125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:894
		{
		}
	case 126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:895
		{
		}
	case 127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:898
		{
		}
	case 128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:899
		{
		}
	case 129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:900
		{
		}
	case 130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:904
		{
			sqlVAL.expr = DString(sqlDollar[1].str)
		}
	case 131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:908
		{
			sqlVAL.expr = DString(sqlDollar[1].str)
		}
	case 132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:914
		{
			sqlVAL.stmt = &Show{Name: sqlDollar[2].str}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:918
		{
			sqlVAL.stmt = &Show{Name: sqlDollar[2].str}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:922
		{
			sqlVAL.stmt = &ShowColumns{Table: sqlDollar[4].qname}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:926
		{
			sqlVAL.stmt = &ShowDatabases{}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:930
		{
			sqlVAL.stmt = &ShowGrants{Targets: sqlDollar[3].targetListPtr, Grantees: sqlDollar[4].strs}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:934
		{
			sqlVAL.stmt = &ShowIndex{Table: sqlDollar[4].qname}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:938
		{
			sqlVAL.stmt = &ShowTables{Name: sqlDollar[3].qname}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:942
		{
			sqlVAL.stmt = nil
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:946
		{
			sqlVAL.stmt = &Show{Name: "TRANSACTION ISOLATION LEVEL"}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:950
		{
			sqlVAL.stmt = nil
		}
	case 142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:956
		{
			sqlVAL.qname = sqlDollar[2].qname
		}
	case 143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:960
		{
			sqlVAL.qname = nil
		}
	case 144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:966
		{
			tmp := sqlDollar[2].targetList
			sqlVAL.targetListPtr = &tmp
		}
	case 145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:971
		{
			sqlVAL.targetListPtr = nil
		}
	case 146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:977
		{
			sqlVAL.strs = sqlDollar[2].strs
		}
	case 147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:981
		{
			sqlVAL.strs = nil
		}
	case 148:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:988
		{
			sqlVAL.stmt = &CreateTable{Table: sqlDollar[3].qname, IfNotExists: false, Defs: sqlDollar[5].tblDefs}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
		//line sql.y:992
		{
			sqlVAL.stmt = &CreateTable{Table: sqlDollar[6].qname, IfNotExists: true, Defs: sqlDollar[8].tblDefs}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:999
		{
			sqlVAL.tblDefs = nil
		}
	case 152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1005
		{
			sqlVAL.tblDefs = TableDefs{sqlDollar[1].tblDef}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1009
		{
			sqlVAL.tblDefs = append(sqlDollar[1].tblDefs, sqlDollar[3].tblDef)
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1015
		{
			sqlVAL.tblDef = sqlDollar[1].colDef
		}
	case 156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1020
		{
			sqlVAL.tblDef = sqlDollar[1].constraintDef
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1026
		{
			sqlVAL.colDef = newColumnTableDef(Name(sqlDollar[1].str), sqlDollar[2].colType, sqlDollar[3].colConstraints)
		}
	case 158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1032
		{
			sqlVAL.colConstraints = append(sqlDollar[1].colConstraints, sqlDollar[2].colConstraint)
		}
	case 159:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1036
		{
			sqlVAL.colConstraints = nil
		}
	case 160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1042
		{
			// TODO(pmattis): Handle constraint name.
			sqlVAL.colConstraint = sqlDollar[3].colConstraint
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1047
		{
		}
	case 163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1063
		{
			sqlVAL.colConstraint = NotNullConstraint{}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1067
		{
			sqlVAL.colConstraint = NullConstraint{}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1071
		{
			sqlVAL.colConstraint = UniqueConstraint{}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1075
		{
			sqlVAL.colConstraint = PrimaryKeyConstraint{}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1078
		{
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1079
		{
		}
	case 169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1080
		{
		}
	case 170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1084
		{
			sqlVAL.tblDef = &IndexTableDef{
				Name:    Name(sqlDollar[2].str),
				Columns: NameList(sqlDollar[4].strs),
				Storing: sqlDollar[6].strs,
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:1092
		{
			sqlVAL.tblDef = &UniqueConstraintTableDef{
				IndexTableDef: IndexTableDef{
					Name:    Name(sqlDollar[3].str),
					Columns: NameList(sqlDollar[5].strs),
					Storing: sqlDollar[7].strs,
				},
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1107
		{
			sqlVAL.constraintDef = sqlDollar[3].constraintDef
			sqlVAL.constraintDef.setName(Name(sqlDollar[2].str))
		}
	case 173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1112
		{
			sqlVAL.constraintDef = sqlDollar[1].constraintDef
		}
	case 174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1117
		{
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1119
		{
			sqlVAL.constraintDef = &UniqueConstraintTableDef{
				IndexTableDef: IndexTableDef{
					Columns: NameList(sqlDollar[3].strs),
					Storing: sqlDollar[5].strs,
				},
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1128
		{
			sqlVAL.constraintDef = &UniqueConstraintTableDef{
				IndexTableDef: IndexTableDef{
					Columns: NameList(sqlDollar[4].strs),
				},
				PrimaryKey: true,
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
		//line sql.y:1137
		{
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1154
		{
			sqlVAL.strs = sqlDollar[3].strs
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1158
		{
			sqlVAL.strs = nil
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1164
		{
			sqlVAL.strs = sqlDollar[2].strs
		}
	case 183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1168
		{
			sqlVAL.strs = nil
		}
	case 184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1173
		{
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1174
		{
		}
	case 186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1175
		{
		}
	case 187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1176
		{
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1183
		{
		}
	case 189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1184
		{
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1185
		{
		}
	case 191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1186
		{
		}
	case 192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1187
		{
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1190
		{
		}
	case 194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1193
		{
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1196
		{
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1197
		{
		}
	case 197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1198
		{
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1199
		{
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1200
		{
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1204
		{
			sqlVAL.expr = NumVal(sqlDollar[1].str)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1208
		{
			sqlVAL.expr = NumVal("-" + sqlDollar[2].str)
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1212
		{
			sqlVAL.expr = IntVal(sqlDollar[1].ival)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1219
		{
			sqlVAL.stmt = &Truncate{Tables: sqlDollar[3].qnames}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
		//line sql.y:1226
		{
			sqlVAL.stmt = &CreateIndex{
				Name:    Name(sqlDollar[4].str),
				Table:   sqlDollar[6].qname,
				Unique:  sqlDollar[2].boolVal,
				Columns: sqlDollar[8].strs,
				Storing: sqlDollar[10].strs,
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
		//line sql.y:1236
		{
			sqlVAL.stmt = &CreateIndex{
				Name:        Name(sqlDollar[7].str),
				Table:       sqlDollar[9].qname,
				Unique:      sqlDollar[2].boolVal,
				IfNotExists: true,
				Columns:     sqlDollar[11].strs,
				Storing:     sqlDollar[13].strs,
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1249
		{
			sqlVAL.boolVal = true
		}
	case 207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1253
		{
			sqlVAL.boolVal = false
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1259
		{
			sqlVAL.strs = []string{sqlDollar[1].str}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1263
		{
			sqlVAL.strs = append(sqlDollar[1].strs, sqlDollar[3].str)
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1272
		{
			// TODO(pmattis): Support opt_asc_desc.
			sqlVAL.str = sqlDollar[1].str
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1277
		{
		}
	case 212:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1279
		{
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1282
		{
		}
	case 214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1283
		{
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1287
		{
			sqlVAL.dir = Ascending
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1291
		{
			sqlVAL.dir = Descending
		}
	case 217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1295
		{
			sqlVAL.dir = DefaultDirection
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1302
		{
			sqlVAL.stmt = &RenameDatabase{Name: Name(sqlDollar[3].str), NewName: Name(sqlDollar[6].str)}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1306
		{
			sqlVAL.stmt = &RenameTable{Name: sqlDollar[3].qname, NewName: sqlDollar[6].qname, IfExists: false}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:1310
		{
			sqlVAL.stmt = &RenameTable{Name: sqlDollar[5].qname, NewName: sqlDollar[8].qname, IfExists: true}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1314
		{
			sqlVAL.stmt = &RenameIndex{Name: sqlDollar[3].qname, NewName: Name(sqlDollar[6].str), IfExists: false}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:1318
		{
			sqlVAL.stmt = &RenameIndex{Name: sqlDollar[5].qname, NewName: Name(sqlDollar[8].str), IfExists: true}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:1322
		{
			sqlVAL.stmt = &RenameColumn{Table: sqlDollar[3].qname, Name: Name(sqlDollar[6].str), NewName: Name(sqlDollar[8].str), IfExists: false}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
		//line sql.y:1326
		{
			sqlVAL.stmt = &RenameColumn{Table: sqlDollar[5].qname, Name: Name(sqlDollar[8].str), NewName: Name(sqlDollar[10].str), IfExists: true}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:1330
		{
			sqlVAL.stmt = nil
		}
	case 226:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
		//line sql.y:1334
		{
			sqlVAL.stmt = nil
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1339
		{
		}
	case 228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1340
		{
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1343
		{
		}
	case 230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1344
		{
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1349
		{
			sqlVAL.stmt = &BeginTransaction{Isolation: sqlDollar[3].isoLevel}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1353
		{
			sqlVAL.stmt = &CommitTransaction{}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1357
		{
			sqlVAL.stmt = &RollbackTransaction{}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1362
		{
		}
	case 235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1363
		{
		}
	case 237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1368
		{
			sqlVAL.isoLevel = UnspecifiedIsolation
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1374
		{
			sqlVAL.isoLevel = sqlDollar[3].isoLevel
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1380
		{
			sqlVAL.stmt = &CreateDatabase{Name: Name(sqlDollar[3].str)}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1384
		{
			sqlVAL.stmt = &CreateDatabase{IfNotExists: true, Name: Name(sqlDollar[6].str)}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1390
		{
			sqlVAL.stmt = sqlDollar[5].stmt
			sqlVAL.stmt.(*Insert).Table = sqlDollar[4].qname
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1406
		{
			sqlVAL.stmt = &Insert{Rows: sqlDollar[1].selectStmt}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1410
		{
			sqlVAL.stmt = &Insert{Columns: sqlDollar[2].qnames, Rows: sqlDollar[4].selectStmt}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1414
		{
			sqlVAL.stmt = &Insert{}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:1419
		{
		}
	case 248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1420
		{
		}
	case 249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1421
		{
		}
	case 250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1424
		{
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1425
		{
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1426
		{
		}
	case 253:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:1431
		{
			sqlVAL.stmt = &Update{Table: sqlDollar[3].tblExpr, Exprs: sqlDollar[5].updateExprs, Where: newWhere(astWhere, sqlDollar[7].expr)}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1437
		{
			sqlVAL.updateExprs = UpdateExprs{sqlDollar[1].updateExpr}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1441
		{
			sqlVAL.updateExprs = append(sqlDollar[1].updateExprs, sqlDollar[3].updateExpr)
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1447
		{
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1451
		{
			sqlVAL.updateExpr = &UpdateExpr{Names: QualifiedNames{sqlDollar[1].qname}, Expr: sqlDollar[3].expr}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1463
		{
			sqlVAL.updateExpr = &UpdateExpr{Tuple: true, Names: sqlDollar[2].qnames, Expr: Tuple(sqlDollar[5].exprs)}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1467
		{
			sqlVAL.updateExpr = &UpdateExpr{Tuple: true, Names: sqlDollar[2].qnames, Expr: &Subquery{Select: sqlDollar[5].selectStmt}}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1514
		{
			sqlVAL.selectStmt = &ParenSelect{Select: sqlDollar[2].selectStmt}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1518
		{
			sqlVAL.selectStmt = &ParenSelect{Select: sqlDollar[2].selectStmt}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1534
		{
			sqlVAL.selectStmt = sqlDollar[1].selectStmt
			if s, ok := sqlVAL.selectStmt.(*Select); ok {
				s.OrderBy = sqlDollar[2].orderBy
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1541
		{
			sqlVAL.selectStmt = sqlDollar[1].selectStmt
			if s, ok := sqlVAL.selectStmt.(*Select); ok {
				s.OrderBy = sqlDollar[2].orderBy
				s.Limit = sqlDollar[3].limit
			}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1549
		{
			sqlVAL.selectStmt = sqlDollar[2].selectStmt
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1553
		{
			sqlVAL.selectStmt = sqlDollar[2].selectStmt
			if s, ok := sqlVAL.selectStmt.(*Select); ok {
				s.OrderBy = sqlDollar[3].orderBy
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1560
		{
			sqlVAL.selectStmt = sqlDollar[2].selectStmt
			if s, ok := sqlVAL.selectStmt.(*Select); ok {
				s.OrderBy = sqlDollar[3].orderBy
				s.Limit = sqlDollar[4].limit
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:1598
		{
			sqlVAL.selectStmt = &Select{
				Exprs:  sqlDollar[3].selExprs,
				From:   sqlDollar[4].tblExprs,
				Where:  newWhere(astWhere, sqlDollar[5].expr),
				Having: newWhere(astHaving, sqlDollar[7].expr),
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:1609
		{
			// TODO(pmattis): Support DISTINCT ON?
			sqlVAL.selectStmt = &Select{
				Distinct: astDistinct,
				Exprs:    sqlDollar[3].selExprs,
				From:     sqlDollar[4].tblExprs,
				Where:    newWhere(astWhere, sqlDollar[5].expr),
				Having:   newWhere(astHaving, sqlDollar[7].expr),
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1621
		{
			sqlVAL.selectStmt = &Select{
				Exprs:       SelectExprs{StarSelectExpr()},
				From:        TableExprs{&AliasedTableExpr{Expr: sqlDollar[2].qname}},
				tableSelect: true,
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1629
		{
			// TODO(pmattis): Support all/distinct
			sqlVAL.selectStmt = &Union{
				Type:  astUnion,
				Left:  sqlDollar[1].selectStmt,
				Right: sqlDollar[4].selectStmt,
			}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1638
		{
			// TODO(pmattis): Support all/distinct
			sqlVAL.selectStmt = &Union{
				Type:  astIntersect,
				Left:  sqlDollar[1].selectStmt,
				Right: sqlDollar[4].selectStmt,
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1647
		{
			// TODO(pmattis): Support all/distinct
			sqlVAL.selectStmt = &Union{
				Type:  astExcept,
				Left:  sqlDollar[1].selectStmt,
				Right: sqlDollar[4].selectStmt,
			}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1665
		{
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1666
		{
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1667
		{
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1670
		{
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1671
		{
		}
	case 285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1674
		{
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1678
		{
			sqlVAL.stmt = sqlDollar[1].selectStmt
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1686
		{
		}
	case 291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1687
		{
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1690
		{
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1691
		{
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1694
		{
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1695
		{
		}
	case 296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1696
		{
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1701
		{
		}
	case 298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1702
		{
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1705
		{
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1706
		{
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1710
		{
			sqlVAL.orderBy = sqlDollar[1].orderBy
		}
	case 302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1714
		{
			sqlVAL.orderBy = nil
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1720
		{
			sqlVAL.orderBy = OrderBy(sqlDollar[3].orders)
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1726
		{
			sqlVAL.orders = []*Order{sqlDollar[1].order}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1730
		{
			sqlVAL.orders = append(sqlDollar[1].orders, sqlDollar[3].order)
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1736
		{
			sqlVAL.order = &Order{Expr: sqlDollar[1].expr, Direction: sqlDollar[2].dir}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1744
		{
			if sqlDollar[1].limit == nil {
				sqlVAL.limit = sqlDollar[2].limit
			} else {
				sqlVAL.limit = sqlDollar[1].limit
				sqlVAL.limit.Offset = sqlDollar[2].limit.Offset
			}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1753
		{
			sqlVAL.limit = sqlDollar[1].limit
			if sqlDollar[2].limit != nil {
				sqlVAL.limit.Count = sqlDollar[2].limit.Count
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1764
		{
			if sqlDollar[2].expr == nil {
				sqlVAL.limit = nil
			} else {
				sqlVAL.limit = &Limit{Count: sqlDollar[2].expr}
			}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1772
		{
		}
	case 313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1776
		{
			sqlVAL.limit = &Limit{Offset: sqlDollar[2].expr}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1783
		{
			sqlVAL.limit = &Limit{Offset: sqlDollar[2].expr}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1790
		{
			sqlVAL.expr = nil
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1798
		{
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1799
		{
		}
	case 319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1800
		{
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1804
		{
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1805
		{
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1808
		{
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1809
		{
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1830
		{
		}
	case 325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1831
		{
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1834
		{
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1835
		{
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1838
		{
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1839
		{
		}
	case 330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1842
		{
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1846
		{
			sqlVAL.expr = sqlDollar[2].expr
		}
	case 332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1850
		{
			sqlVAL.expr = nil
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1856
		{
			sqlVAL.selectStmt = Values{Tuple(sqlDollar[2].exprs)}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1860
		{
			sqlVAL.selectStmt = append(sqlDollar[1].selectStmt.(Values), Tuple(sqlDollar[3].exprs))
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1870
		{
			sqlVAL.tblExprs = sqlDollar[2].tblExprs
		}
	case 336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1874
		{
			sqlVAL.tblExprs = nil
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1880
		{
			sqlVAL.tblExprs = TableExprs{sqlDollar[1].tblExpr}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1884
		{
			sqlVAL.tblExprs = append(sqlDollar[1].tblExprs, sqlDollar[3].tblExpr)
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1891
		{
			sqlVAL.tblExpr = &AliasedTableExpr{Expr: sqlDollar[1].qname, As: Name(sqlDollar[2].str)}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1895
		{
			sqlVAL.tblExpr = &AliasedTableExpr{Expr: &Subquery{Select: sqlDollar[1].selectStmt}, As: Name(sqlDollar[2].str)}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1899
		{
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1917
		{
			sqlVAL.tblExpr = &ParenTableExpr{Expr: sqlDollar[2].tblExpr}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1921
		{
			sqlVAL.tblExpr = &JoinTableExpr{Join: astCrossJoin, Left: sqlDollar[1].tblExpr, Right: sqlDollar[4].tblExpr}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1925
		{
			sqlVAL.tblExpr = &JoinTableExpr{Join: sqlDollar[2].str, Left: sqlDollar[1].tblExpr, Right: sqlDollar[4].tblExpr, Cond: sqlDollar[5].joinCond}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1929
		{
			sqlVAL.tblExpr = &JoinTableExpr{Join: astJoin, Left: sqlDollar[1].tblExpr, Right: sqlDollar[3].tblExpr, Cond: sqlDollar[4].joinCond}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1933
		{
			sqlVAL.tblExpr = &JoinTableExpr{Join: astNaturalJoin, Left: sqlDollar[1].tblExpr, Right: sqlDollar[5].tblExpr}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1937
		{
			sqlVAL.tblExpr = &JoinTableExpr{Join: astNaturalJoin, Left: sqlDollar[1].tblExpr, Right: sqlDollar[4].tblExpr}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1942
		{
		}
	case 350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1944
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1947
		{
		}
	case 352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1949
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1956
		{
			sqlVAL.str = ""
		}
	case 355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1962
		{
			sqlVAL.str = astFullJoin
		}
	case 356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1966
		{
			sqlVAL.str = astLeftJoin
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1970
		{
			sqlVAL.str = astRightJoin
		}
	case 358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1974
		{
			sqlVAL.str = astInnerJoin
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1980
		{
		}
	case 360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1981
		{
		}
	case 361:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1992
		{
			sqlVAL.joinCond = &UsingJoinCond{Cols: NameList(sqlDollar[3].strs)}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1996
		{
			sqlVAL.joinCond = &OnJoinCond{Expr: sqlDollar[2].expr}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2002
		{
			sqlVAL.qname = sqlDollar[1].qname
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2006
		{
			// TODO(pmattis): Handle the "*".
			sqlVAL.qname = sqlDollar[1].qname
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2011
		{
			// TODO(pmattis): Support ONLY.
			sqlVAL.qname = sqlDollar[2].qname
		}
	case 366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2016
		{
			// TODO(pmattis): Support ONLY.
			sqlVAL.qname = sqlDollar[3].qname
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2023
		{
			sqlVAL.qnames = QualifiedNames{sqlDollar[1].qname}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2027
		{
			sqlVAL.qnames = append(sqlDollar[1].qnames, sqlDollar[3].qname)
		}
	case 369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2040
		{
			sqlVAL.tblExpr = &AliasedTableExpr{Expr: sqlDollar[1].qname}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2044
		{
			sqlVAL.tblExpr = &AliasedTableExpr{Expr: sqlDollar[1].qname, As: Name(sqlDollar[2].str)}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2048
		{
			sqlVAL.tblExpr = &AliasedTableExpr{Expr: sqlDollar[1].qname, As: Name(sqlDollar[3].str)}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2054
		{
			sqlVAL.expr = sqlDollar[2].expr
		}
	case 373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2058
		{
			sqlVAL.expr = nil
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2070
		{
			sqlVAL.colType = sqlDollar[1].colType
		}
	case 375:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2074
		{
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2075
		{
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2078
		{
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2079
		{
		}
	case 379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2080
		{
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2087
		{
		}
	case 385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2088
		{
		}
	case 386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2090
		{
			sqlVAL.colType = &BytesType{Name: "BLOB"}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2094
		{
			sqlVAL.colType = &BytesType{Name: "BYTES"}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2098
		{
			sqlVAL.colType = &StringType{Name: "TEXT"}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2102
		{
			sqlVAL.colType = &StringType{Name: "STRING"}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2123
		{
			sqlVAL.colType = &DecimalType{Prec: int(sqlDollar[2].ival)}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2127
		{
			sqlVAL.colType = &DecimalType{Prec: int(sqlDollar[2].ival), Scale: int(sqlDollar[4].ival)}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2131
		{
			sqlVAL.colType = &DecimalType{}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2138
		{
			sqlVAL.colType = &IntType{Name: "INT"}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2142
		{
			sqlVAL.colType = &IntType{Name: "INT64"}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2146
		{
			sqlVAL.colType = &IntType{Name: "INTEGER"}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2150
		{
			sqlVAL.colType = &IntType{Name: "SMALLINT"}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2154
		{
			sqlVAL.colType = &IntType{Name: "BIGINT"}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2158
		{
			sqlVAL.colType = &FloatType{Name: "REAL"}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2162
		{
			sqlVAL.colType = &FloatType{Name: "FLOAT", Prec: int(sqlDollar[2].ival)}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2166
		{
			sqlVAL.colType = &FloatType{Name: "DOUBLE PRECISION"}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2170
		{
			sqlVAL.colType = sqlDollar[2].colType
			sqlVAL.colType.(*DecimalType).Name = "DECIMAL"
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2175
		{
			sqlVAL.colType = sqlDollar[2].colType
			sqlVAL.colType.(*DecimalType).Name = "DEC"
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2180
		{
			sqlVAL.colType = sqlDollar[2].colType
			sqlVAL.colType.(*DecimalType).Name = "NUMERIC"
		}
	case 408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2185
		{
			sqlVAL.colType = &BoolType{Name: "BOOLEAN"}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2189
		{
			sqlVAL.colType = &BoolType{Name: "BOOL"}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2195
		{
			sqlVAL.ival = sqlDollar[2].ival
		}
	case 411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2199
		{
			sqlVAL.ival = 0
		}
	case 416:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2217
		{
			sqlVAL.colType = &IntType{Name: "BIT", N: int(sqlDollar[4].ival)}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2223
		{
			sqlVAL.colType = &IntType{Name: "BIT"}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2239
		{
			sqlVAL.colType = sqlDollar[1].colType
			sqlVAL.colType.(*StringType).N = int(sqlDollar[3].ival)
		}
	case 423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2246
		{
			sqlVAL.colType = sqlDollar[1].colType
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2252
		{
			sqlVAL.colType = &StringType{Name: "CHAR"}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2256
		{
			sqlVAL.colType = &StringType{Name: "CHAR"}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2260
		{
			sqlVAL.colType = &StringType{Name: "VARCHAR"}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2265
		{
		}
	case 428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2266
		{
		}
	case 429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2271
		{
			sqlVAL.colType = &DateType{}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2275
		{
			sqlVAL.colType = &TimestampType{}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2280
		{
			sqlVAL.colType = &IntervalType{}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2285
		{
		}
	case 433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2286
		{
		}
	case 434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2287
		{
		}
	case 435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2288
		{
		}
	case 436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2289
		{
		}
	case 437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2290
		{
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2291
		{
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2292
		{
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2293
		{
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2294
		{
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2295
		{
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2296
		{
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2297
		{
		}
	case 445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2298
		{
		}
	case 446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2301
		{
		}
	case 447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2302
		{
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2326
		{
			sqlVAL.expr = &CastExpr{Expr: sqlDollar[1].expr, Type: sqlDollar[3].colType}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2329
		{
		}
	case 451:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2330
		{
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2339
		{
			sqlVAL.expr = &UnaryExpr{Operator: UnaryPlus, Expr: sqlDollar[2].expr}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2343
		{
			sqlVAL.expr = &UnaryExpr{Operator: UnaryMinus, Expr: sqlDollar[2].expr}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2347
		{
			sqlVAL.expr = &UnaryExpr{Operator: UnaryComplement, Expr: sqlDollar[2].expr}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2351
		{
			sqlVAL.expr = &BinaryExpr{Operator: Plus, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2355
		{
			sqlVAL.expr = &BinaryExpr{Operator: Minus, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2359
		{
			sqlVAL.expr = &BinaryExpr{Operator: Mult, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2363
		{
			sqlVAL.expr = &BinaryExpr{Operator: Div, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2367
		{
			sqlVAL.expr = &BinaryExpr{Operator: Mod, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2371
		{
			sqlVAL.expr = &BinaryExpr{Operator: Bitxor, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2375
		{
			sqlVAL.expr = &BinaryExpr{Operator: Bitxor, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2379
		{
			sqlVAL.expr = &BinaryExpr{Operator: Bitand, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2383
		{
			sqlVAL.expr = &BinaryExpr{Operator: Bitor, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2387
		{
			sqlVAL.expr = &ComparisonExpr{Operator: LT, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2391
		{
			sqlVAL.expr = &ComparisonExpr{Operator: GT, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2395
		{
			sqlVAL.expr = &ComparisonExpr{Operator: EQ, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2399
		{
			sqlVAL.expr = &BinaryExpr{Operator: Concat, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2403
		{
			sqlVAL.expr = &BinaryExpr{Operator: LShift, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2407
		{
			sqlVAL.expr = &BinaryExpr{Operator: RShift, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2411
		{
			sqlVAL.expr = &ComparisonExpr{Operator: LE, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2415
		{
			sqlVAL.expr = &ComparisonExpr{Operator: GE, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2419
		{
			sqlVAL.expr = &ComparisonExpr{Operator: NE, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2423
		{
			sqlVAL.expr = &AndExpr{Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2427
		{
			sqlVAL.expr = &OrExpr{Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2431
		{
			sqlVAL.expr = &NotExpr{Expr: sqlDollar[2].expr}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2435
		{
			sqlVAL.expr = &NotExpr{Expr: sqlDollar[2].expr}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2439
		{
			sqlVAL.expr = &ComparisonExpr{Operator: Like, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2443
		{
			sqlVAL.expr = &ComparisonExpr{Operator: NotLike, Left: sqlDollar[1].expr, Right: sqlDollar[4].expr}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2447
		{
			sqlVAL.expr = &ComparisonExpr{Operator: SimilarTo, Left: sqlDollar[1].expr, Right: sqlDollar[4].expr}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2451
		{
			sqlVAL.expr = &ComparisonExpr{Operator: NotSimilarTo, Left: sqlDollar[1].expr, Right: sqlDollar[5].expr}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2455
		{
			sqlVAL.expr = &IsExpr{Operator: IsNull, Expr: sqlDollar[1].expr}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2459
		{
			sqlVAL.expr = &IsExpr{Operator: IsNotNull, Expr: sqlDollar[1].expr}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2463
		{
			panic("TODO(pmattis): unimplemented)")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2467
		{
			sqlVAL.expr = &IsExpr{Operator: IsTrue, Expr: sqlDollar[1].expr}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2471
		{
			sqlVAL.expr = &IsExpr{Operator: IsNotTrue, Expr: sqlDollar[1].expr}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2475
		{
			sqlVAL.expr = &IsExpr{Operator: IsFalse, Expr: sqlDollar[1].expr}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2479
		{
			sqlVAL.expr = &IsExpr{Operator: IsNotFalse, Expr: sqlDollar[1].expr}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2483
		{
			sqlVAL.expr = &IsExpr{Operator: IsUnknown, Expr: sqlDollar[1].expr}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2487
		{
			sqlVAL.expr = &IsExpr{Operator: IsNotUnknown, Expr: sqlDollar[1].expr}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2491
		{
			sqlVAL.expr = &ComparisonExpr{Operator: IsDistinctFrom, Left: sqlDollar[1].expr, Right: sqlDollar[5].expr}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2495
		{
			sqlVAL.expr = &ComparisonExpr{Operator: IsNotDistinctFrom, Left: sqlDollar[1].expr, Right: sqlDollar[6].expr}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2499
		{
			sqlVAL.expr = &IsOfTypeExpr{Expr: sqlDollar[1].expr, Types: sqlDollar[5].colTypes}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:2503
		{
			sqlVAL.expr = &IsOfTypeExpr{Not: true, Expr: sqlDollar[1].expr, Types: sqlDollar[6].colTypes}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2507
		{
			sqlVAL.expr = &RangeCond{Left: sqlDollar[1].expr, From: sqlDollar[4].expr, To: sqlDollar[6].expr}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:2511
		{
			sqlVAL.expr = &RangeCond{Not: true, Left: sqlDollar[1].expr, From: sqlDollar[5].expr, To: sqlDollar[7].expr}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2515
		{
			sqlVAL.expr = &RangeCond{Left: sqlDollar[1].expr, From: sqlDollar[4].expr, To: sqlDollar[6].expr}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:2519
		{
			sqlVAL.expr = &RangeCond{Not: true, Left: sqlDollar[1].expr, From: sqlDollar[5].expr, To: sqlDollar[7].expr}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2523
		{
			sqlVAL.expr = &ComparisonExpr{Operator: In, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2527
		{
			sqlVAL.expr = &ComparisonExpr{Operator: NotIn, Left: sqlDollar[1].expr, Right: sqlDollar[4].expr}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2530
		{
		}
	case 501:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2531
		{
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2532
		{
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2544
		{
			sqlVAL.expr = &CastExpr{Expr: sqlDollar[1].expr, Type: sqlDollar[3].colType}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2548
		{
			sqlVAL.expr = &UnaryExpr{Operator: UnaryPlus, Expr: sqlDollar[2].expr}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2552
		{
			sqlVAL.expr = &UnaryExpr{Operator: UnaryMinus, Expr: sqlDollar[2].expr}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2556
		{
			sqlVAL.expr = &UnaryExpr{Operator: UnaryComplement, Expr: sqlDollar[2].expr}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2560
		{
			sqlVAL.expr = &BinaryExpr{Operator: Plus, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2564
		{
			sqlVAL.expr = &BinaryExpr{Operator: Minus, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2568
		{
			sqlVAL.expr = &BinaryExpr{Operator: Mult, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2572
		{
			sqlVAL.expr = &BinaryExpr{Operator: Div, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2576
		{
			sqlVAL.expr = &BinaryExpr{Operator: Mod, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2580
		{
			sqlVAL.expr = &BinaryExpr{Operator: Bitxor, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2584
		{
			sqlVAL.expr = &BinaryExpr{Operator: Bitxor, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2588
		{
			sqlVAL.expr = &BinaryExpr{Operator: Bitand, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2592
		{
			sqlVAL.expr = &BinaryExpr{Operator: Bitor, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2596
		{
			sqlVAL.expr = &ComparisonExpr{Operator: LT, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2600
		{
			sqlVAL.expr = &ComparisonExpr{Operator: GT, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2604
		{
			sqlVAL.expr = &ComparisonExpr{Operator: EQ, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2608
		{
			sqlVAL.expr = &BinaryExpr{Operator: Concat, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2612
		{
			sqlVAL.expr = &BinaryExpr{Operator: LShift, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2616
		{
			sqlVAL.expr = &BinaryExpr{Operator: RShift, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2620
		{
			sqlVAL.expr = &ComparisonExpr{Operator: LE, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2624
		{
			sqlVAL.expr = &ComparisonExpr{Operator: GE, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2628
		{
			sqlVAL.expr = &ComparisonExpr{Operator: NE, Left: sqlDollar[1].expr, Right: sqlDollar[3].expr}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2632
		{
			sqlVAL.expr = &ComparisonExpr{Operator: IsDistinctFrom, Left: sqlDollar[1].expr, Right: sqlDollar[5].expr}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2636
		{
			sqlVAL.expr = &ComparisonExpr{Operator: IsNotDistinctFrom, Left: sqlDollar[1].expr, Right: sqlDollar[6].expr}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2640
		{
			sqlVAL.expr = &IsOfTypeExpr{Expr: sqlDollar[1].expr, Types: sqlDollar[5].colTypes}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:2644
		{
			sqlVAL.expr = &IsOfTypeExpr{Not: true, Expr: sqlDollar[1].expr, Types: sqlDollar[6].colTypes}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2656
		{
			sqlVAL.expr = sqlDollar[1].qname
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2661
		{
			sqlVAL.expr = ValArg(sqlDollar[1].str)
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2665
		{
			sqlVAL.expr = &ParenExpr{Expr: sqlDollar[2].expr}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2671
		{
			sqlVAL.expr = &Subquery{Select: sqlDollar[1].selectStmt}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2675
		{
			sqlVAL.expr = &Subquery{Select: sqlDollar[1].selectStmt}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2679
		{
			sqlVAL.expr = &ExistsExpr{Subquery: &Subquery{Select: sqlDollar[2].selectStmt}}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2685
		{
			sqlVAL.expr = sqlDollar[2].expr
		}
	case 540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2689
		{
			sqlVAL.expr = sqlDollar[1].expr
		}
	case 541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2693
		{
			sqlVAL.expr = sqlDollar[1].expr
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2701
		{
			sqlVAL.expr = &FuncExpr{Name: sqlDollar[1].qname}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2705
		{
			// TODO(pmattis): Support opt_sort_clause or remove it?
			sqlVAL.expr = &FuncExpr{Name: sqlDollar[1].qname, Exprs: sqlDollar[3].exprs}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2710
		{
			panic("TODO(pmattis): unimplemented)")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:2714
		{
			panic("TODO(pmattis): unimplemented)")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2718
		{
			panic("TODO(pmattis): unimplemented)")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2722
		{
			// TODO(pmattis): Support opt_sort_clause or remove it?
			sqlVAL.expr = &FuncExpr{Name: sqlDollar[1].qname, Distinct: true, Exprs: sqlDollar[4].exprs}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2727
		{
			sqlVAL.expr = &FuncExpr{Name: sqlDollar[1].qname, Exprs: Exprs{StarExpr()}}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2740
		{
			// TODO(pmattis): Support within_group_clause, filter_clause and
			// over_clause?
			sqlVAL.expr = sqlDollar[1].expr
		}
	case 550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2746
		{
			sqlVAL.expr = sqlDollar[1].expr
		}
	case 551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2755
		{
		}
	case 552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2756
		{
		}
	case 553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2760
		{
		}
	case 554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2762
		{
			sqlVAL.expr = &FuncExpr{Name: &QualifiedName{Base: Name(sqlDollar[1].str)}}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2766
		{
			sqlVAL.expr = &FuncExpr{Name: &QualifiedName{Base: Name(sqlDollar[1].str)}}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2769
		{
		}
	case 557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2770
		{
		}
	case 558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2771
		{
		}
	case 559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2772
		{
		}
	case 560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2774
		{
			sqlVAL.expr = &CastExpr{Expr: sqlDollar[3].expr, Type: sqlDollar[5].colType}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2778
		{
			sqlVAL.expr = &FuncExpr{Name: &QualifiedName{Base: Name(sqlDollar[1].str)}, Exprs: sqlDollar[3].exprs}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2781
		{
		}
	case 563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2782
		{
		}
	case 564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2783
		{
		}
	case 565:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2784
		{
		}
	case 566:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2785
		{
		}
	case 567:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2786
		{
		}
	case 568:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2787
		{
		}
	case 569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2788
		{
		}
	case 570:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2789
		{
		}
	case 571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2790
		{
		}
	case 572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2791
		{
		}
	case 573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2792
		{
		}
	case 574:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2796
		{
		}
	case 575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2797
		{
		}
	case 576:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2800
		{
		}
	case 577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2801
		{
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2805
		{
		}
	case 579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2806
		{
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2809
		{
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2810
		{
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2813
		{
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2816
		{
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2817
		{
		}
	case 585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2818
		{
		}
	case 586:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2822
		{
		}
	case 587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2833
		{
		}
	case 588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2834
		{
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2837
		{
		}
	case 590:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2838
		{
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2846
		{
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2847
		{
		}
	case 593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2848
		{
		}
	case 594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2851
		{
		}
	case 595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2852
		{
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2858
		{
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2859
		{
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2860
		{
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2861
		{
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2862
		{
		}
	case 601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2873
		{
			sqlVAL.expr = Row(sqlDollar[3].exprs)
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2877
		{
			sqlVAL.expr = Row(nil)
		}
	case 603:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2881
		{
			sqlVAL.expr = Tuple(append(sqlDollar[2].exprs, sqlDollar[4].expr))
		}
	case 604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2887
		{
			sqlVAL.expr = Row(sqlDollar[3].exprs)
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2891
		{
			sqlVAL.expr = Row(nil)
		}
	case 606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2897
		{
			sqlVAL.expr = Tuple(append(sqlDollar[2].exprs, sqlDollar[4].expr))
		}
	case 607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2902
		{
		}
	case 608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2903
		{
		}
	case 609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2904
		{
		}
	case 610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2907
		{
		}
	case 611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2908
		{
		}
	case 612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2909
		{
		}
	case 613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2910
		{
		}
	case 614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2911
		{
		}
	case 615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2912
		{
		}
	case 616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2913
		{
		}
	case 617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2914
		{
		}
	case 618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2915
		{
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2916
		{
		}
	case 620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2917
		{
		}
	case 621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2918
		{
		}
	case 622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2919
		{
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2920
		{
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2921
		{
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2922
		{
		}
	case 626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2925
		{
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2926
		{
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2927
		{
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2938
		{
			sqlVAL.exprs = Exprs{sqlDollar[1].expr}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2942
		{
			sqlVAL.exprs = append(sqlDollar[1].exprs, sqlDollar[3].expr)
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2948
		{
			sqlVAL.colTypes = []ColumnType{sqlDollar[1].colType}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2952
		{
			sqlVAL.colTypes = append(sqlDollar[1].colTypes, sqlDollar[3].colType)
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2958
		{
			sqlVAL.expr = Array(sqlDollar[2].exprs)
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2962
		{
			sqlVAL.expr = Array(sqlDollar[2].exprs)
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2966
		{
			sqlVAL.expr = Array(nil)
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2972
		{
			sqlVAL.exprs = Exprs{sqlDollar[1].expr}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2976
		{
			sqlVAL.exprs = append(sqlDollar[1].exprs, sqlDollar[3].expr)
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2982
		{
			sqlVAL.exprs = Exprs{DString(sqlDollar[1].str), sqlDollar[3].expr}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3003
		{
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3004
		{
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3007
		{
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3011
		{
		}
	case 650:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3012
		{
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3026
		{
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3027
		{
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3028
		{
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3029
		{
		}
	case 655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3030
		{
		}
	case 656:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3031
		{
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3034
		{
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3037
		{
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3040
		{
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3041
		{
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3042
		{
		}
	case 662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3046
		{
			sqlVAL.expr = &Subquery{Select: sqlDollar[1].selectStmt}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3050
		{
			sqlVAL.expr = Tuple(sqlDollar[2].exprs)
		}
	case 664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:3061
		{
			sqlVAL.expr = &CaseExpr{Expr: sqlDollar[2].expr, Whens: sqlDollar[3].whens, Else: sqlDollar[4].expr}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3068
		{
			sqlVAL.whens = []*When{sqlDollar[1].when}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3072
		{
			sqlVAL.whens = append(sqlDollar[1].whens, sqlDollar[2].when)
		}
	case 667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3078
		{
			sqlVAL.when = &When{Cond: sqlDollar[2].expr, Val: sqlDollar[4].expr}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3084
		{
			sqlVAL.expr = sqlDollar[2].expr
		}
	case 669:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3088
		{
			sqlVAL.expr = nil
		}
	case 671:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3095
		{
			sqlVAL.expr = nil
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3101
		{
			sqlVAL.indirectElem = NameIndirection(sqlDollar[2].str)
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3105
		{
			sqlVAL.indirectElem = qualifiedStar
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3109
		{
			sqlVAL.indirectElem = IndexIndirection(sqlDollar[2].str)
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3113
		{
			sqlVAL.indirectElem = &ArrayIndirection{Begin: sqlDollar[2].expr}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:3117
		{
			sqlVAL.indirectElem = &ArrayIndirection{Begin: sqlDollar[2].expr, End: sqlDollar[4].expr}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3123
		{
			sqlVAL.indirect = Indirection{sqlDollar[1].indirectElem}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3127
		{
			sqlVAL.indirect = append(sqlDollar[1].indirect, sqlDollar[2].indirectElem)
		}
	case 679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3132
		{
		}
	case 680:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3133
		{
		}
	case 682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3142
		{
			sqlVAL.expr = nil
		}
	case 683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3148
		{
			sqlVAL.exprs = []Expr{sqlDollar[1].expr}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3152
		{
			sqlVAL.exprs = append(sqlDollar[1].exprs, sqlDollar[3].expr)
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3161
		{
			sqlVAL.exprs = sqlDollar[2].exprs
		}
	case 687:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3169
		{
			sqlVAL.selExprs = nil
		}
	case 688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3175
		{
			sqlVAL.selExprs = SelectExprs{sqlDollar[1].selExpr}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3179
		{
			sqlVAL.selExprs = append(sqlDollar[1].selExprs, sqlDollar[3].selExpr)
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3185
		{
			sqlVAL.selExpr = SelectExpr{Expr: sqlDollar[1].expr, As: Name(sqlDollar[3].str)}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3194
		{
			sqlVAL.selExpr = SelectExpr{Expr: sqlDollar[1].expr, As: Name(sqlDollar[2].str)}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3198
		{
			sqlVAL.selExpr = SelectExpr{Expr: sqlDollar[1].expr}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3202
		{
			sqlVAL.selExpr = StarSelectExpr()
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3210
		{
			sqlVAL.qnames = QualifiedNames{sqlDollar[1].qname}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3214
		{
			sqlVAL.qnames = append(sqlDollar[1].qnames, sqlDollar[3].qname)
		}
	case 696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3225
		{
			sqlVAL.qname = &QualifiedName{Base: Name(sqlDollar[1].str)}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3229
		{
			sqlVAL.qname = &QualifiedName{Base: Name(sqlDollar[1].str), Indirect: sqlDollar[2].indirect}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3235
		{
			sqlVAL.strs = []string{sqlDollar[1].str}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3239
		{
			sqlVAL.strs = append(sqlDollar[1].strs, sqlDollar[3].str)
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3245
		{
			sqlVAL.strs = sqlDollar[2].strs
		}
	case 701:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3248
		{
		}
	case 702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3258
		{
			sqlVAL.qname = &QualifiedName{Base: Name(sqlDollar[1].str)}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3262
		{
			sqlVAL.qname = &QualifiedName{Base: Name(sqlDollar[1].str), Indirect: sqlDollar[2].indirect}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3269
		{
			sqlVAL.expr = IntVal(sqlDollar[1].ival)
		}
	case 705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3273
		{
			sqlVAL.expr = NumVal(sqlDollar[1].str)
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3277
		{
			sqlVAL.expr = DString(sqlDollar[1].str)
		}
	case 707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3281
		{
			sqlVAL.expr = DBytes(sqlDollar[1].str)
		}
	case 708:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:3284
		{
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3286
		{
			sqlVAL.expr = &CastExpr{Expr: DString(sqlDollar[2].str), Type: sqlDollar[1].colType}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3290
		{
			// TODO(pmattis): support opt_interval?
			sqlVAL.expr = &CastExpr{Expr: DString(sqlDollar[2].str), Type: sqlDollar[1].colType}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:3295
		{
			// TODO(pmattis): Support the precision specification?
			sqlVAL.expr = &CastExpr{Expr: DString(sqlDollar[5].str), Type: sqlDollar[1].colType}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3300
		{
			sqlVAL.expr = DBool(true)
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3304
		{
			sqlVAL.expr = DBool(false)
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3308
		{
			sqlVAL.expr = DNull
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3315
		{
			sqlVAL.ival = +sqlDollar[2].ival
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3319
		{
			sqlVAL.ival = -sqlDollar[2].ival
		}
	case 722:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3341
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
