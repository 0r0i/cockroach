package resource

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path"
	"path/filepath"
	"strings"
	"time"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _ui_css_main_css = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x54\xdf\x6f\xdb\x36\x10\x7e\xe7\x5f\x71\x48\x31\xe4\x07\x2c\xdb\x71\x32\x60\xb0\x5f\xa6\xba\x19\x62\xb4\x50\x86\xc8\x59\xd1\x47\x4a\x3a\x49\x44\x28\x92\x23\x29\xcb\xee\xb0\xff\x7d\x47\x49\xf6\xe2\xb5\x5d\x1e\x02\xf3\xee\xc3\xdd\xf7\x7d\x77\xa7\xd9\xcd\x0d\x5b\x6b\x73\xb0\xa2\xaa\x3d\x2c\xe6\xb7\xf7\xb0\xad\x11\xd6\x3a\x7f\xb5\x9a\xe7\x35\xc4\xad\xaf\xb5\x75\x53\xc6\x3e\x89\x1c\x95\xc3\x02\x5a\x55\xa0\x05\x4f\xb0\xd8\x10\x04\x61\xcc\x4c\xe0\x0f\xb4\x4e\x68\x05\x8b\xe9\x1c\xae\x02\xe0\x62\x4c\x5d\x5c\xaf\xd8\x41\xb7\xd0\xf0\x03\x28\xed\xa1\x75\x48\x05\x84\x83\x52\x48\x04\xdc\xe7\x68\x3c\x08\x05\xb9\x6e\x8c\x14\x5c\xe5\x08\x9d\xf0\x75\xdf\x64\x2c\x31\x65\x5f\xc6\x02\x3a\xf3\x9c\xb0\x9c\xd0\x86\x5e\xe5\x5b\x14\x70\xcf\x18\xd0\x5f\xed\xbd\x59\xce\x66\x5d\xd7\x4d\x79\xcf\x72\xaa\x6d\x35\x93\x03\xca\xcd\x3e\x6d\xd6\x0f\x49\xfa\x10\x11\x53\xc6\x5e\x94\x44\xe7\xc0\xe2\x9f\xad\xb0\x24\x30\x3b\x00\x37\xc4\x23\xe7\x19\xb1\x93\xbc\x03\x6d\x81\x57\x16\x29\xe7\x75\xe0\xd9\x59\xe1\x85\xaa\x26\xe0\x74\xe9\x3b\x6e\x91\x15\xc2\x79\x2b\xb2\xd6\x9f\x19\x74\x64\x45\x4a\xdf\x02\xc8\x22\xae\xe0\x22\x4e\x61\x93\x5e\xc0\xfb\x38\xdd\xa4\x13\xf6\x79\xb3\x7d\x7c\x7a\xd9\xc2\xe7\xf8\xf9\x39\x4e\xb6\x9b\x87\x14\x9e\x9e\x61\xfd\x94\x7c\xd8\x6c\x37\x4f\x09\xbd\x7e\x83\x38\xf9\x02\x1f\x37\xc9\x87\x09\x20\xd9\x43\x4d\x70\x6f\x6c\xe0\xae\x2d\x13\xc1\x3a\x2c\xa6\x90\x22\x9e\x35\x2f\xf5\x40\xc6\x19\xcc\x45\x29\x72\x52\xa4\xaa\x96\x57\x08\x95\xde\xa1\x55\x24\x84\x19\xb4\x8d\x70\x61\x78\x8e\xa8\x15\x20\x45\x23\x3c\xf7\xfd\xfb\x1b\x39\xff\xb6\x88\x5f\x88\xf3\x73\xda\x8f\x91\x85\x3e\x8a\x37\xe8\xc2\x4c\x72\xad\x06\xb9\xc3\xf2\x0c\x6b\xb4\x84\x58\x15\x16\x3b\x78\xaf\xd5\x0e\x09\x80\x70\x45\xdd\x0e\x19\xb5\xf9\xb5\x6a\xb8\x90\x53\xda\x80\x6b\x76\x33\x63\x37\xf0\x17\xcd\xb1\xe1\xb6\x12\x6a\x09\xf3\x15\x3d\x0c\x2f\x0a\xe2\x3a\xbe\xa2\x46\x7f\x8d\x32\xbd\x8f\x9c\xf8\xda\x47\x33\x6d\x89\x67\x08\xf5\xe9\x0e\xb3\x57\xe1\xff\x07\xf1\xa3\xcc\xdf\xac\xf6\x8d\x9c\xb0\x4c\x17\x87\x9e\x44\x8d\xe1\x38\x96\x70\x3b\x9f\xff\x14\xd2\xa7\x44\xc6\xf3\xd7\xca\x6a\xf2\x27\xca\xb5\x0c\xf2\xde\x95\xb7\xe5\xa2\xbc\x0b\xe5\x8f\x91\xbb\xbb\xfe\x59\x92\x1f\x51\xc9\x1b\x21\x0f\x4b\xb8\x4c\x75\x6b\x69\xc7\x53\x4e\xf6\xfe\x6e\xf5\xe5\x04\x2e\x1f\x51\xee\xd0\xd3\xce\x41\x82\x2d\x52\xe4\x14\xa0\x2d\x23\x5c\xe4\xd0\x8a\xf2\x54\xaa\x1b\x49\xdd\xcf\xe7\xa7\x18\xa9\x41\xa2\x79\x6f\x7a\x15\xd3\xb2\x95\xf2\xb1\x87\xad\x29\x4b\x27\x43\x53\x7c\xab\x27\xe7\x32\xbf\x0a\xa2\x20\x82\x9f\xe7\x66\x7f\xbd\x82\xd9\x0d\x7c\x44\x34\x61\xc5\x25\xe1\x87\x23\x1c\xf0\x61\xa8\x74\x4a\x26\xe1\x3b\xa0\xf9\x50\xfd\xf1\xf1\xb6\x64\x28\xb3\xfa\x81\x33\x65\x39\xb8\x3e\x3a\xed\xbd\x6e\x88\xac\xd9\xd3\x0d\x49\x51\xc0\xbb\xa2\x28\xce\xa6\x7c\x4b\xb5\xe8\x8b\x34\x8a\x19\x9a\x45\xc4\xea\x75\x19\xfe\x4d\xce\x43\x3b\xe1\x44\xb8\xac\x40\xc6\xe3\xde\x47\x05\xe6\xda\xf6\x0b\xbc\xa4\x2f\x8e\xc2\xd5\x31\xe1\x2d\x99\x49\xab\x4a\xcd\x5b\x43\x6b\x9f\x73\x87\xdf\x99\x17\x9d\xab\x91\x9c\x66\x25\x54\x70\x22\xca\x24\x7d\x12\x57\xa7\x95\x8c\xec\x20\xf8\x7b\xfc\x8e\xbf\x6b\xdd\x60\x42\xf7\xd0\x93\x3a\x1b\xda\x2f\xdf\x0c\x6d\xb1\x18\x8c\xfb\x2f\xc5\x23\x75\xba\xd3\xb0\x0a\x32\xe2\x52\x54\x24\x29\x5a\x0c\x7d\xff\x09\x00\x00\xff\xff\xbf\xd9\x39\x3d\xc0\x05\x00\x00")

func ui_css_main_css_bytes() ([]byte, error) {
	return bindata_read(
		_ui_css_main_css,
		"ui/css/main.css",
	)
}

func ui_css_main_css() (*asset, error) {
	bytes, err := ui_css_main_css_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "ui/css/main.css", size: 1472, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ui_css_rest_explorer_css = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x54\xdd\x6f\xdb\x36\x10\x7f\xe7\x5f\x71\xc8\x30\xa4\x0d\xfc\x91\xb6\xdb\x8b\x02\x0c\x53\xdc\x0c\x13\x16\x38\x83\xe5\xac\xe8\x23\x45\x9d\x24\xa2\x14\x8f\x23\xa9\xc8\xc6\xb0\xff\x7d\x47\xc9\xd9\x9a\x64\x5f\xf5\x93\x8f\xbc\xbb\xdf\xc7\x1d\xb5\xbe\xb8\x10\x1b\x72\x47\xaf\xdb\x2e\xc2\xdb\xcb\x37\xdf\xc0\xbe\x43\xd8\x90\xfa\xe4\x49\xaa\x0e\xf2\x21\x76\xe4\xc3\x4a\x88\x5b\xad\xd0\x06\xac\x61\xb0\x35\x7a\x88\x9c\x96\x3b\x4e\x41\x38\xdd\x2c\xe0\x17\xf4\x41\x93\x85\xb7\xab\x4b\x78\x95\x12\xce\x4e\x57\x67\xaf\xaf\xc4\x91\x06\xe8\xe5\x11\x2c\x45\x18\x02\x72\x03\x1d\xa0\xd1\x06\x01\x0f\x0a\x5d\x04\x6d\x41\x51\xef\x8c\x96\x56\x21\x8c\x3a\x76\x13\xc8\xa9\xc5\x4a\x7c\x3c\x35\xa0\x2a\x4a\xce\x95\x9c\xed\x38\x6a\x3e\xcf\x02\x19\x85\x00\xfe\x75\x31\xba\x6c\xbd\x1e\xc7\x71\x25\x27\x96\x2b\xf2\xed\xda\xcc\x59\x61\x7d\x5b\x6c\x6e\xb6\xe5\xcd\x92\x99\x0a\x71\x6f\x0d\x86\x00\x1e\x7f\x1d\xb4\x67\x81\xd5\x11\xa4\x63\x1e\x4a\x56\xcc\xce\xc8\x11\xc8\x83\x6c\x3d\xf2\x5d\xa4\xc4\x73\xf4\x3a\x6a\xdb\x2e\x20\x50\x13\x47\xe9\x51\xd4\x3a\x44\xaf\xab\x21\x3e\x31\xe8\x91\x15\x2b\xfd\x3c\x81\x2d\x92\x16\xce\xf2\x12\x8a\xf2\x0c\xae\xf3\xb2\x28\x17\xe2\x43\xb1\xff\xf1\xee\x7e\x0f\x1f\xf2\xdd\x2e\xdf\xee\x8b\x9b\x12\xee\x76\xb0\xb9\xdb\xbe\x2f\xf6\xc5\xdd\x96\xa3\x1f\x20\xdf\x7e\x84\x9f\x8a\xed\xfb\x05\x20\xdb\xc3\x20\x78\x70\x3e\x71\x27\x2f\x74\xb2\x0e\xeb\x15\x94\x88\x4f\xc0\x1b\x9a\xc9\x04\x87\x4a\x37\x5a\xb1\x22\xdb\x0e\xb2\x45\x68\xe9\x01\xbd\x65\x21\xc2\xa1\xef\x75\x48\xc3\x0b\x4c\xad\x06\xa3\x7b\x1d\x65\x9c\xe2\x17\x72\xfe\x82\xc8\xef\x99\xf3\xae\x9c\xc6\x28\x12\x8e\x95\x3d\x86\x34\x13\x45\x76\x96\x3b\x2f\xcf\xbc\x46\x19\xe4\xb6\xf6\x38\xc2\x35\xd9\x07\xe4\x04\x84\x57\x8c\x76\xac\x18\xe6\xfb\xb6\x97\xda\xac\x78\x03\x5e\x8b\x8b\xb5\x58\xb1\xac\x78\x73\x70\x86\x3c\xfa\xc5\xd3\x70\x93\x7a\x93\x09\xcf\x8e\x6f\xa9\x85\xdf\x78\xf8\x1d\xa6\x65\xce\xe0\xcd\xe5\xe5\xd7\x57\xe2\xf7\x2f\xaa\x6d\x0c\x49\x2e\x35\xd8\xc4\x2b\x0e\x9d\xac\x6b\xb6\x27\xf5\x72\x07\x7e\x1e\xee\x90\x4e\x47\x5d\xc7\x2e\x83\x6f\xff\xa5\xfd\xd4\xac\x92\xea\x53\xeb\x89\xfd\x5b\x2a\x32\x49\xfe\x57\x4d\xd3\xfc\x63\xcd\x52\xcd\x7f\xa6\xda\x5e\xfa\x56\xdb\x65\x45\x31\x52\x9f\x9d\xa0\xff\xab\xf0\x3b\xe8\xde\xcd\x32\xf8\x60\x39\x9e\x7c\xb0\xe4\x7b\x69\x12\xf1\x88\x87\xb8\x8c\x5e\xda\xc0\xb3\xe2\xae\x83\xe3\xb9\x2b\x19\xf0\xea\x25\xe2\xbb\xff\x03\xa8\xad\x1b\xe2\x9f\x88\x19\xc7\xbc\x94\x3a\xbe\x28\x7c\xb4\xd7\x51\xd0\x69\xa9\x32\x7e\x6c\x86\xd7\xeb\x61\x42\x9e\xd8\x36\xb2\xd7\xe6\x98\xc1\x79\x49\x83\x57\xe9\x13\x54\x23\xfc\xec\xe9\x7c\x01\xe7\x1b\x3e\xd2\xbc\x83\x5b\x1c\x39\x3c\x45\x0b\xe8\xc9\x52\xe0\xc7\x8d\x7f\x87\xb7\x54\x06\xa5\xbf\x1e\x58\x8d\x7d\x86\x2d\xab\x40\x86\x1f\x62\xc2\xf6\xb3\x47\x8f\xa3\x8d\xe4\xe6\x61\xa7\x96\x7f\x04\x00\x00\xff\xff\x29\xec\xd5\x5f\x1d\x05\x00\x00")

func ui_css_rest_explorer_css_bytes() ([]byte, error) {
	return bindata_read(
		_ui_css_rest_explorer_css,
		"ui/css/rest_explorer.css",
	)
}

func ui_css_rest_explorer_css() (*asset, error) {
	bytes, err := ui_css_rest_explorer_css_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "ui/css/rest_explorer.css", size: 1309, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ui_index_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\x51\x6f\xdb\x36\x10\x7e\xd7\xaf\xb8\x6a\x0f\x6e\x50\x4b\x72\xbb\x02\xdb\x32\xdb\xab\xea\x78\xa8\xb1\xc2\x1e\x2c\x67\x45\x9f\x06\x5a\x3a\x49\x4c\x28\x52\x23\x29\x2b\x02\xf6\xe3\x77\x94\xe4\x34\xc9\x32\x20\x0f\xcb\x4b\x44\xf2\xe3\xdd\x77\xdf\x7d\x47\xcf\x5f\x05\x81\xb7\x52\x75\xa7\x79\x51\x5a\x78\x37\x7b\xfb\x1e\x0e\x25\xc2\x4a\xa5\xb7\x5a\xb1\xb4\x84\xb8\xb1\xa5\xd2\x26\xf4\xbc\xcf\x3c\x45\x69\x30\x83\x46\x66\xa8\xc1\x12\x2c\xae\x09\x82\x30\x9e\x4c\xe1\x0f\xd4\x86\x2b\x09\xef\xc2\x19\xbc\x76\x00\x7f\x3c\xf2\x2f\x7e\xf6\x3a\xd5\x40\xc5\x3a\x90\xca\x42\x63\x90\x02\x70\x03\x39\x17\x08\x78\x97\x62\x6d\x81\x4b\x48\x55\x55\x0b\xce\x64\x8a\xd0\x72\x5b\xf6\x49\xc6\x10\xa1\xf7\x75\x0c\xa0\x8e\x96\x11\x96\x11\xba\xa6\x55\xfe\x10\x05\xcc\x7a\x1e\xd0\x5f\x69\x6d\x7d\x19\x45\x6d\xdb\x86\xac\x67\x19\x2a\x5d\x44\x62\x40\x99\xe8\xf3\x66\xb5\xde\x26\xeb\x80\x98\x7a\xde\xb5\x14\x68\x0c\x68\xfc\xab\xe1\x9a\x0a\x3c\x76\xc0\x6a\xe2\x91\xb2\x23\xb1\x13\xac\x05\xa5\x81\x15\x1a\xe9\xcc\x2a\xc7\xb3\xd5\xdc\x72\x59\x4c\xc1\xa8\xdc\xb6\x4c\xa3\x97\x71\x63\x35\x3f\x36\xf6\x91\x40\x67\x56\x54\xe9\x43\x00\x49\xc4\x24\xf8\x71\x02\x9b\xc4\x87\x8f\x71\xb2\x49\xa6\xde\x97\xcd\xe1\xd3\xee\xfa\x00\x5f\xe2\xfd\x3e\xde\x1e\x36\xeb\x04\x76\x7b\x58\xed\xb6\x57\x9b\xc3\x66\xb7\xa5\xd5\xaf\x10\x6f\xbf\xc2\x6f\x9b\xed\xd5\x14\x90\xe4\xa1\x24\x78\x57\x6b\xc7\x5d\x69\x8f\x3b\xe9\x30\x0b\x21\x41\x7c\x94\x3c\x57\x03\x19\x53\x63\xca\x73\x9e\x52\x45\xb2\x68\x58\x81\x50\xa8\x13\x6a\x49\x85\x78\x35\xea\x8a\x1b\xd7\x3c\x43\xd4\x32\x10\xbc\xe2\x96\xd9\x7e\xfd\xaf\x72\xbe\xa5\x88\xaf\x89\xf3\x3e\xe9\xdb\xe8\xb9\x3c\x92\x55\x68\x5c\x4f\x52\x25\x87\x72\x07\xf3\x0c\x36\xba\x84\x58\x66\x1a\x5b\xf8\xa8\xe4\x09\x09\x80\xf0\x9a\xb2\x75\x47\x4a\xf3\xa1\xa8\x18\x17\x21\x39\xe0\xc2\x0b\x82\xa5\x37\x7f\x95\xa9\xd4\x76\x35\x52\x2b\x2b\x41\x6b\xf7\x0f\x64\x11\x50\x6b\x16\x7e\x7a\x36\xa8\xbf\xa4\x76\xcf\x4b\x64\xd9\xb2\xef\xfb\xbc\x42\x4b\xce\x28\x99\x36\x68\x17\x7e\x63\xf3\xe0\x47\x7f\x3c\x12\x5c\xde\x42\xa9\x31\x5f\x4c\x46\x7b\xe4\xc4\xd2\x84\x85\x52\x85\x40\x56\x73\xe3\xd2\x47\xa9\x31\xbf\xe4\xac\xe2\xa2\x5b\x24\xaa\xd1\x29\xbe\x49\x98\x34\x6f\x7e\xd7\xea\xf2\xfd\x6c\x36\xfd\x69\x36\xfb\x7b\xdc\x5f\xa9\x0c\xdd\xfe\x84\xbc\x23\x16\x13\x63\x3b\x32\x52\x89\x68\x27\xe0\x98\x2f\x26\x16\xef\xac\x8b\x37\x79\xc8\xc0\x61\xfd\x6f\x58\x7f\xa0\xe4\x3b\x5c\x44\x1a\xc8\x90\x3e\xfc\x97\x5e\xa0\xee\xdb\x3f\xc9\x05\x42\x69\xd4\xc3\x4d\x70\x53\x0d\x87\xdd\xd5\xee\x5e\xdc\x8b\x4b\xf8\x40\xfe\x50\xda\x06\x82\xdf\x22\x1c\xb1\x64\x27\x4e\xfd\x72\x4a\xf7\x89\x4c\xaa\x39\xcd\xa0\xd1\xe9\xc2\x77\xe2\x18\x52\x87\xdd\xb0\xbb\xa7\xe2\xb8\x3d\x1a\xa3\xa3\x89\x9c\x89\x04\xd3\x37\x26\x7a\x1b\x7e\x1f\xfe\x70\x5e\x87\x15\x55\x70\x43\x34\xe6\xd1\x10\xf3\xff\x4e\x10\x68\x45\x43\xf4\x92\x34\xd1\xcd\x28\xe8\x0b\x70\xbd\x5f\x95\x10\xf4\x82\x3d\xd1\xf4\xd1\xe5\xe7\xb5\x75\x25\x84\xe3\xf3\xf1\x5f\x02\x5b\x6e\x05\x2e\xef\x1f\xd6\x79\x34\x6c\x38\xf7\x46\x67\xfb\xce\x8f\x2a\xeb\x46\xbc\xdb\xa3\xb1\x4b\x05\x33\x66\xe1\x93\xe9\xb7\xec\x34\xba\x82\x4e\xd9\xe8\x81\xef\x22\xff\x31\x24\xe8\x1d\x33\x7e\x97\xaa\xc2\x2d\x4d\xa4\xff\x30\x2f\x7b\x26\x88\xab\x38\x38\x57\xfc\x5c\x44\x7f\xb9\x5f\x27\x07\x58\x8f\x90\xfb\x28\x03\x77\xd4\xe3\x2a\xe3\xa7\xf3\xe5\xbc\x11\xe2\x13\xba\x9f\x95\x15\x49\x4b\x5d\x70\x81\x69\x7c\x4f\x1c\x5b\xd2\x93\x90\x43\xed\x43\xc9\x14\xa7\x9f\xf2\x7f\x02\x00\x00\xff\xff\xef\x5c\x56\x02\x91\x06\x00\x00")

func ui_index_html_bytes() ([]byte, error) {
	return bindata_read(
		_ui_index_html,
		"ui/index.html",
	)
}

func ui_index_html() (*asset, error) {
	bytes, err := ui_index_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "ui/index.html", size: 1681, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ui_js_controllers_rest_explorer_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x55\xef\x6f\xdb\x36\x10\xfd\x9e\xbf\xe2\x1a\x14\xa3\x8c\xca\x52\x5a\xec\xc3\x60\x23\xeb\x54\x37\xc5\xbc\x06\xf6\x60\x3b\x2d\x8a\x20\x1f\x68\xe9\x24\xb3\x91\x49\x95\xa4\x62\x1b\x43\xfe\xf7\x1d\xf5\xc3\x92\x93\xec\x47\x90\xc4\x16\x79\xbc\xf7\xee\xdd\xe3\x29\x0c\x61\xa2\x8a\x83\x16\xd9\xc6\xc2\xbb\x8b\xb7\x3f\xc3\x6a\x83\xb4\x14\xdf\x6b\xc5\xe3\x0d\x44\xa5\xdd\x28\x6d\x82\xb3\x30\xa4\x5f\xb8\x16\x31\x4a\x83\x09\x94\x32\x41\x0d\x96\x62\xa3\x82\xe2\xb0\xdd\xf1\xe1\x0b\x6a\x23\x94\x84\x77\xc1\x05\x78\x2e\xe0\xbc\xd9\x3a\x1f\x8c\x5d\x8a\x83\x2a\x61\xcb\x0f\x20\x95\x85\xd2\x20\xe5\x10\x06\x52\x91\x23\xe0\x3e\xc6\xc2\x82\x90\x10\xab\x6d\x91\x0b\x2e\x63\x84\x9d\xb0\x9b\x0a\xa7\xc9\xe2\x98\xc0\xb7\x26\x87\x5a\x5b\x4e\xe1\x9c\x0e\x14\xf4\x94\xf6\x03\x81\xdb\x86\xb4\xfb\xd9\x58\x5b\x8c\xc2\x70\xb7\xdb\x05\xbc\x22\x1c\x28\x9d\x85\x79\x1d\x6a\xc2\xeb\xe9\xe4\x6a\xb6\xbc\x1a\x12\xe9\xe6\xd0\x8d\xcc\xd1\x18\xd0\xf8\xa3\x14\x9a\x0a\x5e\x1f\x80\x17\x44\x2a\xe6\x6b\xa2\x9a\xf3\x1d\x28\x0d\x3c\xd3\x48\x7b\x56\x39\xd2\x3b\x2d\xac\x90\x99\x0f\x46\xa5\x76\xc7\x35\xba\x34\x89\x30\x56\x8b\x75\x69\x4f\x34\x6b\x29\x52\xe5\xfd\x00\x52\x8d\x4b\x38\x8f\x96\x30\x5d\x9e\xc3\x87\x68\x39\x5d\xfa\x2e\xc9\xd7\xe9\xea\xf7\xf9\xcd\x0a\xbe\x46\x8b\x45\x34\x5b\x4d\xaf\x96\x30\x5f\xc0\x64\x3e\xfb\x38\x5d\x4d\xe7\x33\x7a\xfa\x04\xd1\xec\x1b\x7c\x9e\xce\x3e\xfa\x80\xa4\x18\xe1\xe0\xbe\xd0\xae\x02\xa5\x5d\x0a\xe1\x04\xc5\x24\x80\x25\xe2\x09\x85\x54\xd5\x94\x4c\x81\xb1\x48\x45\x4c\xa5\xc9\xac\xe4\x19\x42\xa6\x1e\x50\x4b\xaa\xc8\x9d\x2f\x50\x6f\x85\x71\x8d\x35\xc4\x31\x81\x5c\x6c\x85\xe5\xb6\x7a\x7e\x56\x57\x87\x12\xdd\x10\xf3\xc5\xb2\xea\xaf\x4b\xe3\xd0\x24\xdf\xa2\x71\xcd\x8a\x95\xac\x4b\xef\x19\xac\xf6\xdb\x08\x22\x99\x68\xdc\xc1\x07\x25\x1f\x90\xa2\x10\x3c\x42\x3d\xac\x09\xee\xb7\x6c\xcb\x45\x1e\x90\x45\x06\x67\x67\x0f\x5c\x43\xac\xa3\xa2\x80\x4b\x70\xbc\x73\xae\x83\xad\x4a\xca\x1c\x3d\x16\xb7\x26\x66\x64\xbc\x2a\x28\xa8\x10\x55\x9e\xa3\xf6\xd8\x02\x8d\xbd\xda\x17\xb9\xd2\xa8\x27\x56\xe7\xcc\x87\x5b\xf6\xda\x90\x93\x90\xbe\xb2\xd7\xce\x31\xcc\x3f\x73\xe6\x49\x4b\x19\xbb\x52\xbd\x6a\xd7\xaf\xcc\x34\x80\xbf\x68\xaf\x5a\x08\xee\x1f\x26\xaa\x94\x16\xf5\x17\x9e\x13\x91\x8b\xf1\x71\x87\x3a\x50\x10\x67\xbc\x56\x19\x6d\xdc\xde\x75\x3b\x71\x8e\x5c\x2f\x4e\xb6\x8f\x30\x58\x27\xff\xb7\x24\x8f\x7d\x8c\x1f\x25\xd5\xf2\x27\xca\x84\x9a\xe5\xf2\xf0\xdc\x60\xb7\xbf\x21\xe5\x72\x9c\x90\x75\xef\x5f\x04\xc1\x80\x8c\xe2\x54\xfe\x88\x29\x2f\x73\xeb\x0d\xc6\xd5\xba\xd3\x76\x8b\xd4\x8e\x84\x8e\x61\x60\xb9\xce\xd0\x06\xf4\x17\xd9\xc6\xb1\x1e\x4b\xb8\xe5\xc3\x3a\x88\xf5\x8e\x11\x95\x42\x09\x69\xff\xe3\x60\x1b\xd6\x1e\x15\x29\x78\xdd\xd1\x4b\x60\xe1\xfd\x43\x48\xd5\xdb\x50\x53\x73\x91\xb5\x8c\xa1\x03\x78\x43\x51\xef\x0d\x41\xd8\x4b\x06\x6f\x68\x3d\x56\x09\xde\x2c\xa6\x13\x9a\x20\x4a\x52\x51\x5e\xdb\xa2\x85\x4b\xb1\x74\x91\x0d\x5a\x8d\xf7\xea\xd5\x49\xc0\x95\x4c\x3a\x94\x27\x38\x3f\xd1\xd3\xff\x42\x71\x49\x5a\x8c\xc7\xea\xf3\x11\x30\x77\xf7\xfd\x04\xf0\x33\x1e\x5e\xae\xa8\x17\x50\xa7\x79\x3c\x2a\xeb\x74\x23\x55\x19\xeb\x14\xeb\x12\x92\xfd\x4a\xec\x52\x36\xb1\x27\xbb\x4f\xf3\x91\x79\x28\xa4\x3d\x51\x77\x72\xd4\x7c\xfa\xcd\x6a\xa9\xf3\xd1\x91\x5f\xbb\xb8\x41\x4e\xb7\xde\x8c\x7a\x62\xb1\x09\x5d\x2f\x12\x63\xb8\x3a\xd0\x1d\x1a\x01\xb3\xb8\xb7\x61\x91\xd3\x88\x1e\x43\xbc\xe1\xda\xa0\xbd\xbc\x59\x7d\x1a\xfe\xc2\x5a\x71\xfc\x1e\xd5\x51\xf5\xbf\xe6\xf7\xdc\x0f\x81\xa0\x29\xb3\x9f\xa7\x5e\x67\x8a\xb8\xbe\x74\x21\xf9\xe2\xd5\x25\x0c\xdf\x76\x95\x53\x55\x41\x43\xb0\x57\xdd\x0b\x0c\x9b\x91\xee\x2e\x44\xb8\x1f\xd2\xdb\x61\x48\x13\x6a\x3b\xa4\x8a\xeb\x1e\x27\xff\x44\x7c\xdc\x43\x7a\xa2\x73\x37\x0b\x9e\x8b\x5d\x5f\xe4\x4f\xb2\x7f\x11\xdd\x71\x7a\x69\xd0\x34\x2d\x8d\xdf\xea\xea\xbb\xe9\x98\x8a\xac\xab\xc9\x89\x61\x89\x36\x0d\xce\x1a\x90\x5c\xa0\xd6\xdf\x31\xb6\xac\xef\xd8\x86\xcc\x1f\xcb\xf9\x2c\x70\x6f\x16\x99\x89\xf4\x50\x61\x3c\xb1\xe4\x29\x25\x3a\xe2\x62\x02\xaa\x3b\xa3\x17\xee\xaf\x70\x01\xef\xeb\x5c\xa4\x92\x27\x55\x17\xb8\x56\xc9\x61\xc0\xc6\xbd\x1c\x5b\x53\xcd\x25\x76\x4b\x73\xb3\x71\x0e\xb0\x3b\x60\x5d\x51\xcc\x3d\x1c\x1d\x04\x4e\x79\xff\x98\xf1\x2e\xf8\x4e\xcb\x1e\x63\x47\x82\xcf\xc6\x5e\x50\x94\x66\xe3\x11\x4e\x13\xd2\xc8\xef\xe6\xb0\x47\x1d\x18\x04\xa6\x8c\x63\x7a\xd9\x79\x9d\xc2\x83\x00\xb5\x56\xba\xbf\x52\xcf\x4d\x80\xb3\xc7\x3b\xfa\xfe\x77\x00\x00\x00\xff\xff\x77\xe1\xee\x97\xfa\x08\x00\x00")

func ui_js_controllers_rest_explorer_js_bytes() ([]byte, error) {
	return bindata_read(
		_ui_js_controllers_rest_explorer_js,
		"ui/js/controllers/rest_explorer.js",
	)
}

func ui_js_controllers_rest_explorer_js() (*asset, error) {
	bytes, err := ui_js_controllers_rest_explorer_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "ui/js/controllers/rest_explorer.js", size: 2298, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ui_js_main_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x52\x61\x6b\xdb\x40\x0c\xfd\x9e\x5f\x21\xc2\xc0\x09\xa4\x76\x57\xf6\x29\x65\x30\x37\xcd\x98\x59\x49\x46\x9c\xac\x94\x32\xc6\xe5\xa2\xd8\xc7\xce\x77\x9e\xee\x1c\x37\x8c\xfe\xf7\xe9\xec\x84\x35\xcc\xf8\x8b\x4e\x4f\x4f\xef\x49\x4a\x12\x98\xd9\xfa\x48\xaa\x28\x3d\xdc\x5c\xbf\xff\x00\xeb\x12\xf9\x49\xfe\x22\x2b\x64\x09\x69\xe3\x4b\x4b\x2e\x1e\x24\x09\xff\xf0\xa0\x24\x1a\x87\x3b\x68\xcc\x0e\x09\x3c\x63\xd3\x9a\x71\x78\xce\x4c\xe0\x3b\x92\x53\xd6\xc0\x4d\x7c\x0d\xa3\x00\x18\x9e\x52\xc3\xf1\x6d\xa0\x38\xda\x06\x2a\x71\x04\x63\x3d\x34\x0e\x99\x43\x39\xd8\x2b\x8d\x80\x2f\x12\x6b\x0f\xca\x80\xb4\x55\xad\x95\x30\x12\xa1\x55\xbe\xec\xfa\x9c\x58\x82\x12\x78\x3a\x71\xd8\xad\x17\x0c\x17\x5c\x50\x73\xb4\x7f\x0b\x04\xe1\x4f\xa2\xc3\x57\x7a\x5f\x4f\x93\xa4\x6d\xdb\x58\x74\x82\x63\x4b\x45\xa2\x7b\xa8\x4b\x1e\xb2\xd9\x7c\x91\xcf\xaf\x58\xf4\xa9\x68\x63\x34\x3a\x07\x84\xbf\x1b\x45\x6c\x78\x7b\x04\x51\xb3\x28\x29\xb6\x2c\x55\x8b\x16\x2c\x81\x28\x08\x39\xe7\x6d\x10\xdd\x92\xf2\xca\x14\x13\x70\x76\xef\x5b\x41\x18\x68\x76\xca\x79\x52\xdb\xc6\x5f\xcc\xec\x2c\x91\x9d\xbf\x05\xf0\xd4\x84\x81\x61\x9a\x43\x96\x0f\xe1\x2e\xcd\xb3\x7c\x12\x48\x1e\xb3\xf5\x97\xe5\x66\x0d\x8f\xe9\x6a\x95\x2e\xd6\xd9\x3c\x87\xe5\x0a\x66\xcb\xc5\x7d\xb6\xce\x96\x0b\x8e\x3e\x43\xba\x78\x82\xaf\xd9\xe2\x7e\x02\xc8\x13\xe3\x3e\xf8\x52\x53\x70\x60\x29\x50\xa8\x30\x50\xdc\xc5\x90\x23\x5e\x48\xd8\xdb\x5e\x92\xab\x51\xaa\xbd\x92\x6c\xcd\x14\x8d\x28\x10\x0a\x7b\x40\x32\xec\x28\xd4\xd7\x48\x95\x72\x61\xb1\x8e\x35\xee\x40\xab\x4a\x79\xe1\xbb\xf8\x3f\x5f\xff\xba\xa4\x1b\x56\xbe\xca\xbb\xfd\x06\x9a\xd0\xcd\x88\x0a\x5d\x58\x96\xb4\xa6\xb7\xfe\xe6\xc0\xfa\x7b\x9b\x42\x6a\x76\x84\x2d\xdc\x59\x73\x40\x46\x21\x8c\xb8\xeb\x71\xcb\xed\x3e\x15\x95\x50\x3a\xe6\x13\x19\x0f\x06\x07\x41\x20\x29\xad\x6b\xf8\x08\x41\xb7\x16\x14\x57\x76\xd7\x68\x1c\x45\xf2\x7c\xc4\xd1\x04\x9e\x23\x53\xac\x2c\x0f\x39\xfa\xc1\x57\xd8\x55\x30\x83\xd9\xab\x62\xf4\x1c\xbd\xa3\x90\xf9\x46\xf6\xa0\xd8\x08\xa3\xf7\x8d\x91\xc1\xda\xe8\x22\x31\x86\x3f\x03\x80\x8b\xa7\xb8\x2d\xd1\x8c\xa2\x84\x07\xed\xaf\x78\xe0\xda\x52\x47\x10\x80\xd0\xfb\xb3\x5a\x23\x4d\xa3\x15\x23\xe6\x27\xc0\xcc\x93\x8e\x26\x1d\xc4\x23\xef\x45\x78\xdc\x90\x9e\x46\xc9\x39\x72\x1d\xe1\xcf\x33\x61\x5c\xfa\x4a\x47\x8c\x7f\x1d\xc7\x36\xec\xb6\x55\x0e\x47\x7d\x0f\x3e\x4d\x3e\x4f\xe9\xd7\x96\xeb\x7b\xcc\xed\xe0\x35\x98\xfc\x1b\x00\x00\xff\xff\x7a\xc6\x8d\x09\xda\x03\x00\x00")

func ui_js_main_js_bytes() ([]byte, error) {
	return bindata_read(
		_ui_js_main_js,
		"ui/js/main.js",
	)
}

func ui_js_main_js() (*asset, error) {
	bytes, err := ui_js_main_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "ui/js/main.js", size: 986, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ui_templates_rest_explorer_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x57\xdf\x6f\xdb\x36\x10\x7e\xd7\x5f\x71\x13\x82\x21\x01\x62\xab\xeb\xf6\xd4\xda\xc1\x14\x5b\x6b\x8c\x04\xb6\x61\x39\x29\xfa\x48\x4b\x67\x89\x30\x45\x6a\x24\xe5\x1f\x28\xfa\xbf\xef\x28\x29\x73\x82\x25\x4d\x9d\xa1\xf9\xf1\x12\x53\xfc\x8e\xdf\x77\xdf\xdd\x99\x72\xef\x97\x4e\xc7\x1b\xa8\x72\xa7\x79\x96\x5b\x78\xff\xee\xb7\x3f\x60\x9e\x23\x0c\x54\xb2\xd2\x8a\x25\x39\x84\x95\xcd\x95\x36\x5d\xcf\xbb\xe2\x09\x4a\x83\x29\x54\x32\x45\x0d\x96\x60\x61\x49\x10\x84\x76\xe7\x14\x6e\x50\x1b\xae\x24\xbc\xef\xbe\x83\x63\x07\xf0\xdb\x2d\xff\xe4\xa3\xb7\x53\x15\x14\x6c\x07\x52\x59\xa8\x0c\xd2\x01\xdc\xc0\x92\x0b\x04\xdc\x26\x58\x5a\xe0\x12\x12\x55\x94\x82\x33\x99\x20\x6c\xb8\xcd\x6b\x92\xf6\x88\xae\xf7\xa5\x3d\x40\x2d\x2c\x23\x2c\x23\x74\x49\xab\xe5\x5d\x14\x30\xeb\x79\x40\x7f\xb9\xb5\xe5\x87\x20\xd8\x6c\x36\x5d\x56\xab\xec\x2a\x9d\x05\xa2\x41\x99\xe0\x6a\x34\x88\xc6\x71\xd4\x21\xa5\x9e\x77\x2d\x05\x1a\x03\x1a\xff\xae\xb8\xa6\x04\x17\x3b\x60\x25\xe9\x48\xd8\x82\xd4\x09\xb6\x01\xa5\x81\x65\x1a\x69\xcf\x2a\xa7\x73\xa3\xb9\xe5\x32\x3b\x05\xa3\x96\x76\xc3\x34\x7a\x29\x37\x56\xf3\x45\x65\xef\x19\x74\xab\x8a\x32\xbd\x0b\x20\x8b\x98\x04\x3f\x8c\x61\x14\xfb\x70\x1e\xc6\xa3\xf8\xd4\xfb\x3c\x9a\x5f\x4c\xae\xe7\xf0\x39\x9c\xcd\xc2\xf1\x7c\x14\xc5\x30\x99\xc1\x60\x32\x1e\x8e\xe6\xa3\xc9\x98\x56\x7f\x41\x38\xfe\x02\x97\xa3\xf1\xf0\x14\x90\xec\x21\x12\xdc\x96\xda\x69\x57\xda\xe3\xce\x3a\x4c\xbb\x10\x23\xde\x23\x5f\xaa\x46\x8c\x29\x31\xe1\x4b\x9e\x50\x46\x32\xab\x58\x86\x90\xa9\x35\x6a\x49\x89\x78\x25\xea\x82\x1b\x57\x3c\x43\xd2\x52\x10\xbc\xe0\x96\xd9\x7a\xfd\x9f\x74\xf6\x14\xe1\x35\x69\x9e\xc5\x75\x19\x3d\xc7\x23\x59\x81\xc6\xd5\x24\x51\xb2\x49\xb7\x69\x9e\xa6\x8d\x3e\x40\x28\x53\x8d\x1b\x38\x57\x72\x8d\x04\x40\x38\x26\xb6\xdd\x82\x68\xfe\xcc\x0a\xc6\x45\x97\x3a\xe0\xc4\xeb\x74\xce\xbc\x5e\xca\xd7\x90\x08\x66\x4c\xdf\xa7\x14\x6d\xb4\x2d\x85\xd2\xa8\xfd\x33\xaa\xef\x63\x9b\x03\xc7\xaa\x84\xa9\x41\x04\x33\x98\xb8\x1c\xbe\x07\xed\x24\xcd\x87\x36\x84\x82\xf2\xdf\xcf\x2e\x83\x1b\x98\x32\xae\x7b\x01\x2d\x6e\x9f\x53\x7e\xc5\xed\x82\x96\x5c\x96\x95\x05\xbb\x2b\xb1\xef\x5b\xdc\x5a\x1f\x64\xd6\x29\x54\x8a\xa2\xef\xaf\xd6\x97\xb8\xab\x1f\x50\xd9\x5d\x17\xa5\x35\x79\x49\x79\xe2\x14\x65\x4a\x96\xfb\x50\x0a\x96\x60\xae\x04\xb9\xdb\xf7\x1d\x7e\x7f\xf8\xaf\x9a\x69\xfd\xf1\x47\xb9\x6e\x98\xa8\xf0\x20\xb6\x26\xe2\x91\x64\xa8\x68\x56\xc9\xfa\xbc\x84\x86\x60\xd5\xf7\x73\x2a\x92\xc0\x81\x5b\x1c\x1f\xa1\xab\xdc\xc9\x53\x74\x6b\xc7\xd0\xf7\x3f\x21\x69\x4d\x99\x65\x1d\xda\x28\x15\x97\xb6\xef\x07\xab\x75\xe0\x2a\x11\xb8\x0e\xd8\x05\xed\x7e\x81\xd4\x21\x74\xd2\xa7\x68\xfe\x12\xc2\x2e\x90\xa5\x07\x2a\xbb\x88\xc2\xe1\x4b\x48\x9b\x56\x87\x7a\x36\xbd\x26\xcf\x1a\x55\x3f\x5f\xde\x10\x05\x5a\x3c\x50\xe1\x30\xba\x8a\xe6\xd1\x7e\xc6\x82\xfd\x30\xf5\x82\x76\x4a\xff\xe7\xcc\xce\xe8\x5b\x0d\x9f\x3f\xb0\x75\x78\x6c\x99\xb6\x07\x4d\x52\x13\xf1\xdc\xc9\xad\x49\x23\x99\x1e\x44\xe9\xf0\xaf\x3d\xba\xda\x09\x7f\x9d\xc9\x7d\xaa\xff\x1e\x92\xf6\x02\xed\x37\x50\x95\xb4\xf8\x26\x6f\x0c\x59\x15\x0b\xba\x38\xef\xb1\xb5\x72\xe9\x22\x78\x82\xf4\xb5\x3b\x2d\x69\x84\xbe\xc9\x6b\xe2\x11\x6d\x2f\x76\x51\x28\x73\xb8\x71\xd3\x49\xfc\x26\xc6\xf4\x11\x79\x3f\x3a\xa9\xbd\x80\x5e\x01\xbf\xf7\x2a\x78\xa5\x6e\x7b\xb7\x99\x4e\x69\x94\xb8\x73\x3d\x3c\x98\xf7\xc3\xc7\x90\x17\xc8\xf4\x79\x8b\x69\xd3\x1b\xb8\x67\x77\x9d\xaa\x41\xb3\xd6\x0c\x8a\xfa\xd7\xae\x96\xcf\xc9\x24\xb4\xc6\x12\x19\xf9\x20\x54\xe6\x7e\x48\xe8\x7d\x00\x58\xcd\x92\x95\xfb\xf1\x71\xc4\xd3\xe3\x23\x4e\x6f\xdd\x5b\x8a\xfe\xfa\x95\xa0\xdf\xbe\xed\xf3\x6d\x3e\xb4\xff\xbc\x7f\x02\x00\x00\xff\xff\xa5\x02\xb0\x2f\xc2\x0d\x00\x00")

func ui_templates_rest_explorer_html_bytes() ([]byte, error) {
	return bindata_read(
		_ui_templates_rest_explorer_html,
		"ui/templates/rest_explorer.html",
	)
}

func ui_templates_rest_explorer_html() (*asset, error) {
	bytes, err := ui_templates_rest_explorer_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "ui/templates/rest_explorer.html", size: 3522, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _test_certs_ca_crt = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x94\x4d\x8f\xba\x48\x17\xc5\xf7\x7c\x8a\x67\x6f\x9e\x88\xe2\x0b\x2e\x66\x71\xeb\x05\x2c\xba\x0b\x04\x4b\x10\x76\x20\x8a\x80\x20\xb4\xdd\x14\xf0\xe9\xa7\x75\x26\x99\x7f\xe6\x9f\x74\xa6\x36\x95\x9c\xe4\x9e\x9c\x9c\xdf\xcd\xfd\xff\xf3\x21\x6a\x32\xfb\x7f\x98\x7a\x82\x19\x0c\x83\xa0\x2f\x55\xe1\x8c\xe1\xf5\x88\x31\xdc\xf2\x0c\x24\x43\x90\x31\x0b\xd8\x36\xbe\x54\x75\xb7\x6b\x3c\x9b\x83\x6a\xe2\x7d\x6b\xee\x59\xa2\x11\x97\x22\xe4\x1e\x80\x1b\x65\x8f\x47\xb0\x50\x66\xfb\x0a\x82\x50\xc0\xcd\x17\xdc\xa3\x92\xc8\x90\xf8\xae\xcb\xa8\xbc\x3a\xd1\xf1\x94\x05\xc1\x66\x88\x47\xea\x71\xd0\x4d\x98\x1d\x28\xea\x39\x13\x95\xaf\x31\xe3\xd6\x9d\xaa\x47\x4f\x0b\x70\x95\xa7\x0b\x82\xbb\xc0\x07\xbb\x0b\xe7\x9f\x43\x32\x37\x8a\x98\x50\x97\xc3\xe2\x35\x04\x3d\xdf\xfa\xa6\x3f\xa6\x18\x11\x57\xc0\xd9\x90\x6a\x6f\x13\x58\x70\xc2\xbe\x7f\xba\x50\x38\x41\xf1\x4b\x14\xff\x88\x4f\xed\xd7\x98\x3f\xa5\x54\xfe\x4b\xcc\x9f\x52\x2a\xbf\xc7\xc4\xa8\x1e\xc1\x46\x59\xd9\x5e\xcb\xdc\xdc\x48\x15\x81\x4b\x0d\x00\x07\x15\x2e\xc8\x2c\x2c\x71\x16\x52\x90\x49\x74\x2e\x86\xe5\x4a\x29\xa5\x37\x8b\xdd\x55\x1e\x33\x73\xea\xe3\xc9\xc1\x9f\x2e\xe5\x1c\xac\xc9\x66\x6c\xf4\xc4\x16\x47\x5a\x64\xab\x9d\x3e\x68\xb5\x91\xe4\xab\x55\x97\x5b\x8b\x9e\x3a\xef\x81\xe6\xcf\xea\xe9\x7e\xe3\xe5\xca\xbc\x32\x87\x9b\xf8\x3a\x0d\x41\x6d\x78\x77\x75\xe5\x03\x19\xa8\xc4\x5f\xd4\xae\x40\xd7\x51\x2d\xdc\x4b\x74\x87\x8d\x67\x5d\x66\x8b\xf7\x5b\xdb\x4c\xbf\xd6\x62\x3a\x69\x9d\x83\x30\xbb\x20\x1b\x4f\xca\x78\x51\x07\xf8\xac\xe2\x6a\xe4\xe5\x4c\x3f\xd6\x73\x7c\xb8\xf9\xcb\xb0\x3f\x9d\xf3\xfd\xdd\x4e\x9c\x43\xf1\xc0\x20\x29\x40\xec\xa0\xae\xc0\xe8\x6b\x04\xfe\xec\x64\xeb\x71\x8a\x04\x10\x05\xdc\xed\x94\x23\xf5\x59\x60\x4a\x32\x37\x40\x48\x0c\xa7\x69\x5b\x9c\x46\xbc\x5b\xdd\x4b\x43\xe8\xdc\x5f\xec\xcd\x75\x63\x34\x7e\xfb\x6d\x90\x3f\x29\x78\x6a\x81\x98\x49\x38\x33\x41\xc9\x7e\x1a\x68\x8d\xb4\x31\x1e\x32\x10\xf4\x9d\x43\xf9\x17\xa5\x2b\xc7\xbe\xcf\x7b\x2a\x60\xf7\xf7\x26\x66\x02\xd3\xe5\x2d\x1d\x50\x94\x68\xd6\xc7\x2f\xac\xb7\xff\xda\xc8\x3d\x47\xf0\x32\xc1\x57\x6e\xb9\xf3\x4d\x11\x6b\x56\xa7\x84\x81\x7d\xe7\x1e\x48\x92\xbd\x86\x08\x95\xe9\x21\x3a\xda\x2a\xa3\xdf\x24\xb3\x12\xb2\xb4\x99\xc4\x67\x7d\x72\xa3\xaa\x24\x6e\x68\xbd\xdd\x23\x76\xed\x4e\xf6\x13\x2d\x72\xbf\x3b\x78\x32\xcd\xfb\xf0\xe3\x8d\xb6\x97\x61\x3f\x04\xeb\x28\x5f\xfb\xab\x45\x97\x44\x57\xc3\x59\x1a\xdc\x6d\x54\x11\xcc\x71\xc4\x8e\x8f\xba\xd7\x9c\x76\x59\x34\xea\x35\x14\x1a\xf9\x44\xc5\x4c\x5f\x7e\x28\x4e\xa4\x07\xbb\x6d\xd7\xf3\xa9\xe5\x9c\x52\x82\x27\x29\xb1\xef\xf5\xd9\xec\xf2\x6e\x34\xe4\xae\xf4\x53\x90\xde\x52\xa4\xe1\xf9\x31\x4f\xd5\x6a\x61\xd1\xde\x68\xbc\x68\xd2\xed\x22\x31\xac\xdf\x4c\x65\xf7\xa1\xad\x57\xf5\x61\xa0\xd6\x67\x50\x2f\xaf\x55\x95\x47\xa6\x9e\x84\xc9\xb6\x89\x62\x4b\x1f\xb6\x47\xaa\x85\x68\xb7\x8f\x2d\xf3\xed\x12\xc5\xfa\x1f\xca\xeb\x0a\x50\x9b\xfc\x7e\x19\xfe\x0c\x00\x00\xff\xff\x39\x51\x60\x80\x36\x04\x00\x00")

func test_certs_ca_crt_bytes() ([]byte, error) {
	return bindata_read(
		_test_certs_ca_crt,
		"test_certs/ca.crt",
	)
}

func test_certs_ca_crt() (*asset, error) {
	bytes, err := test_certs_ca_crt_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "test_certs/ca.crt", size: 1078, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _test_certs_node_crt = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x95\x5b\x73\xa3\x3a\x12\xc7\xdf\xfd\x29\x78\x3c\xa7\x32\xbb\xe6\x7e\xe9\xaa\x3c\x88\x8b\x1d\x9c\x80\x8d\xaf\x71\xde\x00\x01\xc6\xc6\x26\x01\x62\x6c\x7f\xfa\x6d\x91\x99\x8c\xb3\xf1\x9c\xad\x5a\x4d\x4d\x4c\x49\xea\xee\x7f\xb7\x5a\x3f\x59\x49\xd5\xe4\x69\x1e\x87\x4d\x02\x3d\x0e\x87\x1d\x36\xe1\xc7\x17\x1b\xcb\xa4\xaa\xf3\xf2\x00\x9c\xc4\xfd\xc5\x9f\xc4\xbf\x3f\x17\x66\x49\x95\x87\x05\xe7\xbf\xef\xa3\xa4\x02\x4e\x60\xcb\xc2\xd5\x72\x9e\x1d\xc2\xe6\xbd\x4a\x38\x52\x64\x65\x95\x37\x9b\x3d\x70\xf5\x26\x14\x56\xf8\x39\x9d\x11\xe7\x10\x57\xe7\xd7\x06\x5d\x7f\x9a\xb8\x75\xfd\xce\x5c\x59\xf7\x8b\xd9\x0f\x6e\x36\xbf\xf7\x93\x96\x5b\x97\xd5\xee\x07\xf7\x74\xf5\x3d\xbe\xb7\xca\x78\x57\x95\x61\xbc\xf9\xc1\x59\xfe\xfd\x3c\xa9\x1b\xce\x22\xbf\x15\x87\x45\x4e\xf3\xe6\xfc\x39\xc1\x86\x5f\x36\x9c\x99\xa4\x65\x95\x00\x47\xde\x33\x8e\x13\x39\x41\x06\x41\x07\x9e\xe7\x44\x5e\x90\xb9\xa1\x37\xff\x66\x40\xd2\x26\xa9\xb8\x9b\x06\xca\x17\x83\xd9\x7b\xb4\x4d\xe2\xe6\xa6\xf4\x2f\x72\xc7\x8b\xfb\x06\xe5\x76\xba\x8b\x32\x0e\x8b\x4d\x59\x37\xff\xed\x86\x9b\xbc\x47\x45\x1e\x73\x8f\xc9\x99\x73\x0f\x69\x09\x5f\x84\x5d\x2d\x5e\x55\xb6\xaa\xc3\x1b\x15\x65\x03\x6b\x7d\x65\x03\xdc\x5f\x02\x2f\xca\x5c\x94\x37\x7f\x7f\xd9\xc6\x86\x57\xd2\xf7\xe2\xbd\xbe\xda\x02\xdf\xf6\xb0\xc1\xf3\x40\x25\x48\x43\x50\x34\x90\x65\x88\x04\x88\x22\x50\x74\xa0\x32\xd0\x04\x64\x09\x92\x18\x68\x08\x89\x06\xb1\x76\xdb\x83\xa1\x41\x9a\x80\xa6\x83\x8c\xdb\x74\xe6\x2a\xe5\x59\x71\xd3\x18\x42\x0d\x54\x03\x0c\x09\xb4\x14\x8c\x14\x74\xe5\xb6\x07\x51\x62\xd1\xe3\x94\x99\x0b\x06\xc4\x09\x18\x2a\x68\x22\xf3\x20\x1a\xc0\xa3\xdb\x08\x24\x9e\x79\x10\xd5\x3f\x78\xa0\xa0\x09\x10\x52\x88\x25\x16\x85\x47\x3f\x1a\x9e\x2e\x84\x3c\x73\xa8\xe0\x12\x26\xa8\x82\x82\xb9\xf0\x7f\xc8\x42\x04\xc9\x60\xe6\x98\x4e\xa2\xb0\x8c\x68\x0a\x92\x0c\x3c\x2a\x51\xbb\x14\x54\x88\x0d\xd0\x28\x4b\xf0\xa6\x07\xa9\x8b\xab\xa3\x00\x0a\x3a\x0a\x0e\x81\x0a\xa0\x2a\x10\x51\x10\x45\x56\x01\x5d\x83\x48\x83\x50\x61\x4b\x37\x3d\xe8\xd8\x91\x12\x48\x31\xa4\x1a\x68\x06\x44\x12\x60\x65\x64\x05\x74\x19\x64\x1e\x44\x01\x12\x94\x97\x40\x1c\x41\x94\xde\xf6\x40\x45\x10\x63\x56\x2b\x3c\x82\x34\x85\x48\x05\x29\x65\x7e\x12\x01\x68\xcc\xaa\xa7\xe1\x5f\x1d\xb4\x90\x9d\xf5\x6d\x0d\x31\x5b\x12\x23\xd6\x06\xb2\x0a\x2a\x65\x0d\x20\x61\x3a\xf4\xdb\x76\xe7\xf4\x5a\x1e\x92\x03\x5e\x15\x55\x51\x24\xad\x83\x06\xcf\xf3\x57\xe0\x78\x56\x78\xe3\x28\x71\xc9\xa9\x49\x0e\x8c\x3c\xf5\xd7\x98\x3f\x97\xcd\xb0\xc6\x86\xb6\x70\xb9\xa9\xc2\xfc\xd0\xd4\xc0\x7d\x8b\x65\x11\x18\x90\xa7\x99\x73\xcb\x9e\x5d\x9f\x45\x1d\x66\xc9\x0d\x3b\x3b\xcf\xf2\x06\xd1\xf6\x89\xb0\x1f\x48\x83\x03\x37\x4d\x5e\xdf\x69\x1e\xb2\x0b\xf6\xa3\xb3\xc7\x0b\x97\xbf\x6e\x92\x6a\x8f\xf9\xdc\x8a\xe1\xb0\x14\x68\x42\xff\x31\xd8\xfc\x69\xc6\xad\x92\x88\xb3\x8a\x1c\xdd\x20\x6a\x9a\x0d\xfe\x32\x1c\x77\x71\x7e\x2d\x23\x6d\x8f\xc8\xa2\xaf\xcb\xb7\x82\xfe\x62\x48\x07\x0f\xca\xf6\xa6\x39\x83\xea\xf7\xea\x0c\x40\xb6\x40\xe0\xc1\xb1\x41\xb6\x41\xc1\x4e\x94\xc1\x90\x81\x48\x60\x7d\xdc\x00\x02\x58\x41\xd1\x02\x6c\x31\x63\x00\x3a\x5e\x4a\x1b\x04\x13\x24\xf5\x56\x5c\xa6\x8c\xc1\xe8\xfc\xbf\x23\xef\x92\x73\x4e\x61\x80\xfd\x2d\xe1\x01\xb1\x80\xf8\x81\xfd\xa7\x0f\xc0\x21\x2c\x0e\xaf\x80\x3c\x00\x4b\x02\x41\x01\x47\x60\x4d\x6c\x9a\x40\x64\xa6\x08\x65\x12\x72\xe3\xc4\x2a\x3f\xdc\x27\xd0\x67\xfc\xed\x5f\xe1\xb7\xff\xfb\xe1\xe8\x5f\x81\xb8\x7f\xe3\xd9\xf8\x35\xea\xee\x5d\x03\x5d\x00\x9b\x80\xe6\x30\x18\x39\x03\x90\x1c\x56\x1b\xd9\xee\xfd\x53\xcd\x49\x81\xef\x05\xb6\x4c\x7e\x4c\xb8\x4e\xcf\xf7\xdc\xdd\x09\x47\x28\xad\x92\xba\x06\x41\xd4\xfe\xcd\xe3\x3f\xa1\xdb\xf4\x7f\xbc\x97\x3c\x9e\x51\xd2\xd1\x4e\x64\x57\x36\xa5\x0c\x54\x48\x2c\x04\x09\x8f\xf7\x5e\x64\x7c\x35\x3a\xa4\xd1\x08\x84\x08\x0c\x83\x5d\xee\x4f\x73\xb9\x03\x03\xf2\x52\xc0\x9b\x8d\xf0\x8b\x21\xe6\x19\xb3\x25\x0a\x0a\xd2\x1d\xcd\xd1\x0f\x4e\xd2\x8e\x1f\x3c\x9b\x47\x27\x9f\xe6\x48\xbb\x48\x87\x28\x06\x55\x67\xf8\x44\x56\x21\xcb\x91\x7c\x08\x30\x44\x05\xb2\x1c\xc9\x1a\x4a\x2c\xa8\x80\x30\x4b\x99\x4f\x7c\x34\x7e\x8b\x17\x98\x39\x46\x31\x10\xf9\x71\x87\x4f\x89\xc1\x23\x94\x41\xc3\x67\xc4\x60\x74\x47\x3a\x62\xd1\x11\x5d\xc8\xd1\x50\x60\x9b\x3f\xcd\x55\x24\x7d\x07\xda\x38\x64\xa0\xc5\x28\xc8\x1b\xc4\x15\x3a\xc1\xb8\x6a\x0a\x9a\x02\x2a\xf2\x1b\x8b\x43\x81\x47\xfd\x32\x7b\x1f\x3e\xcd\x31\x28\x3e\x11\xd8\xf0\x18\xda\xc0\x28\x94\xc9\xc6\x32\xc6\x02\xe3\xa8\x82\x15\x43\xf0\xa7\xec\x11\x53\x25\x06\x45\x29\x01\xe5\x0a\xc0\xf8\x74\xb0\x8a\x09\x1d\x23\x79\xc6\x66\x74\x88\xa8\x16\x15\xa6\x19\x29\x98\xaa\x4c\x2d\xb6\x6f\x84\x6f\x82\xc8\x7a\x28\x35\xae\xc4\x63\x38\xad\xf7\x2f\x36\x4c\x67\xe8\xfa\x9c\xe5\x4c\xe7\xee\xc0\xb5\xc8\xdc\xe9\x66\x7b\x9e\xeb\xda\x0f\x17\xcb\x22\x65\x9e\x91\xd6\x35\x49\x86\xff\xe7\xc4\x37\xb3\xdd\xdb\x66\x97\x0f\x8d\x96\x37\x49\xb0\x18\x10\xdb\x7c\xf1\x82\xba\xb5\x82\xb5\xbd\x0c\x82\xa1\xd3\x8e\x96\x8b\x8b\x33\xed\x79\x44\x1f\x12\x61\xe1\x58\xa6\xe7\xce\xf7\x4b\xc9\x1d\x14\xc7\x78\x5f\x9f\x9c\x39\x99\x98\x99\xbf\x34\x49\x3c\xb7\x1c\xa5\xa0\x67\xf3\x25\x92\x46\x95\x37\x75\x5b\x87\x74\x4e\x1e\x9d\xb6\xb0\x7b\x91\xe8\x57\xf1\xde\xd8\xac\xc5\xec\xe4\xd8\x64\xfc\x61\xe4\xcd\x4d\x61\x5a\xc4\x52\x90\x05\xbc\xd3\x3e\x6c\x62\xdf\x9b\x07\xed\xd8\x26\x67\xfc\x3d\xe1\x6f\xbb\xea\xe6\x16\x6d\xef\xcb\xe4\xd6\x7c\xbe\x25\xf3\x8f\x2a\xb7\x24\xe8\x7d\x44\x2c\xe7\xd6\xc2\x3f\xae\xc5\xe6\x1c\x89\x83\x6d\x68\x3b\xbe\x47\xea\x0f\xa3\x93\xe7\xd0\xe1\xf2\x42\x6d\x67\xe6\x99\xa4\x9b\x23\x27\x6f\x14\x0d\x8d\xed\x7a\x75\x2a\x7b\x91\xe4\xf3\x9e\x3b\x4c\x3d\xc2\x0f\xad\xd9\xdb\x70\xe6\x46\x92\x1d\x38\xac\x70\x84\xc8\x43\x9f\xd8\x96\x99\x07\x8f\x66\x16\xd8\xf3\xbb\x82\x3a\x75\xd4\xac\x05\x5f\xb1\x35\xbf\x3a\x9c\x94\xf4\xae\x97\x38\x55\x79\x77\x24\xeb\xfe\x23\x7d\xdd\x49\x77\xe9\x66\xe6\x3f\x5f\xee\xb2\x97\xcb\xeb\xcb\xb9\x6f\xed\x1e\xd5\x8b\x95\x8e\x72\xe1\x54\xc5\xe3\x81\x65\xc6\xa4\x34\x8b\xe9\x5b\xf1\x12\xf3\x23\x57\x69\x95\xb4\xe8\xf5\x1b\x9d\x37\x0f\xe1\x9c\xd6\x85\x71\xb7\x5d\xb8\x99\x2c\x3e\x8d\x1b\x4c\x72\x36\xea\x6f\xb4\xa4\x18\x97\x99\x3d\x99\x50\xa5\x3e\xfb\x83\x8d\x43\x36\xb2\xa2\x3d\x1d\x0d\xb7\xf6\x26\x76\xbf\xd9\xde\x5d\x7a\x32\x6d\xf7\xa9\xb5\x51\xa7\xee\xc9\x79\xd4\x9a\x61\x94\xb4\xda\x24\x70\x6d\x12\x10\xb3\x94\x1f\x64\xcf\x7d\x10\x3c\xb2\x63\xb9\x53\xa7\x0d\x2c\x8f\x90\xd6\x6a\xb1\xc8\x53\x7e\x82\x79\xda\x3d\x92\x3d\x67\x9e\xc9\x77\x1b\x46\x41\xb0\xf2\xcc\x60\x68\x59\x58\x40\x6c\x1e\xb3\xf5\x2c\x33\xcb\x2a\x33\x73\x06\x66\x10\xdb\xd8\x60\x94\x15\xfd\x21\x90\x9d\x41\x16\x2c\x2e\x7c\x1b\xf4\xb4\x85\xb0\x34\x47\xb3\x6d\x6b\x16\xe1\x39\x3f\xbb\x07\x79\x4f\x87\x97\x75\x9b\xad\xbb\x53\xa0\x6e\x3b\x33\xb3\x0b\xfa\x71\xc9\x42\x3f\x4c\xd4\x52\xf2\xda\xed\xdd\xdb\xc8\x5c\xf4\xed\x41\xe2\x6c\x7a\xef\xea\x34\x5c\x86\x6f\x9b\xe7\x70\x1a\x79\x83\xdd\xc9\xba\x90\xd1\xc7\xd1\xae\xe7\xa4\x58\xce\xbd\xa9\xd3\xda\x6d\xd7\x17\xae\xd3\x6e\xc6\x2f\xcf\x71\xb6\x5a\x19\xe7\xf0\x67\x7f\xf4\xd8\xb9\x9a\xa7\xef\x0d\xf2\x87\xfe\x08\x3c\x3c\xdb\x9f\xbd\xf0\xb0\xc4\xfe\xe8\x51\xcb\xb4\x83\xb5\x3b\x22\xee\x43\x98\xee\x0f\xc7\xc9\xeb\xd4\xff\xd9\x79\xd4\xc1\xa8\x1e\x09\x1f\xcc\x07\x9d\x10\x82\x4a\x82\xf5\xe8\xb1\x7c\x71\x37\xc7\xd8\x27\x01\xab\x0b\xb1\x7b\xd9\xda\x21\xd6\x52\x7e\x25\xdb\xbe\xc1\x0f\xc2\x27\x92\x8c\xe4\xa2\xb5\xa3\xa1\xb2\x17\x03\x45\xd3\x87\xbb\x2c\x6e\xc7\xb1\xb1\xe8\x8f\x34\xdb\x13\x93\xd6\xe6\xa3\x7e\x95\xeb\xa1\xbb\xec\xcf\xb2\x68\xda\x4b\x36\x79\x53\x2a\x3b\xfa\x24\x4c\xe6\x24\xda\x9e\x0f\x8f\x97\x42\xe7\xc3\x1d\xf5\x8b\x67\xff\x65\xfe\x44\xdf\x1e\xce\xeb\x63\x30\x3c\xbf\x8e\x5f\xc6\xc6\xe5\x52\xad\x0c\x21\x2c\x76\xbe\x5d\xcf\x56\x07\x52\x3a\xbd\x6a\xb4\xa2\x7c\xf0\x64\x1a\x82\xbd\x7a\x36\x5e\xb7\xfd\x8b\x12\x3e\x2d\xb2\xa9\x4c\x89\x7a\x70\xe3\xc2\x8f\x8e\xa2\xbe\x59\xdd\xf1\xfb\x83\x12\xd1\xf8\xfe\x03\x2e\x8e\x6f\x7f\x47\xcb\x7f\x02\x00\x00\xff\xff\xa9\x89\xc7\xcb\xf0\x0d\x00\x00")

func test_certs_node_crt_bytes() ([]byte, error) {
	return bindata_read(
		_test_certs_node_crt,
		"test_certs/node.crt",
	)
}

func test_certs_node_crt() (*asset, error) {
	bytes, err := test_certs_node_crt_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "test_certs/node.crt", size: 3568, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _test_certs_node_key = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\xd3\xb9\xba\xaa\xca\x02\x04\xe0\x9c\xa7\x58\x39\xdf\xfd\x80\xc5\x24\xc1\x0d\xba\x99\x1b\x44\x46\x15\x32\x91\xa1\x11\x68\x14\x90\xe9\xe9\xcf\x3e\x3b\x3e\x15\x54\x52\x51\x05\xff\xff\xfe\x0d\xd4\x4d\xdb\xfb\x09\x23\xf0\xe3\x87\xf6\x15\xc4\xfa\x8f\xa3\xa7\x7f\x17\xea\x6c\xdb\xea\x1d\xd8\x10\x00\x07\xd6\x81\x16\xd3\x5d\xa1\x4f\xf9\x9c\x72\x9e\xa8\xc9\xde\x48\x36\xb1\xa2\x4b\x7d\x1c\xe8\x05\xa4\x8c\x53\xbc\x5b\x9e\xae\x70\xe4\xdd\x0f\xba\xce\x8e\x77\xb6\x53\x8c\xda\x3a\xd2\xa1\x56\xa8\xe1\xb6\xf1\x79\x31\x54\xf8\x04\x03\xec\xc2\x4f\x97\x3d\x59\x64\x8b\xab\x58\x75\xcc\x7c\x62\x21\x79\xc4\xc5\xd4\x29\xf4\x2b\xb1\x6b\xe1\xd7\xbd\xcc\x46\xb7\x44\x88\xa1\xb0\x5c\x76\x97\xa1\xd6\x7c\xbf\x10\xa7\xdd\x33\xb0\x0e\xb0\x20\xca\xee\xa2\xd8\xd3\xd9\xd7\x98\xf9\x45\x1f\x42\xb1\xf6\x95\x8a\xa5\xd0\xde\x74\x47\x9e\xcd\xbc\x5c\x65\x3f\xb0\x35\x10\x00\x48\x81\xc1\x04\x77\xbb\x1e\x75\x68\x1a\xc5\x60\x70\xd8\xd5\x2b\x3e\xfd\xd5\x54\xc5\xfa\x15\xe2\xfd\xad\xbf\x4e\x3c\x17\x8a\x1e\x27\x46\x66\x1f\x88\x43\x3d\xcf\x63\x92\x64\xf0\xad\x3b\xa6\xb7\x38\x07\x95\x4a\xeb\x6f\x1e\x2e\x0f\xf9\x33\xb2\x29\x31\x85\x35\x99\x9d\xe6\xb6\xa7\x76\x82\x90\xd6\xae\xbb\x6c\x32\x4a\x58\x5f\x78\xf8\xcb\x97\x8d\x9a\x31\xc5\x6e\x22\xfa\x7e\x89\x12\x89\x39\x55\x5d\x6e\x53\x53\x1f\xfc\x39\xaf\x85\x35\x8f\xc4\xac\x7d\xb6\xdd\x2b\x6f\x04\xd2\xad\x4c\xca\xb0\x9c\x2f\x34\x7d\xf6\xe0\xa7\x8d\x7d\x8f\x1f\xba\x13\x80\xae\x06\x81\x76\x48\xd0\xbf\xcf\x47\x8c\x32\xf5\x44\xa8\x78\x0e\x72\x6c\xc7\x9f\xd3\x54\x54\x5a\x1a\xd4\x75\xec\x35\xfa\xed\x5b\x4e\xe5\x57\x51\xcb\xeb\x07\xf4\xc4\xf3\x94\xe6\x4f\x5f\x85\x94\xd9\x24\x9f\x98\xc7\xcb\x6c\x9e\x86\x71\x4b\xcb\x0b\xc9\x29\xc2\x14\x17\x89\xa9\x30\x68\x75\xc0\x93\x43\x19\x92\xe7\x87\x7d\xd1\x59\x68\xa0\xf4\x3b\x1e\xdb\xbb\x2d\xe5\x50\xde\x5d\xd7\xd5\xd6\xcc\x31\x59\xe3\x8c\xa2\x16\x3f\x8e\x3b\x87\x36\x35\xb1\x63\xca\x69\xc7\xdb\xfa\x5d\x1e\xa2\x16\x63\x25\xea\x9f\x5b\x6f\x85\x93\xad\xf6\x3c\xf1\x05\x26\xc8\x69\x3e\x40\x20\xe6\xdc\xe0\x14\xb3\x91\xa9\x5c\xdd\x08\xcd\x43\xa5\x39\xb1\xa6\x08\xe2\xdd\x97\x4c\xea\x0a\xfd\x55\x84\x83\x13\xa9\x38\x44\x2e\xe3\xb9\x63\xfe\xf5\x4a\xcb\x5b\xb1\xed\xb6\xeb\x1d\x13\xaf\xee\xad\x5e\xdd\x96\x8b\x9e\x5a\x37\xdc\x75\x98\xf4\x09\x71\xac\x35\x40\x10\x20\x5f\xa3\x06\xb1\x20\xcf\xf1\x3c\x15\xb8\x01\x67\x83\x74\xd5\xaa\xde\x30\x7f\x65\xf2\x6b\xa9\x79\xfa\x15\x96\x50\x42\x0f\xaf\x47\x6f\xbc\x3c\xf8\xdd\x9f\x14\xa3\x4f\xae\xd3\xd0\x64\x13\x34\xe6\x35\x6c\xa8\xbb\x7b\x3e\x4b\x16\xcb\x1b\x68\xf7\x48\x6a\x33\x7a\xd4\xaa\x81\x29\xbb\xa7\xe0\x3d\x2a\x0b\x52\x1a\x72\x78\x37\x17\x7f\x51\xc6\x6c\xb7\xe4\x3b\xc3\xde\x51\x0f\x6d\x2d\xb8\x75\x8b\xe1\x0a\x17\xaa\xe4\x19\x81\x48\xe7\x06\xb4\x16\xc7\x1b\xba\x96\x05\x5c\xde\xa3\x2e\x8b\xad\xe1\x6b\x8d\xbb\x7c\x18\xf9\x8b\xdf\xcd\x5c\x84\xec\xff\xa9\xbf\x7c\x74\x4f\xfb\x6f\x56\xff\x04\x00\x00\xff\xff\xc0\x01\xda\x95\x77\x03\x00\x00")

func test_certs_node_key_bytes() ([]byte, error) {
	return bindata_read(
		_test_certs_node_key,
		"test_certs/node.key",
	)
}

func test_certs_node_key() (*asset, error) {
	bytes, err := test_certs_node_key_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "test_certs/node.key", size: 887, mode: os.FileMode(420), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ui/css/main.css":                    ui_css_main_css,
	"ui/css/rest_explorer.css":           ui_css_rest_explorer_css,
	"ui/index.html":                      ui_index_html,
	"ui/js/controllers/rest_explorer.js": ui_js_controllers_rest_explorer_js,
	"ui/js/main.js":                      ui_js_main_js,
	"ui/templates/rest_explorer.html":    ui_templates_rest_explorer_html,
	"test_certs/ca.crt":                  test_certs_ca_crt,
	"test_certs/node.crt":                test_certs_node_crt,
	"test_certs/node.key":                test_certs_node_key,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func     func() (*asset, error)
	Children map[string]*_bintree_t
}

var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"test_certs": &_bintree_t{nil, map[string]*_bintree_t{
		"ca.crt":   &_bintree_t{test_certs_ca_crt, map[string]*_bintree_t{}},
		"node.crt": &_bintree_t{test_certs_node_crt, map[string]*_bintree_t{}},
		"node.key": &_bintree_t{test_certs_node_key, map[string]*_bintree_t{}},
	}},
	"ui": &_bintree_t{nil, map[string]*_bintree_t{
		"css": &_bintree_t{nil, map[string]*_bintree_t{
			"main.css":          &_bintree_t{ui_css_main_css, map[string]*_bintree_t{}},
			"rest_explorer.css": &_bintree_t{ui_css_rest_explorer_css, map[string]*_bintree_t{}},
		}},
		"index.html": &_bintree_t{ui_index_html, map[string]*_bintree_t{}},
		"js": &_bintree_t{nil, map[string]*_bintree_t{
			"controllers": &_bintree_t{nil, map[string]*_bintree_t{
				"rest_explorer.js": &_bintree_t{ui_js_controllers_rest_explorer_js, map[string]*_bintree_t{}},
			}},
			"main.js": &_bintree_t{ui_js_main_js, map[string]*_bintree_t{}},
		}},
		"templates": &_bintree_t{nil, map[string]*_bintree_t{
			"rest_explorer.html": &_bintree_t{ui_templates_rest_explorer_html, map[string]*_bintree_t{}},
		}},
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	if err != nil { // File
		return RestoreAsset(dir, name)
	} else { // Dir
		for _, child := range children {
			err = RestoreAssets(dir, path.Join(name, child))
			if err != nil {
				return err
			}
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
